{"version":3,"file":"recaptcha.mjs","sources":["../../../src/utils/recaptcha.ts"],"sourcesContent":["import { createScriptTag } from './script';\n\n/**\n * Dynamically loads the recaptcha script.\n * We do not want to load the script on page load unless the user needs it.\n * @param siteKey The reCAPTCHA site key, available from the reCAPTCHA admin page.\n */\nexport function initRecaptcha(siteKey: string): void {\n  if (typeof grecaptcha === 'undefined') {\n    createScriptTag('https://www.google.com/recaptcha/api.js?render=' + siteKey);\n  }\n}\n\n/**\n * Starts a request to generate a recapcha token.\n * @param siteKey The reCAPTCHA site key, available from the reCAPTCHA admin page.\n * @returns Promise to a recaptcha token for the current user.\n */\nexport function getRecaptcha(siteKey: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    grecaptcha.ready(async () => {\n      try {\n        resolve(await grecaptcha.execute(siteKey, { action: 'submit' }));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\n"],"names":[],"mappings":";;AAEA;;;;AAIG;AACG,SAAU,aAAa,CAAC,OAAe,EAAA;AAC3C,IAAA,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;AACrC,QAAA,eAAe,CAAC,iDAAiD,GAAG,OAAO,CAAC,CAAC;AAC9E,KAAA;AACH,CAAC;AAED;;;;AAIG;AACG,SAAU,YAAY,CAAC,OAAe,EAAA;IAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,QAAA,UAAU,CAAC,KAAK,CAAC,YAAW;YAC1B,IAAI;AACF,gBAAA,OAAO,CAAC,MAAM,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAClE,aAAA;AAAC,YAAA,OAAO,GAAG,EAAE;gBACZ,MAAM,CAAC,GAAG,CAAC,CAAC;AACb,aAAA;AACH,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AACL;;;;"}