/**
 * Sorts an array of resources in place by meta.lastUpdated ascending.
 * @param resources Array of resources.
 */
function sortByDateAndPriority(resources) {
    resources.sort(resourceDateComparator);
}
function resourceDateComparator(a, b) {
    const priority1 = getPriorityScore(a);
    const priority2 = getPriorityScore(b);
    if (priority1 > priority2) {
        return 1;
    }
    if (priority1 < priority2) {
        return -1;
    }
    return getTime(a) - getTime(b);
}
function getPriorityScore(resource) {
    const priority = resource.priority;
    if (typeof priority === 'string') {
        return { stat: 4, asap: 3, urgent: 2 }[priority] || 0;
    }
    return 0;
}
function getTime(resource) {
    if (resource.resourceType === 'Communication' && resource.sent) {
        return new Date(resource.sent).getTime();
    }
    if ((resource.resourceType === 'DiagnosticReport' ||
        resource.resourceType === 'Media' ||
        resource.resourceType === 'Observation') &&
        resource.issued) {
        return new Date(resource.issued).getTime();
    }
    if (resource.resourceType === 'DocumentReference' && resource.date) {
        return new Date(resource.date).getTime();
    }
    const dateTime = resource.meta?.lastUpdated;
    if (!dateTime) {
        return 0;
    }
    return new Date(dateTime).getTime();
}

export { sortByDateAndPriority };
//# sourceMappingURL=date.mjs.map
