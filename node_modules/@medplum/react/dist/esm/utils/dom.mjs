/**
 * Kills a browser event.
 * Prevents default behavior.
 * Stops event propagation.
 * @param e The event.
 */
function killEvent(e) {
    e.preventDefault();
    e.stopPropagation();
}
/**
 * Returns true if the element is a checkbox or a table cell containing a checkbox.
 * Table cells containing checkboxes are commonly accidentally clicked.
 * @param el The HTML DOM element.
 * @returns True if the element is a checkbox or a table cell containing a checkbox.
 */
function isCheckboxCell(el) {
    if (isCheckboxElement(el)) {
        return true;
    }
    if (el instanceof HTMLTableCellElement) {
        const children = el.children;
        if (children.length === 1 && isCheckboxElement(children[0])) {
            return true;
        }
    }
    return false;
}
function isCheckboxElement(el) {
    return el instanceof HTMLInputElement && el.type === 'checkbox';
}

export { isCheckboxCell, killEvent };
//# sourceMappingURL=dom.mjs.map
