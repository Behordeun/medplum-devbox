{"version":3,"file":"ResourceInput.mjs","sources":["../../../src/ResourceInput/ResourceInput.tsx"],"sourcesContent":["import { Autocomplete, AutocompleteItem, Group, Loader, Text } from '@mantine/core';\nimport { getDisplayString } from '@medplum/core';\nimport { Patient, Reference, Resource, ResourceType } from '@medplum/fhirtypes';\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { useResource } from '../useResource/useResource';\n\n/**\n * Defines which search parameters will be used by the type ahead to search for each resourceType\n */\nconst SEARCH_CODES: Record<string, string> = {\n  Schedule: '_id',\n  Task: '_id',\n  Patient: 'name',\n  Practitioner: 'name',\n  Questionnaire: 'name',\n  ServiceRequest: '_id',\n  DiagnosticReport: '_id',\n  Specimen: '_id',\n  Observation: 'code',\n  RequestGroup: '_id',\n  ActivityDefinition: 'name',\n  User: 'email:contains',\n};\n\nexport interface ResourceInputProps<T extends Resource = Resource> {\n  readonly resourceType: ResourceType;\n  readonly name: string;\n  readonly defaultValue?: T | Reference<T>;\n  readonly placeholder?: string;\n  readonly loadOnFocus?: boolean;\n  readonly onChange?: (value: T | undefined) => void;\n}\n\nexport function ResourceInput<T extends Resource = Resource>(props: ResourceInputProps<T>): JSX.Element {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.defaultValue);\n  const [value, setValue] = useState<string>(defaultValue ? getDisplayString(defaultValue) : '');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<AutocompleteItem[]>([]);\n\n  useEffect(() => {\n    if (defaultValue) {\n      setValue(getDisplayString(defaultValue));\n    }\n  }, [defaultValue, setValue]);\n\n  async function loadValues(input: string): Promise<void> {\n    setLoading(true);\n    const searchCode = SEARCH_CODES[props.resourceType] || 'name';\n    const searchParams = new URLSearchParams({\n      [searchCode]: input,\n      _count: '10',\n    });\n\n    const resources = await medplum.searchResources(props.resourceType, searchParams);\n    setData(resources.map((resource) => ({ value: getDisplayString(resource), resource })));\n    setLoading(false);\n  }\n\n  async function handleChange(val: string): Promise<void> {\n    setValue(val);\n    return loadValues(val);\n  }\n\n  function handleSelect(item: AutocompleteItem): void {\n    setValue(item.value);\n    setData([]);\n    if (props.onChange) {\n      props.onChange(item.resource);\n    }\n  }\n\n  return (\n    <Autocomplete\n      itemComponent={ItemComponent}\n      value={value}\n      data={data}\n      placeholder={props.placeholder}\n      onFocus={() => loadValues(value)}\n      onChange={handleChange}\n      onItemSubmit={handleSelect}\n      rightSection={loading ? <Loader size={16} /> : null}\n    />\n  );\n}\n\nconst ItemComponent = forwardRef<HTMLDivElement, any>(({ value, resource, ...others }: any, ref) => {\n  return (\n    <div ref={ref} {...others}>\n      <Group noWrap>\n        <ResourceAvatar value={resource} />\n        <div>\n          <Text>{value}</Text>\n          <Text size=\"xs\" color=\"dimmed\">\n            {(resource as Patient).birthDate}\n          </Text>\n        </div>\n      </Group>\n    </div>\n  );\n});\n"],"names":[],"mappings":"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"}