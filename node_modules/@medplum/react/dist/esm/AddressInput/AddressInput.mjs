import { Group, NativeSelect, TextInput } from '@mantine/core';
import React, { useState, useRef } from 'react';

function getLine(address, index) {
    return address && address.line && address.line.length > index ? address.line[index] : '';
}
function setLine(address, index, str) {
    const line = address.line || [];
    while (line.length <= index) {
        line.push('');
    }
    line[index] = str;
    return { ...address, line };
}
function AddressInput(props) {
    const [value, setValue] = useState(props.defaultValue || {});
    const valueRef = useRef();
    valueRef.current = value;
    function setValueWrapper(newValue) {
        setValue(newValue);
        if (props.onChange) {
            props.onChange(newValue);
        }
    }
    function setUse(use) {
        setValueWrapper({ ...valueRef.current, use });
    }
    function setType(type) {
        setValueWrapper({ ...valueRef.current, type });
    }
    function setLine1(line1) {
        setValueWrapper(setLine(valueRef.current || {}, 0, line1));
    }
    function setLine2(line2) {
        setValueWrapper(setLine(valueRef.current || {}, 1, line2));
    }
    function setCity(city) {
        setValueWrapper({ ...valueRef.current, city });
    }
    function setState(state) {
        setValueWrapper({ ...valueRef.current, state });
    }
    function setPostalCode(postalCode) {
        setValueWrapper({ ...valueRef.current, postalCode });
    }
    return (React.createElement(Group, { spacing: "xs", grow: true, noWrap: true },
        React.createElement(NativeSelect, { "data-testid": "address-use", defaultValue: value?.use, onChange: (e) => setUse(e.currentTarget.value), data: ['', 'home', 'work', 'temp', 'old', 'billing'] }),
        React.createElement(NativeSelect, { "data-testid": "address-type", defaultValue: value?.type, onChange: (e) => setType(e.currentTarget.value), data: ['', 'postal', 'physical', 'both'] }),
        React.createElement(TextInput, { placeholder: "Line 1", defaultValue: getLine(value, 0), onChange: (e) => setLine1(e.currentTarget.value) }),
        React.createElement(TextInput, { placeholder: "Line 2", defaultValue: getLine(value, 1), onChange: (e) => setLine2(e.currentTarget.value) }),
        React.createElement(TextInput, { placeholder: "City", defaultValue: value.city, onChange: (e) => setCity(e.currentTarget.value) }),
        React.createElement(TextInput, { placeholder: "State", defaultValue: value.state, onChange: (e) => setState(e.currentTarget.value) }),
        React.createElement(TextInput, { placeholder: "Postal Code", defaultValue: value.postalCode, onChange: (e) => setPostalCode(e.currentTarget.value) })));
}

export { AddressInput };
//# sourceMappingURL=AddressInput.mjs.map
