{"version":3,"file":"SearchFieldEditor.mjs","sources":["../../../src/SearchFieldEditor/SearchFieldEditor.tsx"],"sourcesContent":["import { Button, Modal } from '@mantine/core';\nimport { globalSchema, SearchRequest, stringify, TypeSchema } from '@medplum/core';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { buildFieldNameString } from '../SearchControl/SearchUtils';\n\ninterface SearchFieldEditorProps {\n  visible: boolean;\n  search: SearchRequest;\n  onOk: (search: SearchRequest) => void;\n  onCancel: () => void;\n}\n\nexport function SearchFieldEditor(props: SearchFieldEditorProps): JSX.Element | null {\n  const [state, setState] = useState({\n    search: JSON.parse(stringify(props.search)) as SearchRequest,\n  });\n\n  const availableRef = useRef<HTMLSelectElement>(null);\n  const selectedRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    setState({ search: props.search });\n  }, [props.search]);\n\n  /**\n   * Handles a key down event on the \"available\" field.\n   * If the user presses enter, it is a shortcut for the \"Add\" button.\n   *\n   * @param {KeyboardEvent} e The keyboard event.\n   */\n  function handleAvailableKeyDown(e: React.KeyboardEvent): void {\n    if (e.key === 'Enter') {\n      onAddField();\n    }\n  }\n\n  /**\n   * Handles a double click on the \"available\" field.\n   * If the user double clicks an entry, it is a shortcut for the \"Add\" button.\n   */\n  function handleAvailableDoubleClick(): void {\n    onAddField();\n  }\n\n  /**\n   * Handles a key down event on the \"available\" field.\n   * If the user presses enter, it is a shortcut for the \"Add\" button.\n   *\n   * @param {KeyboardEvent} e The keyboard event.\n   */\n  function handleSelectedKeyDown(e: React.KeyboardEvent): void {\n    if (e.key === 'Enter') {\n      onRemoveField();\n    }\n  }\n\n  /**\n   * Handles a double click on the \"available\" field.\n   * If the user double clicks an entry, it is a shortcut for the \"Add\" button.\n   */\n  function handleSelectedDoubleClick(): void {\n    onRemoveField();\n  }\n\n  /**\n   * Handles a click on the \"Add\" button.\n   * Moves the \"available\" selection into the \"selected\" list.\n   */\n  function onAddField(): void {\n    const currentField = state.search.fields ?? [];\n    const key = availableRef.current?.value;\n    if (key) {\n      const newFields = [...currentField, key];\n      setState({\n        search: {\n          ...state.search,\n          fields: newFields,\n        },\n      });\n    }\n  }\n\n  /**\n   * Handles a click on the \"Remove\" button.\n   * Moves the \"selected\" selection into the \"available\" list.\n   */\n  function onRemoveField(): void {\n    const currentField = state.search.fields ?? [];\n    const key = selectedRef.current?.value;\n    if (key) {\n      const newFields = [...currentField];\n      newFields.splice(newFields.indexOf(key), 1);\n      setState({\n        search: {\n          ...state.search,\n          fields: newFields,\n        },\n      });\n    }\n  }\n\n  /**\n   * Handles a click on the \"Up\" button.\n   * Moves the selection up one position in the list.\n   */\n  function onMoveUp(): void {\n    const currentField = state.search.fields ?? [];\n    const field = selectedRef.current?.value;\n    if (field) {\n      const newFields = [...currentField];\n      const index = newFields.indexOf(field);\n      swapFields(newFields, index, index - 1);\n\n      setState({\n        search: {\n          ...state.search,\n          fields: newFields,\n        },\n      });\n    }\n  }\n\n  /**\n   * Handles a click on the \"Down\" button.\n   * Moves the selection down one position in the list.\n   */\n  function onMoveDown(): void {\n    const currentField = state.search.fields ?? [];\n    const field = selectedRef.current?.value;\n    if (field) {\n      const newFields = [...currentField];\n      const index = newFields.indexOf(field);\n      swapFields(newFields, index, index + 1);\n\n      setState({\n        search: {\n          ...state.search,\n          fields: newFields,\n        },\n      });\n    }\n  }\n\n  /**\n   * Swaps two fields in the search.\n   *\n   * @param {number} i The index of the first field.\n   * @param {number} j The index of the second field.\n   */\n  function swapFields(fields: string[], i: number, j: number): void {\n    const temp = fields[i];\n    fields[i] = fields[j];\n    fields[j] = temp;\n  }\n\n  if (!props.visible) {\n    return null;\n  }\n\n  const resourceType = props.search.resourceType;\n  const typeDef = globalSchema.types[resourceType];\n\n  const selected = state.search.fields ?? [];\n  const available = getFieldsList(typeDef)\n    .filter((field) => !selected?.includes(field))\n    .sort();\n\n  return (\n    <Modal title=\"Fields\" closeButtonLabel=\"Close\" opened={props.visible} onClose={props.onCancel}>\n      <div>\n        <table style={{ margin: 'auto' }}>\n          <thead>\n            <tr>\n              <th colSpan={2} align=\"center\">\n                Available\n              </th>\n              <th colSpan={2} align=\"center\">\n                Selected\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colSpan={2} align=\"center\">\n                <select\n                  ref={availableRef}\n                  size={15}\n                  tabIndex={1}\n                  style={{ width: '200px' }}\n                  onKeyDown={(e) => handleAvailableKeyDown(e)}\n                  onDoubleClick={() => handleAvailableDoubleClick()}\n                  data-testid=\"available\"\n                >\n                  {available.map((key) => (\n                    <option key={key} value={key}>\n                      {buildFieldNameString(key)}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td colSpan={2} align=\"center\">\n                <select\n                  ref={selectedRef}\n                  size={15}\n                  tabIndex={4}\n                  style={{ width: '200px' }}\n                  onKeyDown={(e) => handleSelectedKeyDown(e)}\n                  onDoubleClick={() => handleSelectedDoubleClick()}\n                  data-testid=\"selected\"\n                >\n                  {selected.map((key) => (\n                    <option key={key} value={key}>\n                      {buildFieldNameString(key)}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td align=\"center\">\n                <Button compact variant=\"outline\" onClick={onAddField}>\n                  Add\n                </Button>\n              </td>\n              <td align=\"center\">\n                <Button compact variant=\"outline\" onClick={onRemoveField}>\n                  Remove\n                </Button>\n              </td>\n              <td align=\"center\">\n                <Button compact variant=\"outline\" onClick={onMoveUp}>\n                  Up\n                </Button>\n              </td>\n              <td align=\"center\">\n                <Button compact variant=\"outline\" onClick={onMoveDown}>\n                  Down\n                </Button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n      <Button onClick={() => props.onOk(state.search)}>OK</Button>\n    </Modal>\n  );\n}\n\n/**\n * Returns a list of fields/columns available for a type.\n * The result is the union of properties and search parameters.\n * @param typeSchema The type definition.\n */\nfunction getFieldsList(typeSchema: TypeSchema): string[] {\n  const result = [] as string[];\n  const keys = new Set<string>();\n  const names = new Set<string>();\n\n  // Add properties first\n  for (const key of Object.keys(typeSchema.properties)) {\n    result.push(key);\n    keys.add(key.toLowerCase());\n    names.add(buildFieldNameString(key));\n  }\n\n  // Add search parameters if unique\n  if (typeSchema.searchParams) {\n    for (const code of Object.keys(typeSchema.searchParams)) {\n      const name = buildFieldNameString(code);\n      if (!keys.has(code) && !names.has(name)) {\n        result.push(code);\n        keys.add(code);\n        names.add(buildFieldNameString(code));\n      }\n    }\n  }\n\n  return result;\n}\n"],"names":[],"mappings":";;;;;AAYM,SAAU,iBAAiB,CAAC,KAA6B,EAAA;AAC7D,IAAA,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC;QACjC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAkB;AAC7D,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,YAAY,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;AACrD,IAAA,MAAM,WAAW,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IAEpD,SAAS,CAAC,MAAK;QACb,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC,KAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAEnB;;;;;AAKG;IACH,SAAS,sBAAsB,CAAC,CAAsB,EAAA;AACpD,QAAA,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;AACrB,YAAA,UAAU,EAAE,CAAC;AACd,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,SAAS,0BAA0B,GAAA;AACjC,QAAA,UAAU,EAAE,CAAC;KACd;AAED;;;;;AAKG;IACH,SAAS,qBAAqB,CAAC,CAAsB,EAAA;AACnD,QAAA,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;AACrB,YAAA,aAAa,EAAE,CAAC;AACjB,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,SAAS,yBAAyB,GAAA;AAChC,QAAA,aAAa,EAAE,CAAC;KACjB;AAED;;;AAGG;AACH,IAAA,SAAS,UAAU,GAAA;QACjB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC/C,QAAA,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;AACxC,QAAA,IAAI,GAAG,EAAE;YACP,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,CAAC,CAAC;AACzC,YAAA,QAAQ,CAAC;AACP,gBAAA,MAAM,EAAE;oBACN,GAAG,KAAK,CAAC,MAAM;AACf,oBAAA,MAAM,EAAE,SAAS;AAClB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,SAAS,aAAa,GAAA;QACpB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC/C,QAAA,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;AACvC,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;AACpC,YAAA,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5C,YAAA,QAAQ,CAAC;AACP,gBAAA,MAAM,EAAE;oBACN,GAAG,KAAK,CAAC,MAAM;AACf,oBAAA,MAAM,EAAE,SAAS;AAClB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,SAAS,QAAQ,GAAA;QACf,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC/C,QAAA,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;AACzC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;YACpC,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAExC,YAAA,QAAQ,CAAC;AACP,gBAAA,MAAM,EAAE;oBACN,GAAG,KAAK,CAAC,MAAM;AACf,oBAAA,MAAM,EAAE,SAAS;AAClB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,SAAS,UAAU,GAAA;QACjB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC/C,QAAA,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;AACzC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;YACpC,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAExC,YAAA,QAAQ,CAAC;AACP,gBAAA,MAAM,EAAE;oBACN,GAAG,KAAK,CAAC,MAAM;AACf,oBAAA,MAAM,EAAE,SAAS;AAClB,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;;AAKG;AACH,IAAA,SAAS,UAAU,CAAC,MAAgB,EAAE,CAAS,EAAE,CAAS,EAAA;AACxD,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,QAAA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KAClB;AAED,IAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAClB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAED,IAAA,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC;IAC/C,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAEjD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC3C,IAAA,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC;AACrC,SAAA,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAA,IAAI,EAAE,CAAC;IAEV,QACE,oBAAC,KAAK,EAAA,EAAC,KAAK,EAAC,QAAQ,EAAC,gBAAgB,EAAC,OAAO,EAAC,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAA;AAC3F,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA;AACE,YAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAO,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAA;AAC9B,gBAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA;AACE,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA;AACE,wBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAI,OAAO,EAAE,CAAC,EAAE,KAAK,EAAC,QAAQ,EAEzB,EAAA,WAAA,CAAA;wBACL,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,OAAO,EAAE,CAAC,EAAE,KAAK,EAAC,QAAQ,EAEzB,EAAA,UAAA,CAAA,CACF,CACC;AACR,gBAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA;AACE,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA;AACE,wBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAI,OAAO,EAAE,CAAC,EAAE,KAAK,EAAC,QAAQ,EAAA;AAC5B,4BAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,EACE,GAAG,EAAE,YAAY,EACjB,IAAI,EAAE,EAAE,EACR,QAAQ,EAAE,CAAC,EACX,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EACzB,SAAS,EAAE,CAAC,CAAC,KAAK,sBAAsB,CAAC,CAAC,CAAC,EAC3C,aAAa,EAAE,MAAM,0BAA0B,EAAE,EAAA,aAAA,EACrC,WAAW,EAEtB,EAAA,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,MACjB,KAAQ,CAAA,aAAA,CAAA,QAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAA,EACzB,oBAAoB,CAAC,GAAG,CAAC,CACnB,CACV,CAAC,CACK,CACN;AACL,wBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAI,OAAO,EAAE,CAAC,EAAE,KAAK,EAAC,QAAQ,EAAA;AAC5B,4BAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,EACE,GAAG,EAAE,WAAW,EAChB,IAAI,EAAE,EAAE,EACR,QAAQ,EAAE,CAAC,EACX,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EACzB,SAAS,EAAE,CAAC,CAAC,KAAK,qBAAqB,CAAC,CAAC,CAAC,EAC1C,aAAa,EAAE,MAAM,yBAAyB,EAAE,EACpC,aAAA,EAAA,UAAU,IAErB,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,MAChB,KAAQ,CAAA,aAAA,CAAA,QAAA,EAAA,EAAA,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,IACzB,oBAAoB,CAAC,GAAG,CAAC,CACnB,CACV,CAAC,CACK,CACN,CACF,CACC;AACR,gBAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA;AACE,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA;wBACE,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,KAAK,EAAC,QAAQ,EAAA;AAChB,4BAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,EAAC,OAAO,EAAA,IAAA,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,UAAU,EAAA,EAAA,KAAA,CAE5C,CACN;wBACL,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,KAAK,EAAC,QAAQ,EAAA;AAChB,4BAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,EAAC,OAAO,EAAA,IAAA,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,aAAa,EAAA,EAAA,QAAA,CAE/C,CACN;wBACL,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,KAAK,EAAC,QAAQ,EAAA;AAChB,4BAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,EAAC,OAAO,EAAA,IAAA,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,QAAQ,EAAA,EAAA,IAAA,CAE1C,CACN;wBACL,KAAI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,KAAK,EAAC,QAAQ,EAAA;AAChB,4BAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAC,EAAA,OAAO,EAAC,IAAA,EAAA,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,UAAU,EAE5C,EAAA,MAAA,CAAA,CACN,CACF,CACC,CACF,CACJ;AACN,QAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAC,EAAA,OAAO,EAAE,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAa,EAAA,IAAA,CAAA,CACtD,EACR;AACJ,CAAC;AAED;;;;AAIG;AACH,SAAS,aAAa,CAAC,UAAsB,EAAA;IAC3C,MAAM,MAAM,GAAG,EAAc,CAAC;AAC9B,IAAA,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;AAC/B,IAAA,MAAM,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;;IAGhC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AACpD,QAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5B,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,KAAA;;IAGD,IAAI,UAAU,CAAC,YAAY,EAAE;QAC3B,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;AACvD,YAAA,MAAM,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACxC,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACvC,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACf,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,aAAA;AACF,SAAA;AACF,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAChB;;;;"}