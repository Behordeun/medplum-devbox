import { Stack, Center, Title, Alert, TextInput, Group, Button } from '@mantine/core';
import { normalizeErrorString } from '@medplum/core';
import { IconAlertCircle } from '@tabler/icons';
import React, { useState } from 'react';
import { Form } from '../Form/Form.mjs';
import { Logo } from '../Logo/Logo.mjs';
import { useMedplum } from '../MedplumProvider/MedplumProvider.mjs';

function MfaForm(props) {
    const medplum = useMedplum();
    const [errorMessage, setErrorMessage] = useState(undefined);
    return (React.createElement(Form, { style: { maxWidth: 400 }, onSubmit: (formData) => {
            setErrorMessage(undefined);
            medplum
                .post('auth/mfa/verify', {
                login: props.login,
                token: formData.token,
            })
                .then(props.handleAuthResponse)
                .catch((err) => setErrorMessage(normalizeErrorString(err)));
        } },
        React.createElement(Stack, null,
            React.createElement(Center, { sx: { flexDirection: 'column' } },
                React.createElement(Logo, { size: 32 }),
                React.createElement(Title, null, "Enter MFA code")),
            errorMessage && (React.createElement(Alert, { icon: React.createElement(IconAlertCircle, { size: 16 }), title: "Error", color: "red" }, errorMessage)),
            React.createElement(Stack, null,
                React.createElement(TextInput, { name: "token", label: "MFA code", required: true })),
            React.createElement(Group, { position: "right", mt: "xl" },
                React.createElement(Button, { type: "submit" }, "Submit code")))));
}

export { MfaForm };
//# sourceMappingURL=MfaForm.mjs.map
