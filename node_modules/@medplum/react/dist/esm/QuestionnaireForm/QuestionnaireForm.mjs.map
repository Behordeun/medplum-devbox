{"version":3,"file":"QuestionnaireForm.mjs","sources":["../../../src/QuestionnaireForm/QuestionnaireForm.tsx"],"sourcesContent":["import { Button, Checkbox, Group, NativeSelect, Radio, Stack, Textarea, TextInput, Title } from '@mantine/core';\nimport {\n  capitalize,\n  createReference,\n  deepEquals,\n  getQuestionnaireAnswers,\n  getReferenceString,\n  getTypedPropertyValue,\n  globalSchema,\n  IndexedStructureDefinition,\n  ProfileResource,\n  PropertyType,\n  stringify,\n  TypedValue,\n} from '@medplum/core';\nimport {\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  QuestionnaireItemInitial,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n  Reference,\n} from '@medplum/fhirtypes';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { AttachmentInput } from '../AttachmentInput/AttachmentInput';\nimport { CheckboxFormSection } from '../CheckboxFormSection/CheckboxFormSection';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { Form } from '../Form/Form';\nimport { FormSection } from '../FormSection/FormSection';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { ReferenceInput } from '../ReferenceInput/ReferenceInput';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { useResource } from '../useResource/useResource';\nimport { QuestionnaireItemType } from '../utils/questionnaire';\n\nexport interface QuestionnaireFormProps {\n  questionnaire: Questionnaire | Reference<Questionnaire>;\n  subject?: Reference;\n  submitButtonText?: string;\n  onSubmit: (response: QuestionnaireResponse) => void;\n}\n\nexport function QuestionnaireForm(props: QuestionnaireFormProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const source = medplum.getProfile();\n  const [schema, setSchema] = useState<IndexedStructureDefinition | undefined>();\n  const questionnaire = useResource(props.questionnaire);\n  const [response, setResponse] = useState<QuestionnaireResponse | undefined>();\n  const [answers, setAnswers] = useState<Record<string, QuestionnaireResponseItemAnswer>>({});\n\n  useEffect(() => {\n    medplum\n      .requestSchema('Questionnaire')\n      .then(() => medplum.requestSchema('QuestionnaireResponse'))\n      .then(setSchema)\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setResponse(questionnaire ? buildInitialResponse(questionnaire) : undefined);\n  }, [questionnaire]);\n\n  function setItems(newResponseItems: QuestionnaireResponseItem[]): void {\n    const newResponse: QuestionnaireResponse = {\n      resourceType: 'QuestionnaireResponse',\n      status: 'completed',\n      item: newResponseItems,\n    };\n    setResponse(newResponse);\n    setAnswers(getQuestionnaireAnswers(newResponse));\n  }\n\n  if (!schema || !questionnaire) {\n    return null;\n  }\n\n  return (\n    <Form\n      testid=\"questionnaire-form\"\n      onSubmit={() => {\n        if (props.onSubmit && response) {\n          props.onSubmit({\n            ...response,\n            questionnaire: getReferenceString(questionnaire),\n            subject: props.subject,\n            source: createReference(source as ProfileResource),\n            authored: new Date().toISOString(),\n          });\n        }\n      }}\n    >\n      {questionnaire.title && <Title>{questionnaire.title}</Title>}\n      {questionnaire.item && (\n        <QuestionnaireFormItemArray items={questionnaire.item} answers={answers} onChange={setItems} />\n      )}\n      <Group position=\"right\" mt=\"xl\">\n        <Button type=\"submit\">{props.submitButtonText || 'OK'}</Button>\n      </Group>\n    </Form>\n  );\n}\n\ninterface QuestionnaireFormItemArrayProps {\n  items: QuestionnaireItem[];\n  answers: Record<string, QuestionnaireResponseItemAnswer>;\n  onChange: (newResponseItems: QuestionnaireResponseItem[]) => void;\n}\n\nfunction QuestionnaireFormItemArray(props: QuestionnaireFormItemArrayProps): JSX.Element {\n  const [responseItems, setResponseItems] = useState<QuestionnaireResponseItem[]>(\n    buildInitialResponseItems(props.items)\n  );\n\n  function setResponseItem(index: number, newResponseItem: QuestionnaireResponseItem): void {\n    const newResponseItems = responseItems.slice();\n    newResponseItems[index] = newResponseItem;\n    setResponseItems(newResponseItems);\n    props.onChange(newResponseItems);\n  }\n\n  return (\n    <Stack>\n      {props.items.map((item, index) => {\n        if (!isQuestionEnabled(item, props.answers)) {\n          return null;\n        }\n        if (item.type === QuestionnaireItemType.display) {\n          return <p key={item.linkId}>{item.text}</p>;\n        }\n        if (item.type === QuestionnaireItemType.group) {\n          return (\n            <QuestionnaireFormItem\n              key={item.linkId}\n              item={item}\n              answers={props.answers}\n              onChange={(newResponseItem) => setResponseItem(index, newResponseItem)}\n            />\n          );\n        }\n        if (item.type === QuestionnaireItemType.boolean) {\n          const initial = item.initial && item.initial.length > 0 ? item.initial[0] : undefined;\n          return (\n            <CheckboxFormSection key={item.linkId} title={item.text} htmlFor={item.linkId}>\n              <Checkbox\n                id={item.linkId}\n                name={item.linkId}\n                defaultChecked={initial?.valueBoolean}\n                onChange={(e) =>\n                  setResponseItem(index, {\n                    linkId: item.linkId,\n                    text: item.text,\n                    answer: [{ valueBoolean: e.currentTarget.checked }],\n                  })\n                }\n              />\n            </CheckboxFormSection>\n          );\n        }\n        return (\n          <FormSection key={item.linkId} htmlFor={item.linkId} title={item.text || ''}>\n            <QuestionnaireFormItem\n              item={item}\n              answers={props.answers}\n              onChange={(newResponseItem) => setResponseItem(index, newResponseItem)}\n            />\n          </FormSection>\n        );\n      })}\n    </Stack>\n  );\n}\n\nexport interface QuestionnaireFormItemProps {\n  item: QuestionnaireItem;\n  answers: Record<string, QuestionnaireResponseItemAnswer>;\n  onChange: (newResponseItem: QuestionnaireResponseItem) => void;\n}\n\nexport function QuestionnaireFormItem(props: QuestionnaireFormItemProps): JSX.Element | null {\n  const item = props.item;\n\n  const type = item.type as QuestionnaireItemType;\n  if (!type) {\n    return null;\n  }\n\n  const name = item.linkId;\n  if (!name) {\n    return null;\n  }\n\n  const initial = item.initial && item.initial.length > 0 ? item.initial[0] : undefined;\n\n  function onChangeItem(newResponseItems: QuestionnaireResponseItem[]): void {\n    props.onChange({\n      linkId: item.linkId,\n      text: item.text,\n      item: newResponseItems,\n    });\n  }\n\n  function onChangeAnswer(newResponseAnswer: QuestionnaireResponseItemAnswer): void {\n    props.onChange({\n      linkId: item.linkId,\n      text: item.text,\n      answer: [newResponseAnswer],\n    });\n  }\n\n  switch (type) {\n    case QuestionnaireItemType.group:\n      return (\n        <div>\n          <h3>{item.text}</h3>\n          {item.item && (\n            <QuestionnaireFormItemArray items={item.item} answers={props.answers} onChange={onChangeItem} />\n          )}\n        </div>\n      );\n    case QuestionnaireItemType.boolean:\n      return (\n        <Checkbox\n          id={name}\n          name={name}\n          defaultChecked={initial?.valueBoolean}\n          onChange={(e) => onChangeAnswer({ valueBoolean: e.currentTarget.checked })}\n        />\n      );\n    case QuestionnaireItemType.decimal:\n      return (\n        <TextInput\n          type=\"number\"\n          step=\"any\"\n          id={name}\n          name={name}\n          defaultValue={initial?.valueDecimal}\n          onChange={(e) => onChangeAnswer({ valueDecimal: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.integer:\n      return (\n        <TextInput\n          type=\"number\"\n          step={1}\n          id={name}\n          name={name}\n          defaultValue={initial?.valueInteger}\n          onChange={(e) => onChangeAnswer({ valueInteger: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.date:\n      return (\n        <TextInput\n          type=\"date\"\n          id={name}\n          name={name}\n          defaultValue={initial?.valueDate}\n          onChange={(e) => onChangeAnswer({ valueDate: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.dateTime:\n      return (\n        <DateTimeInput\n          name={name}\n          defaultValue={initial?.valueDateTime}\n          onChange={(newValue: string) => onChangeAnswer({ valueDateTime: newValue })}\n        />\n      );\n    case QuestionnaireItemType.time:\n      return (\n        <TextInput\n          type=\"time\"\n          id={name}\n          name={name}\n          defaultValue={initial?.valueTime}\n          onChange={(e) => onChangeAnswer({ valueTime: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.string:\n    case QuestionnaireItemType.url:\n      return (\n        <TextInput\n          id={name}\n          name={name}\n          defaultValue={initial?.valueString}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.text:\n      return (\n        <Textarea\n          id={name}\n          name={name}\n          defaultValue={initial?.valueString}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.attachment:\n      return (\n        <AttachmentInput\n          name={name}\n          defaultValue={initial?.valueAttachment}\n          onChange={(newValue) => onChangeAnswer({ valueAttachment: newValue })}\n        />\n      );\n    case QuestionnaireItemType.reference:\n      return (\n        <ReferenceInput\n          name={name}\n          defaultValue={initial?.valueReference}\n          onChange={(newValue) => onChangeAnswer({ valueReference: newValue })}\n        />\n      );\n    case QuestionnaireItemType.quantity:\n      return (\n        <QuantityInput\n          name={name}\n          defaultValue={initial?.valueQuantity}\n          onChange={(newValue) => onChangeAnswer({ valueQuantity: newValue })}\n        />\n      );\n    case QuestionnaireItemType.choice:\n    case QuestionnaireItemType.openChoice:\n      if (isDropDownChoice(item)) {\n        return (\n          <QuestionnaireChoiceDropDownInput name={name} item={item} initial={initial} onChangeAnswer={onChangeAnswer} />\n        );\n      } else {\n        return (\n          <QuestionnaireChoiceRadioInput name={name} item={item} initial={initial} onChangeAnswer={onChangeAnswer} />\n        );\n      }\n  }\n\n  return null;\n}\n\ninterface QuestionnaireChoiceInputProps {\n  name: string;\n  item: QuestionnaireItem;\n  initial: QuestionnaireItemInitial | undefined;\n  onChangeAnswer: (newResponseAnswer: QuestionnaireResponseItemAnswer) => void;\n}\n\nfunction QuestionnaireChoiceDropDownInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial } = props;\n  const initialValue = getTypedPropertyValue({ type: 'QuestionnaireItemInitial', value: initial }, 'value') as\n    | TypedValue\n    | undefined;\n\n  const data = [''];\n  if (item.answerOption) {\n    for (const option of item.answerOption) {\n      const optionValue = getTypedPropertyValue(\n        { type: 'QuestionnaireItemAnswerOption', value: option },\n        'value'\n      ) as TypedValue;\n      data.push(typedValueToString(optionValue) as string);\n    }\n  }\n\n  return (\n    <NativeSelect\n      id={name}\n      name={name}\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n        const index = e.currentTarget.selectedIndex;\n        if (index === 0) {\n          props.onChangeAnswer({});\n          return;\n        }\n        const option = (item.answerOption as QuestionnaireItemAnswerOption[])[index - 1];\n        const optionValue = getTypedPropertyValue(\n          { type: 'QuestionnaireItemAnswerOption', value: option },\n          'value'\n        ) as TypedValue;\n        const propertyName = 'value' + capitalize(optionValue.type);\n        props.onChangeAnswer({ [propertyName]: optionValue.value });\n      }}\n      defaultValue={typedValueToString(initialValue)}\n      data={data}\n    />\n  );\n}\n\nfunction typedValueToString(typedValue: TypedValue | undefined): string | undefined {\n  if (!typedValue) {\n    return undefined;\n  }\n  if (typedValue.type === 'CodeableConcept') {\n    return typedValue.value.coding[0].display;\n  }\n  if (typedValue.type === 'Coding') {\n    return typedValue.value.display;\n  }\n  return typedValue.value.toString();\n}\n\nfunction QuestionnaireChoiceRadioInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, onChangeAnswer } = props;\n  const valueElementDefinition = globalSchema.types['QuestionnaireItemAnswerOption'].properties['value[x]'];\n  const initialValue = getTypedPropertyValue({ type: 'QuestionnaireItemInitial', value: initial }, 'value') as\n    | TypedValue\n    | undefined;\n\n  const options: [string, TypedValue][] = [];\n  let defaultValue = undefined;\n  if (item.answerOption) {\n    for (let i = 0; i < item.answerOption.length; i++) {\n      const option = item.answerOption[i];\n      const optionName = `${name}-option-${i}`;\n      const optionValue = getTypedPropertyValue(\n        { type: 'QuestionnaireItemAnswerOption', value: option },\n        'value'\n      ) as TypedValue;\n      if (initialValue && stringify(optionValue) === stringify(initialValue)) {\n        defaultValue = optionName;\n      }\n      options.push([optionName, optionValue]);\n    }\n  }\n\n  return (\n    <Radio.Group\n      name={name}\n      orientation=\"vertical\"\n      defaultValue={defaultValue}\n      onChange={(newValue) => {\n        const option = options.find((option) => option[0] === newValue);\n        if (option) {\n          const optionValue = option[1];\n          const propertyName = 'value' + capitalize(optionValue.type);\n          onChangeAnswer({ [propertyName]: optionValue.value });\n        }\n      }}\n    >\n      {options.map(([optionName, optionValue]) => (\n        <Radio\n          key={optionName}\n          id={optionName}\n          value={optionName}\n          label={\n            <ResourcePropertyDisplay\n              property={valueElementDefinition}\n              propertyType={optionValue.type as PropertyType}\n              value={optionValue.value}\n            />\n          }\n        />\n      ))}\n    </Radio.Group>\n  );\n}\n\nfunction buildInitialResponse(questionnaire: Questionnaire): QuestionnaireResponse {\n  const response: QuestionnaireResponse = {\n    resourceType: 'QuestionnaireResponse',\n    questionnaire: getReferenceString(questionnaire),\n    item: buildInitialResponseItems(questionnaire.item),\n  };\n\n  return response;\n}\n\nfunction buildInitialResponseItems(items: QuestionnaireItem[] | undefined): QuestionnaireResponseItem[] {\n  return items?.map(buildInitialResponseItem) ?? [];\n}\n\nfunction buildInitialResponseItem(item: QuestionnaireItem): QuestionnaireResponseItem {\n  return {\n    linkId: item.linkId,\n    text: item.text,\n    item: buildInitialResponseItems(item.item),\n    answer: item.initial?.map(buildInitialResponseAnswer) ?? [],\n  };\n}\n\nfunction buildInitialResponseAnswer(answer: QuestionnaireItemInitial): QuestionnaireResponseItemAnswer {\n  // This works because QuestionnaireItemInitial and QuestionnaireResponseItemAnswer\n  // have the same properties.\n  return { ...answer };\n}\n\nfunction isDropDownChoice(item: QuestionnaireItem): boolean {\n  return !!item.extension?.some(\n    (e) =>\n      e.url === 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl' &&\n      e.valueCodeableConcept?.coding?.[0]?.code === 'drop-down'\n  );\n}\n\nexport function isQuestionEnabled(\n  item: QuestionnaireItem,\n  answers: Record<string, QuestionnaireResponseItemAnswer>\n): boolean {\n  if (!item.enableWhen) {\n    return true;\n  }\n  const enableBehavior = item.enableBehavior || 'any';\n  for (const enableWhen of item.enableWhen) {\n    const expectedAnswer = getTypedPropertyValue(\n      {\n        type: 'QuestionnaireItemEnableWhen',\n        value: enableWhen,\n      },\n      'answer[x]'\n    );\n    const actualAnswer = getTypedPropertyValue(\n      {\n        type: 'QuestionnaireResponseItemAnswer',\n        value: answers[enableWhen.question as string],\n      },\n      'value[x]'\n    );\n    const match = deepEquals(expectedAnswer, actualAnswer);\n    if (enableBehavior === 'any' && match) {\n      return true;\n    }\n    if (enableBehavior === 'all' && !match) {\n      return false;\n    }\n  }\n  if (enableBehavior === 'any') {\n    return false;\n  } else {\n    return true;\n  }\n}\n"],"names":[],"mappings":"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"}