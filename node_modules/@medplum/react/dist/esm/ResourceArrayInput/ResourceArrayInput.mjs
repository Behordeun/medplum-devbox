import { ActionIcon } from '@mantine/core';
import { IconCircleMinus, IconCirclePlus } from '@tabler/icons';
import React, { useState, useRef } from 'react';
import { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput.mjs';
import { killEvent } from '../utils/dom.mjs';

function ResourceArrayInput(props) {
    const [values, setValues] = useState(props.defaultValue && Array.isArray(props.defaultValue) ? props.defaultValue : []);
    const valuesRef = useRef();
    valuesRef.current = values;
    function setValuesWrapper(newValues) {
        setValues(newValues);
        if (props.onChange) {
            props.onChange(newValues);
        }
    }
    return (React.createElement("table", { style: { width: '100%', borderCollapse: 'collapse' } },
        React.createElement("colgroup", null,
            React.createElement("col", { width: "97%" }),
            React.createElement("col", { width: "3%" })),
        React.createElement("tbody", null,
            values.map((v, index) => (React.createElement("tr", { key: `${index}-${values.length}` },
                React.createElement("td", null,
                    React.createElement(ResourcePropertyInput, { arrayElement: true, property: props.property, name: props.name + '.' + index, defaultValue: v, onChange: (newValue) => {
                            const copy = [...valuesRef.current];
                            copy[index] = newValue;
                            setValuesWrapper(copy);
                        } })),
                React.createElement("td", { style: { textAlign: 'right' } },
                    React.createElement(ActionIcon, { title: "Remove", size: "sm", onClick: (e) => {
                            killEvent(e);
                            const copy = [...valuesRef.current];
                            copy.splice(index, 1);
                            setValuesWrapper(copy);
                        } },
                        React.createElement(IconCircleMinus, null)))))),
            React.createElement("tr", null,
                React.createElement("td", null),
                React.createElement("td", { style: { textAlign: 'right' } },
                    React.createElement(ActionIcon, { title: "Add", size: "sm", color: "green", onClick: (e) => {
                            killEvent(e);
                            const copy = [...valuesRef.current];
                            copy.push(undefined);
                            setValuesWrapper(copy);
                        } },
                        React.createElement(IconCirclePlus, null)))))));
}

export { ResourceArrayInput };
//# sourceMappingURL=ResourceArrayInput.mjs.map
