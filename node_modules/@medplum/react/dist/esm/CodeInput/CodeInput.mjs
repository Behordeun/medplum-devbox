import React, { useState } from 'react';
import { ValueSetAutocomplete } from '../ValueSetAutocomplete/ValueSetAutocomplete.mjs';

function CodeInput(props) {
    const [value, setValue] = useState(props.defaultValue);
    function handleChange(newValues) {
        const newValue = newValues[0];
        const newCode = valueSetElementToCode(newValue);
        setValue(newCode);
        if (props.onChange) {
            props.onChange(newCode);
        }
    }
    return (React.createElement(ValueSetAutocomplete, { elementDefinition: props.property, name: props.name, placeholder: props.placeholder, defaultValue: codeToValueSetElement(value), onChange: handleChange }));
}
function codeToValueSetElement(code) {
    return code ? { code } : undefined;
}
function valueSetElementToCode(element) {
    return element?.code;
}

export { CodeInput };
//# sourceMappingURL=CodeInput.mjs.map
