import { globalSchema, getSearchParameterDetails, SearchParameterType, formatDateTime } from '@medplum/core';
import React from 'react';
import { ResourceName } from '../ResourceName/ResourceName.mjs';

function SearchFilterValueDisplay(props) {
    const { resourceType, filter } = props;
    const searchParam = globalSchema.types[resourceType]?.searchParams?.[filter.code];
    if (searchParam) {
        if (searchParam.type === 'reference') {
            return React.createElement(ResourceName, { value: { reference: filter.value } });
        }
        const searchParamDetails = getSearchParameterDetails(resourceType, searchParam);
        if (filter.code === '_lastUpdated' || searchParamDetails.type === SearchParameterType.DATETIME) {
            return React.createElement(React.Fragment, null, formatDateTime(filter.value));
        }
    }
    return React.createElement(React.Fragment, null, filter.value);
}

export { SearchFilterValueDisplay };
//# sourceMappingURL=SearchFilterValueDisplay.mjs.map
