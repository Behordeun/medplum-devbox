import { getReferenceString, createReference } from '@medplum/core';
import React from 'react';
import { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline.mjs';

const searches = [
    '$/_history',
    'Communication?subject=$',
    'Device?patient=$',
    'DeviceRequest?patient=$',
    'DiagnosticReport?subject=$',
    'Media?subject=$',
    'ServiceRequest?subject=$',
];
function PatientTimeline(props) {
    return (React.createElement(ResourceTimeline, { value: props.patient, buildSearchRequests: (resource) => ({
            resourceType: 'Bundle',
            type: 'batch',
            entry: searches.map((search) => ({
                request: {
                    method: 'GET',
                    url: search.replaceAll('$', getReferenceString(resource)),
                },
            })),
        }), createCommunication: (resource, sender, text) => ({
            resourceType: 'Communication',
            status: 'completed',
            subject: createReference(resource),
            sender: createReference(sender),
            sent: new Date().toISOString(),
            payload: [{ contentString: text }],
        }), createMedia: (resource, operator, content) => ({
            resourceType: 'Media',
            status: 'completed',
            subject: createReference(resource),
            operator: createReference(operator),
            issued: new Date().toISOString(),
            content,
        }) }));
}

export { PatientTimeline };
//# sourceMappingURL=PatientTimeline.mjs.map
