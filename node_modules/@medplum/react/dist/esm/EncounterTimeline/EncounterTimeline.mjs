import { getReferenceString, createReference } from '@medplum/core';
import React from 'react';
import { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline.mjs';

function EncounterTimeline(props) {
    return (React.createElement(ResourceTimeline, { value: props.encounter, buildSearchRequests: (resource) => ({
            resourceType: 'Bundle',
            type: 'batch',
            entry: [
                {
                    request: {
                        method: 'GET',
                        url: `${getReferenceString(resource)}/_history`,
                    },
                },
                {
                    request: {
                        method: 'GET',
                        url: `Communication?encounter=${getReferenceString(resource)}`,
                    },
                },
                {
                    request: {
                        method: 'GET',
                        url: `Media?encounter=${getReferenceString(resource)}`,
                    },
                },
            ],
        }), createCommunication: (resource, sender, text) => ({
            resourceType: 'Communication',
            status: 'completed',
            encounter: createReference(resource),
            subject: resource.subject,
            sender: createReference(sender),
            sent: new Date().toISOString(),
            payload: [{ contentString: text }],
        }), createMedia: (resource, operator, content) => ({
            resourceType: 'Media',
            status: 'completed',
            encounter: createReference(resource),
            subject: resource.subject,
            operator: createReference(operator),
            issued: new Date().toISOString(),
            content,
        }) }));
}

export { EncounterTimeline };
//# sourceMappingURL=EncounterTimeline.mjs.map
