import React, { useRef } from 'react';
import { useMedplum } from '../MedplumProvider/MedplumProvider.mjs';
import { killEvent } from '../utils/dom.mjs';

function AttachmentButton(props) {
    const medplum = useMedplum();
    const fileInputRef = useRef(null);
    function onClick(e) {
        killEvent(e);
        fileInputRef.current?.click();
    }
    function onFileChange(e) {
        killEvent(e);
        const files = e.target.files;
        if (files) {
            Array.from(files).forEach(processFile);
        }
    }
    /**
     * Processes a single file.
     *
     * @param {File} file The file descriptor.
     */
    function processFile(file) {
        if (!file) {
            return;
        }
        const fileName = file.name;
        if (!fileName) {
            return;
        }
        if (props.onUploadStart) {
            props.onUploadStart();
        }
        const filename = file.name;
        const contentType = file.type || 'application/octet-stream';
        medplum
            .createBinary(file, filename, contentType, props.onUploadProgress)
            .then((binary) => {
            props.onUpload({
                contentType: binary.contentType,
                url: binary.url,
                title: filename,
            });
        })
            .catch((outcome) => {
            alert(outcome?.issue?.[0]?.details?.text);
        });
    }
    return (React.createElement(React.Fragment, null,
        React.createElement("input", { type: "file", "data-testid": "upload-file-input", style: { display: 'none' }, ref: fileInputRef, onChange: (e) => onFileChange(e) }),
        props.children({ onClick })));
}

export { AttachmentButton };
//# sourceMappingURL=AttachmentButton.mjs.map
