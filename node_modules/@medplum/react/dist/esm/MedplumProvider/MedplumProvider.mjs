import React, { createContext, useState, useEffect, useContext } from 'react';

const reactContext = createContext(undefined);
/**
 * The MedplumProvider component provides Medplum context state.
 *
 * Medplum context includes:
 *   1) medplum - Medplum client library
 *   2) profile - The current user profile (if signed in)
 */
function MedplumProvider(props) {
    const medplum = props.medplum;
    const [state, setState] = useState({
        profile: medplum.getProfile(),
        loading: false,
    });
    useEffect(() => {
        function eventListener() {
            setState({
                ...state,
                profile: medplum.getProfile(),
            });
        }
        medplum.addEventListener('change', eventListener);
        return () => medplum.removeEventListeneer('change', eventListener);
    }, [medplum, state]);
    const medplumContext = {
        ...state,
        medplum,
    };
    return React.createElement(reactContext.Provider, { value: medplumContext }, props.children);
}
/**
 * Returns the MedplumContext instance.
 */
function useMedplumContext() {
    return useContext(reactContext);
}
/**
 * Returns the MedplumClient instance.
 * This is a shortcut for useMedplumContext().medplum.
 */
function useMedplum() {
    return useMedplumContext().medplum;
}
/**
 * Returns the current Medplum user profile (if signed in).
 * This is a shortcut for useMedplumContext().profile.
 * @returns The current user profile.
 */
function useMedplumProfile() {
    return useMedplumContext().profile;
}

export { MedplumProvider, useMedplum, useMedplumContext, useMedplumProfile };
//# sourceMappingURL=MedplumProvider.mjs.map
