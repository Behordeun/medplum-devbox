import { createStyles } from '@mantine/core';
import { stringify } from '@medplum/core';
import React from 'react';
import { diff } from '../utils/diff.mjs';

const useStyles = createStyles((theme) => ({
    removed: {
        color: theme.colors.red[7],
        textDecoration: 'line-through',
    },
    added: {
        color: theme.colors.green[7],
    },
}));
function ResourceDiff(props) {
    let originalResource = props.original;
    let revisedResource = props.revised;
    if (props.ignoreMeta) {
        originalResource = { ...originalResource, meta: undefined };
        revisedResource = { ...revisedResource, meta: undefined };
    }
    const original = stringify(originalResource, true).match(/[^\r\n]+/g);
    const revised = stringify(revisedResource, true).match(/[^\r\n]+/g);
    const deltas = diff(original, revised);
    return (React.createElement("pre", { style: { color: 'gray' } }, deltas.map((delta, index) => (React.createElement(ChangeDiff, { key: 'delta' + index, delta: delta })))));
}
function ChangeDiff(props) {
    const { classes } = useStyles();
    return (React.createElement(React.Fragment, null,
        "...",
        React.createElement("br", null),
        props.delta.original.lines.length > 0 && (React.createElement("div", { className: classes.removed }, props.delta.original.lines.join('\n'))),
        props.delta.revised.lines.length > 0 && (React.createElement("div", { className: classes.added }, props.delta.revised.lines.join('\n'))),
        "...",
        React.createElement("br", null)));
}

export { ResourceDiff };
//# sourceMappingURL=ResourceDiff.mjs.map
