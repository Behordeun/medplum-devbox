import { ResourceType } from '@medplum/fhirtypes';
export declare const DEFAULT_SEARCH_COUNT = 20;
export interface SearchRequest {
    readonly resourceType: ResourceType;
    filters?: Filter[];
    sortRules?: SortRule[];
    offset?: number;
    count?: number;
    fields?: string[];
    name?: string;
    total?: 'none' | 'estimate' | 'accurate';
    revInclude?: string;
}
export interface Filter {
    code: string;
    operator: Operator;
    value: string;
    unitSystem?: string;
    unitCode?: string;
}
export interface SortRule {
    code: string;
    descending?: boolean;
}
/**
 * Search operators.
 * These operators represent "modifiers" and "prefixes" in FHIR search.
 * See: https://www.hl7.org/fhir/search.html
 */
export declare enum Operator {
    EQUALS = "eq",
    NOT_EQUALS = "ne",
    GREATER_THAN = "gt",
    LESS_THAN = "lt",
    GREATER_THAN_OR_EQUALS = "ge",
    LESS_THAN_OR_EQUALS = "le",
    STARTS_AFTER = "sa",
    ENDS_BEFORE = "eb",
    APPROXIMATELY = "ap",
    CONTAINS = "contains",
    EXACT = "exact",
    TEXT = "text",
    NOT = "not",
    ABOVE = "above",
    BELOW = "below",
    IN = "in",
    NOT_IN = "not-in",
    OF_TYPE = "of-type",
    MISSING = "missing"
}
/**
 * Parses a URL into a SearchRequest.
 *
 * See the FHIR search spec: http://hl7.org/fhir/r4/search.html
 *
 * @param url The URL to parse.
 * @returns Parsed search definition.
 */
export declare function parseSearchDefinition(url: string): SearchRequest;
/**
 * Formats a search definition object into a query string.
 * Note: The return value does not include the resource type.
 * @param {!SearchRequest} definition The search definition.
 * @returns Formatted URL.
 */
export declare function formatSearchQuery(definition: SearchRequest): string;
