import { arrayBufferToHex } from './utils.mjs';

/**
 * Returns a cryptographically secure random string.
 */
function getRandomString() {
    const randomItems = new Uint32Array(28);
    crypto.getRandomValues(randomItems);
    return arrayBufferToHex(randomItems.buffer);
}
/**
 * Encrypts a string with SHA256 encryption.
 * @param str
 */
async function encryptSHA256(str) {
    return crypto.subtle.digest('SHA-256', new TextEncoder().encode(str));
}

export { encryptSHA256, getRandomString };
//# sourceMappingURL=crypto.mjs.map
