import { __classPrivateFieldSet, __classPrivateFieldGet } from './node_modules/tslib/tslib.es6.mjs';

/*
 * Based on: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget
 */
var _EventTarget_listeners;
class EventTarget {
    constructor() {
        _EventTarget_listeners.set(this, void 0);
        __classPrivateFieldSet(this, _EventTarget_listeners, {}, "f");
    }
    addEventListener(type, callback) {
        if (!__classPrivateFieldGet(this, _EventTarget_listeners, "f")[type]) {
            __classPrivateFieldGet(this, _EventTarget_listeners, "f")[type] = [];
        }
        __classPrivateFieldGet(this, _EventTarget_listeners, "f")[type].push(callback);
    }
    removeEventListeneer(type, callback) {
        const array = __classPrivateFieldGet(this, _EventTarget_listeners, "f")[type];
        if (!array) {
            return;
        }
        for (let i = 0; i < array.length; i++) {
            if (array[i] === callback) {
                array.splice(i, 1);
                return;
            }
        }
    }
    dispatchEvent(event) {
        const array = __classPrivateFieldGet(this, _EventTarget_listeners, "f")[event.type];
        if (array) {
            array.forEach((listener) => listener.call(this, event));
        }
        return !event.defaultPrevented;
    }
}
_EventTarget_listeners = new WeakMap();

export { EventTarget };
//# sourceMappingURL=eventtarget.mjs.map
