{"version":3,"file":"cache.mjs","sources":["../../src/cache.ts"],"sourcesContent":["/**\n * LRU cache (least recently used)\n * Source: https://stackoverflow.com/a/46432113\n */\nexport class LRUCache<T> {\n  readonly #max: number;\n  readonly #cache: Map<string, T>;\n\n  constructor(max = 10) {\n    this.#max = max;\n    this.#cache = new Map();\n  }\n\n  /**\n   * Deletes all values from the cache.\n   */\n  clear(): void {\n    this.#cache.clear();\n  }\n\n  /**\n   * Returns the value for the given key.\n   * @param key The key to retrieve.\n   * @returns The value if found; undefined otherwise.\n   */\n  get(key: string): T | undefined {\n    const item = this.#cache.get(key);\n    if (item) {\n      this.#cache.delete(key);\n      this.#cache.set(key, item);\n    }\n    return item;\n  }\n\n  /**\n   * Sets the value for the given key.\n   * @param key The key to set.\n   * @param val The value to set.\n   */\n  set(key: string, val: T): void {\n    if (this.#cache.has(key)) {\n      this.#cache.delete(key);\n    } else if (this.#cache.size >= this.#max) {\n      this.#cache.delete(this.#first());\n    }\n    this.#cache.set(key, val);\n  }\n\n  /**\n   * Deletes the value for the given key.\n   * @param key The key to delete.\n   */\n  delete(key: string): void {\n    this.#cache.delete(key);\n  }\n\n  /**\n   * Returns the list of all keys in the cache.\n   * @returns The array of keys in the cache.\n   */\n  keys(): IterableIterator<string> {\n    return this.#cache.keys();\n  }\n\n  #first(): string {\n    // This works because the Map class maintains ordered keys.\n    return this.#cache.keys().next().value;\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;;AAGG;MACU,QAAQ,CAAA;IAInB,WAAY,CAAA,GAAG,GAAG,EAAE,EAAA;;QAHpB,aAAsB,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;QACtB,eAAgC,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAG9B,QAAA,sBAAA,CAAA,IAAI,EAAA,aAAA,EAAQ,GAAG,EAAA,GAAA,CAAA,CAAC;AAChB,QAAA,sBAAA,CAAA,IAAI,EAAU,eAAA,EAAA,IAAI,GAAG,EAAE,MAAA,CAAC;KACzB;AAED;;AAEG;IACH,KAAK,GAAA;AACH,QAAA,sBAAA,CAAA,IAAI,EAAA,eAAA,EAAA,GAAA,CAAO,CAAC,KAAK,EAAE,CAAC;KACrB;AAED;;;;AAIG;AACH,IAAA,GAAG,CAAC,GAAW,EAAA;QACb,MAAM,IAAI,GAAG,sBAAA,CAAA,IAAI,EAAA,eAAA,EAAA,GAAA,CAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,sBAAA,CAAA,IAAI,EAAO,eAAA,EAAA,GAAA,CAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,sBAAA,CAAA,IAAI,uBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC5B,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;AAIG;IACH,GAAG,CAAC,GAAW,EAAE,GAAM,EAAA;QACrB,IAAI,sBAAA,CAAA,IAAI,EAAO,eAAA,EAAA,GAAA,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACxB,YAAA,sBAAA,CAAA,IAAI,EAAO,eAAA,EAAA,GAAA,CAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACzB,SAAA;aAAM,IAAI,sBAAA,CAAA,IAAI,EAAO,eAAA,EAAA,GAAA,CAAA,CAAC,IAAI,IAAI,sBAAA,CAAA,IAAI,EAAA,aAAA,EAAA,GAAA,CAAK,EAAE;AACxC,YAAA,sBAAA,CAAA,IAAI,EAAA,eAAA,EAAA,GAAA,CAAO,CAAC,MAAM,CAAC,sBAAA,CAAA,IAAI,EAAA,mBAAA,EAAA,GAAA,EAAA,eAAA,CAAO,CAAX,IAAA,CAAA,IAAI,CAAS,CAAC,CAAC;AACnC,SAAA;QACD,sBAAA,CAAA,IAAI,uBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC3B;AAED;;;AAGG;AACH,IAAA,MAAM,CAAC,GAAW,EAAA;AAChB,QAAA,sBAAA,CAAA,IAAI,EAAO,eAAA,EAAA,GAAA,CAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACzB;AAED;;;AAGG;IACH,IAAI,GAAA;AACF,QAAA,OAAO,uBAAA,IAAI,EAAA,eAAA,EAAA,GAAA,CAAO,CAAC,IAAI,EAAE,CAAC;KAC3B;AAMF,CAAA;;;IAFG,OAAO,sBAAA,CAAA,IAAI,EAAA,eAAA,EAAA,GAAA,CAAO,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACzC,CAAC;;;;"}