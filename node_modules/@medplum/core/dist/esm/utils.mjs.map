{"version":3,"file":"utils.mjs","sources":["../../src/utils.ts"],"sourcesContent":["import {\n  Attachment,\n  CodeableConcept,\n  Device,\n  Extension,\n  Identifier,\n  ObservationDefinition,\n  ObservationDefinitionQualifiedInterval,\n  Patient,\n  Practitioner,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n  Range,\n  Reference,\n  RelatedPerson,\n  Resource,\n} from '@medplum/fhirtypes';\nimport { formatHumanName } from './format';\n\n/**\n * @internal\n */\nexport type ProfileResource = Patient | Practitioner | RelatedPerson;\n\n/**\n * Creates a reference resource.\n * @param resource The FHIR reesource.\n * @returns A reference resource.\n */\nexport function createReference<T extends Resource>(resource: T): Reference<T> {\n  const reference = getReferenceString(resource);\n  const display = getDisplayString(resource);\n  return display === reference ? { reference } : { reference, display };\n}\n\n/**\n * Returns a reference string for a resource.\n * @param resource The FHIR resource.\n * @returns A reference string of the form resourceType/id.\n */\nexport function getReferenceString(resource: Resource): string {\n  return resource.resourceType + '/' + resource.id;\n}\n\n/**\n * Returns the ID portion of a reference.\n * @param reference A FHIR reference.\n * @returns The ID portion of a reference.\n */\nexport function resolveId(reference: Reference | undefined): string | undefined {\n  return reference?.reference?.split('/')[1];\n}\n\n/**\n * Returns true if the resource is a \"ProfileResource\".\n * @param resource The FHIR resource.\n * @returns True if the resource is a \"ProfileResource\".\n */\nexport function isProfileResource(resource: Resource): resource is ProfileResource {\n  return (\n    resource.resourceType === 'Patient' ||\n    resource.resourceType === 'Practitioner' ||\n    resource.resourceType === 'RelatedPerson'\n  );\n}\n\n/**\n * Returns a display string for the resource.\n * @param resource The input resource.\n * @return Human friendly display string.\n */\nexport function getDisplayString(resource: Resource): string {\n  if (isProfileResource(resource)) {\n    const profileName = getProfileResourceDisplayString(resource);\n    if (profileName) {\n      return profileName;\n    }\n  }\n  if (resource.resourceType === 'Device') {\n    const deviceName = getDeviceDisplayString(resource);\n    if (deviceName) {\n      return deviceName;\n    }\n  }\n  if (resource.resourceType === 'Observation') {\n    if ('code' in resource && resource.code?.text) {\n      return resource.code.text;\n    }\n  }\n  if (resource.resourceType === 'User') {\n    if (resource.email) {\n      return resource.email;\n    }\n  }\n  if ('name' in resource && resource.name && typeof resource.name === 'string') {\n    return resource.name;\n  }\n  return getReferenceString(resource);\n}\n\n/**\n * Returns a display string for a profile resource if one is found.\n * @param resource The profile resource.\n * @returns The display name if one is found.\n */\nfunction getProfileResourceDisplayString(resource: ProfileResource): string | undefined {\n  const names = resource.name;\n  if (names && names.length > 0) {\n    return formatHumanName(names[0]);\n  }\n  return undefined;\n}\n\n/**\n * Returns a display string for a device resource if one is found.\n * @param device The device resource.\n * @returns The display name if one is found.\n */\nfunction getDeviceDisplayString(device: Device): string | undefined {\n  const names = device.deviceName;\n  if (names && names.length > 0) {\n    return names[0].name;\n  }\n  return undefined;\n}\n\n/**\n * Returns an image URL for the resource, if one is available.\n * @param resource The input resource.\n * @returns The image URL for the resource or undefined.\n */\nexport function getImageSrc(resource: Resource): string | undefined {\n  if (!('photo' in resource)) {\n    return undefined;\n  }\n\n  const photo = resource.photo;\n  if (!photo) {\n    return undefined;\n  }\n\n  if (Array.isArray(photo)) {\n    for (const p of photo) {\n      const url = getPhotoImageSrc(p);\n      if (url) {\n        return url;\n      }\n    }\n  } else {\n    return getPhotoImageSrc(photo);\n  }\n\n  return undefined;\n}\n\nfunction getPhotoImageSrc(photo: Attachment): string | undefined {\n  if (photo.url && photo.contentType && photo.contentType.startsWith('image/')) {\n    return photo.url;\n  }\n  return undefined;\n}\n\n/**\n * Returns a Date property as a Date.\n * When working with JSON objects, Dates are often serialized as ISO-8601 strings.\n * When that happens, we need to safely convert to a proper Date object.\n * @param date The date property value, which could be a string or a Date object.\n * @returns A Date object.\n */\nexport function getDateProperty(date: string | undefined): Date | undefined {\n  return date ? new Date(date) : undefined;\n}\n\n/**\n * Calculates the age in years from the birth date.\n * @param birthDateStr The birth date or start date in ISO-8601 format YYYY-MM-DD.\n * @param endDateStr Optional end date in ISO-8601 format YYYY-MM-DD. Default value is today.\n * @returns The age in years, months, and days.\n */\nexport function calculateAge(\n  birthDateStr: string,\n  endDateStr?: string\n): { years: number; months: number; days: number } {\n  const startDate = new Date(birthDateStr);\n  startDate.setUTCHours(0, 0, 0, 0);\n\n  const endDate = endDateStr ? new Date(endDateStr) : new Date();\n  endDate.setUTCHours(0, 0, 0, 0);\n\n  const startYear = startDate.getUTCFullYear();\n  const startMonth = startDate.getUTCMonth();\n  const startDay = startDate.getUTCDate();\n\n  const endYear = endDate.getUTCFullYear();\n  const endMonth = endDate.getUTCMonth();\n  const endDay = endDate.getUTCDate();\n\n  let years = endYear - startYear;\n  if (endMonth < startMonth || (endMonth === startMonth && endDay < startDay)) {\n    years--;\n  }\n\n  let months = endYear * 12 + endMonth - (startYear * 12 + startMonth);\n  if (endDay < startDay) {\n    months--;\n  }\n\n  const days = Math.floor((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n\n  return { years, months, days };\n}\n\n/**\n * Calculates the age string for display using the age appropriate units.\n * If the age is greater than or equal to 2 years, then the age is displayed in years.\n * If the age is greater than or equal to 1 month, then the age is displayed in months.\n * Otherwise, the age is displayed in days.\n * @param birthDateStr The birth date or start date in ISO-8601 format YYYY-MM-DD.\n * @param endDateStr Optional end date in ISO-8601 format YYYY-MM-DD. Default value is today.\n * @returns The age string.\n */\nexport function calculateAgeString(birthDateStr: string, endDateStr?: string): string | undefined {\n  const { years, months, days } = calculateAge(birthDateStr, endDateStr);\n  if (years >= 2) {\n    return years.toString().padStart(3, '0') + 'Y';\n  } else if (months >= 1) {\n    return months.toString().padStart(3, '0') + 'M';\n  } else {\n    return days.toString().padStart(3, '0') + 'D';\n  }\n}\n\n/**\n * Returns all questionnaire answers as a map by link ID.\n * @param response The questionnaire response resource.\n * @returns Questionnaire answers mapped by link ID.\n */\nexport function getQuestionnaireAnswers(\n  response: QuestionnaireResponse\n): Record<string, QuestionnaireResponseItemAnswer> {\n  const result: Record<string, QuestionnaireResponseItemAnswer> = {};\n  buildQuestionnaireAnswerItems(response.item, result);\n  return result;\n}\n\n/**\n * Recursively builds the questionnaire answer items map.\n * @param item The current questionnaire response item.\n * @param result The cumulative result map.\n */\nfunction buildQuestionnaireAnswerItems(\n  items: QuestionnaireResponseItem[] | undefined,\n  result: Record<string, QuestionnaireResponseItemAnswer>\n): void {\n  if (items) {\n    for (const item of items) {\n      if (item.linkId && item.answer && item.answer.length > 0) {\n        result[item.linkId] = item.answer[0];\n      }\n      buildQuestionnaireAnswerItems(item.item, result);\n    }\n  }\n}\n\n/**\n * Returns the resource identifier for the given system.\n *\n * If multiple identifiers exist with the same system, the first one is returned.\n *\n * If the system is not found, then returns undefined.\n *\n * @param resource The resource to check.\n * @param system The identifier system.\n * @returns The identifier value if found; otherwise undefined.\n */\nexport function getIdentifier(resource: Resource, system: string): string | undefined {\n  const identifiers = (resource as any).identifier as Identifier[] | Identifier | undefined;\n  if (!identifiers) {\n    return undefined;\n  }\n  const array = Array.isArray(identifiers) ? identifiers : [identifiers];\n  for (const identifier of array) {\n    if (identifier.system === system) {\n      return identifier.value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns an extension value by extension URLs.\n * @param resource The base resource.\n * @param urls Array of extension URLs.  Each entry represents a nested extension.\n * @returns The extension value if found; undefined otherwise.\n */\nexport function getExtensionValue(resource: any, ...urls: string[]): string | undefined {\n  // Let curr be the current resource or extension. Extensions can be nested.\n  let curr: any = resource;\n\n  // For each of the urls, try to find a matching nested extension.\n  for (let i = 0; i < urls.length && curr; i++) {\n    curr = (curr?.extension as Extension[] | undefined)?.find((e) => e.url === urls[i]);\n  }\n\n  return curr?.valueString as string | undefined;\n}\n\n/**\n * FHIR JSON stringify.\n * Removes properties with empty string values.\n * Removes objects with zero properties.\n * See: https://www.hl7.org/fhir/json.html\n * @param value The input value.\n * @param pretty Optional flag to pretty-print the JSON.\n * @returns The resulting JSON string.\n */\nexport function stringify(value: any, pretty?: boolean): string {\n  return JSON.stringify(value, stringifyReplacer, pretty ? 2 : undefined);\n}\n\n/**\n * Evaluates JSON key/value pairs for FHIR JSON stringify.\n * Removes properties with empty string values.\n * Removes objects with zero properties.\n * @param {string} k Property key.\n * @param {*} v Property value.\n */\nfunction stringifyReplacer(k: string, v: any): any {\n  return !isArrayKey(k) && isEmpty(v) ? undefined : v;\n}\n\n/**\n * Returns true if the key is an array key.\n * @param k The property key.\n * @returns True if the key is an array key.\n */\nfunction isArrayKey(k: string): boolean {\n  return !!k.match(/\\d+$/);\n}\n\n/**\n * Returns true if the value is empty (null, undefined, empty string, or empty object).\n * @param v Any value.\n * @returns True if the value is an empty string or an empty object.\n */\nexport function isEmpty(v: any): boolean {\n  if (v === null || v === undefined) {\n    return true;\n  }\n  const t = typeof v;\n  return (t === 'string' && v === '') || (t === 'object' && Object.keys(v).length === 0);\n}\n\n/**\n * Resource equality.\n * Ignores meta.versionId and meta.lastUpdated.\n * @param object1 The first object.\n * @param object2 The second object.\n * @returns True if the objects are equal.\n */\nexport function deepEquals(object1: unknown, object2: unknown, path?: string): boolean {\n  if (object1 === object2) {\n    return true;\n  }\n  if (isEmpty(object1) && isEmpty(object2)) {\n    return true;\n  }\n  if (isEmpty(object1) || isEmpty(object2)) {\n    return false;\n  }\n  if (Array.isArray(object1) && Array.isArray(object2)) {\n    return deepEqualsArray(object1, object2);\n  }\n  if (Array.isArray(object1) || Array.isArray(object2)) {\n    return false;\n  }\n  if (isObject(object1) && isObject(object2)) {\n    return deepEqualsObject(object1, object2, path);\n  }\n  if (isObject(object1) || isObject(object2)) {\n    return false;\n  }\n  return false;\n}\n\nfunction deepEqualsArray(array1: unknown[], array2: unknown[]): boolean {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (!deepEquals(array1[i], array2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction deepEqualsObject(\n  object1: Record<string, unknown>,\n  object2: Record<string, unknown>,\n  path: string | undefined\n): boolean {\n  const keySet = new Set<string>();\n  Object.keys(object1).forEach((k) => keySet.add(k));\n  Object.keys(object2).forEach((k) => keySet.add(k));\n  if (path === 'meta') {\n    keySet.delete('versionId');\n    keySet.delete('lastUpdated');\n    keySet.delete('author');\n  }\n  for (const key of keySet) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n    if (!deepEquals(val1, val2, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a deep clone of the input value.\n *\n * Limitations:\n *  - Only supports JSON primitives and arrays.\n *  - Does not support Functions, lambdas, etc.\n *  - Does not support circular references.\n *\n * See: https://web.dev/structured-clone/\n * See: https://stackoverflow.com/questions/40488190/how-is-structured-clone-algorithm-different-from-deep-copy\n *\n * @param input The input to clone.\n * @returns A deep clone of the input.\n */\nexport function deepClone<T>(input: T): T {\n  return JSON.parse(JSON.stringify(input)) as T;\n}\n\n/**\n * Returns true if the input string is a UUID.\n * @param input The input string.\n * @returns True if the input string matches the UUID format.\n */\nexport function isUUID(input: string): boolean {\n  return !!input.match(/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i);\n}\n\n/**\n * Returns true if the input is an object.\n * @param object The candidate object.\n * @returns True if the input is a non-null non-undefined object.\n */\nexport function isObject(obj: unknown): obj is Record<string, unknown> {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Returns true if the input array is an array of strings.\n * @param arr Input array.\n * @returns True if the input array is an array of strings.\n */\nexport function isStringArray(arr: any[]): arr is string[] {\n  return arr.every((e) => typeof e === 'string');\n}\n\n// Precompute hex octets\n// See: https://stackoverflow.com/a/55200387\nconst byteToHex: string[] = [];\nfor (let n = 0; n < 256; n++) {\n  byteToHex.push(n.toString(16).padStart(2, '0'));\n}\n\n/**\n * Converts an ArrayBuffer to hex string.\n * See: https://stackoverflow.com/a/55200387\n * @param arrayBuffer The input array buffer.\n * @returns The resulting hex string.\n */\nexport function arrayBufferToHex(arrayBuffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(arrayBuffer);\n  const result: string[] = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    result[i] = byteToHex[bytes[i]];\n  }\n  return result.join('');\n}\n\n/**\n * Converts an ArrayBuffer to a base-64 encoded string.\n * @param arrayBuffer The input array buffer.\n * @returns The base-64 encoded string.\n */\nexport function arrayBufferToBase64(arrayBuffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(arrayBuffer);\n  const result: string[] = [];\n  for (let i = 0; i < bytes.length; i++) {\n    result[i] = String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(result.join(''));\n}\n\nexport function capitalize(word: string): string {\n  return word.charAt(0).toUpperCase() + word.substring(1);\n}\n\nexport function isLowerCase(c: string): boolean {\n  return c === c.toLowerCase() && c !== c.toUpperCase();\n}\n\n/**\n * Tries to find a code string for a given system within a given codeable concept.\n * @param concept The codeable concept.\n * @param system The system string.\n * @returns The code if found; otherwise undefined.\n */\nexport function getCodeBySystem(concept: CodeableConcept, system: string): string | undefined {\n  return concept?.coding?.find((coding) => coding.system === system)?.code;\n}\n\n/**\n * Sets a code for a given system within a given codeable concept.\n * @param concept The codeable concept.\n * @param system The system string.\n * @param code The code value.\n */\nexport function setCodeBySystem(concept: CodeableConcept, system: string, code: string): void {\n  if (!concept.coding) {\n    concept.coding = [];\n  }\n  const coding = concept.coding?.find((c) => c.system === system);\n  if (coding) {\n    coding.code = code;\n  } else {\n    concept.coding?.push({ system, code });\n  }\n}\n\n/**\n * Tries to find an observation interval for the given patient and value.\n * @param definition The observation definition.\n * @param patient The patient.\n * @param value The observation value.\n * @returns The observation interval if found; otherwise undefined.\n */\nexport function findObservationInterval(\n  definition: ObservationDefinition,\n  patient: Patient,\n  value: number,\n  category?: 'reference' | 'critical' | 'absolute'\n): ObservationDefinitionQualifiedInterval | undefined {\n  return definition.qualifiedInterval?.find(\n    (interval) =>\n      observationIntervalMatchesPatient(interval, patient) &&\n      observationIntervalMatchesValue(interval, value, definition.quantitativeDetails?.decimalPrecision) &&\n      (category === undefined || interval.category === category)\n  );\n}\n\n/**\n * Tries to find an observation reference range for the given patient and condition names.\n * @param definition The observation definition.\n * @param patient The patient.\n * @param names The condition names.\n * @returns The observation interval if found; otherwise undefined.\n */\nexport function findObservationReferenceRange(\n  definition: ObservationDefinition,\n  patient: Patient,\n  names: string[]\n): ObservationDefinitionQualifiedInterval | undefined {\n  return definition.qualifiedInterval?.find(\n    (interval) => observationIntervalMatchesPatient(interval, patient) && names.includes(interval.condition as string)\n  );\n}\n\n/**\n * Returns true if the patient matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient matches the observation interval.\n */\nfunction observationIntervalMatchesPatient(\n  interval: ObservationDefinitionQualifiedInterval,\n  patient: Patient\n): boolean {\n  return observationIntervalMatchesGender(interval, patient) && observationIntervalMatchesAge(interval, patient);\n}\n\n/**\n * Returns true if the patient gender matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient gender matches the observation interval.\n */\nfunction observationIntervalMatchesGender(interval: ObservationDefinitionQualifiedInterval, patient: Patient): boolean {\n  return !interval.gender || interval.gender === patient.gender;\n}\n\n/**\n * Returns true if the patient age matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient age matches the observation interval.\n */\nfunction observationIntervalMatchesAge(interval: ObservationDefinitionQualifiedInterval, patient: Patient): boolean {\n  return !interval.age || matchesRange(calculateAge(patient.birthDate as string).years, interval.age);\n}\n\n/**\n * Returns true if the value matches the observation interval.\n * @param interval The observation interval.\n * @param value The observation value.\n * @param precision Optional precision in number of digits.\n * @returns True if the value matches the observation interval.\n */\nfunction observationIntervalMatchesValue(\n  interval: ObservationDefinitionQualifiedInterval,\n  value: number,\n  precision?: number\n): boolean {\n  return !!interval.range && matchesRange(value, interval.range, precision);\n}\n\n/**\n * Returns true if the value is in the range accounting for precision.\n * @param value The numeric value.\n * @param range The numeric range.\n * @param precision Optional precision in number of digits.\n * @returns True if the value is within the range.\n */\nexport function matchesRange(value: number, range: Range, precision?: number): boolean {\n  return (\n    (range.low?.value === undefined || preciseGreaterThanOrEquals(value, range.low.value, precision)) &&\n    (range.high?.value === undefined || preciseLessThanOrEquals(value, range.high.value, precision))\n  );\n}\n\n/**\n * Returns the input number rounded to the specified number of digits.\n * @param a The input number.\n * @param precision The precision in number of digits.\n * @returns The number rounded to the specified number of digits.\n */\nexport function preciseRound(a: number, precision: number): number {\n  return parseFloat(a.toFixed(precision));\n}\n\n/**\n * Returns true if the two numbers are equal to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the two numbers are equal to the given precision.\n */\nexport function preciseEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) === toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is less than the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is less than the second number to the given precision.\n */\nexport function preciseLessThan(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) < toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is greater than the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is greater than the second number to the given precision.\n */\nexport function preciseGreaterThan(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) > toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is less than or equal to the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is less than or equal to the second number to the given precision.\n */\nexport function preciseLessThanOrEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) <= toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is greater than or equal to the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is greater than or equal to the second number to the given precision.\n */\nexport function preciseGreaterThanOrEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) >= toPreciseInteger(b, precision);\n}\n\n/**\n * Returns an integer representation of the number with the given precision.\n * For example, if precision is 2, then 1.2345 will be returned as 123.\n * @param a The number.\n * @param precision Optional precision in number of digits.\n * @returns The integer with the given precision.\n */\nfunction toPreciseInteger(a: number, precision?: number): number {\n  if (precision === undefined) {\n    return a;\n  }\n  return Math.round(a * Math.pow(10, precision));\n}\n"],"names":[],"mappings":";;AAyBA;;;;AAIG;AACG,SAAU,eAAe,CAAqB,QAAW,EAAA;AAC7D,IAAA,MAAM,SAAS,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC3C,IAAA,OAAO,OAAO,KAAK,SAAS,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AACxE,CAAC;AAED;;;;AAIG;AACG,SAAU,kBAAkB,CAAC,QAAkB,EAAA;IACnD,OAAO,QAAQ,CAAC,YAAY,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC;AACnD,CAAC;AAED;;;;AAIG;AACG,SAAU,SAAS,CAAC,SAAgC,EAAA;IACxD,OAAO,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED;;;;AAIG;AACG,SAAU,iBAAiB,CAAC,QAAkB,EAAA;AAClD,IAAA,QACE,QAAQ,CAAC,YAAY,KAAK,SAAS;QACnC,QAAQ,CAAC,YAAY,KAAK,cAAc;AACxC,QAAA,QAAQ,CAAC,YAAY,KAAK,eAAe,EACzC;AACJ,CAAC;AAED;;;;AAIG;AACG,SAAU,gBAAgB,CAAC,QAAkB,EAAA;AACjD,IAAA,IAAI,iBAAiB,CAAC,QAAQ,CAAC,EAAE;AAC/B,QAAA,MAAM,WAAW,GAAG,+BAA+B,CAAC,QAAQ,CAAC,CAAC;AAC9D,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,OAAO,WAAW,CAAC;AACpB,SAAA;AACF,KAAA;AACD,IAAA,IAAI,QAAQ,CAAC,YAAY,KAAK,QAAQ,EAAE;AACtC,QAAA,MAAM,UAAU,GAAG,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AACpD,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,OAAO,UAAU,CAAC;AACnB,SAAA;AACF,KAAA;AACD,IAAA,IAAI,QAAQ,CAAC,YAAY,KAAK,aAAa,EAAE;QAC3C,IAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;AAC7C,YAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,SAAA;AACF,KAAA;AACD,IAAA,IAAI,QAAQ,CAAC,YAAY,KAAK,MAAM,EAAE;QACpC,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,OAAO,QAAQ,CAAC,KAAK,CAAC;AACvB,SAAA;AACF,KAAA;AACD,IAAA,IAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC5E,OAAO,QAAQ,CAAC,IAAI,CAAC;AACtB,KAAA;AACD,IAAA,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAED;;;;AAIG;AACH,SAAS,+BAA+B,CAAC,QAAyB,EAAA;AAChE,IAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B,IAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,QAAA,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,KAAA;AACD,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;AAIG;AACH,SAAS,sBAAsB,CAAC,MAAc,EAAA;AAC5C,IAAA,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;AAChC,IAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,QAAA,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACtB,KAAA;AACD,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;AAIG;AACG,SAAU,WAAW,CAAC,QAAkB,EAAA;AAC5C,IAAA,IAAI,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC1B,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AAED,IAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC7B,IAAI,CAAC,KAAK,EAAE;AACV,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AAED,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,QAAA,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;AACrB,YAAA,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,OAAO,GAAG,CAAC;AACZ,aAAA;AACF,SAAA;AACF,KAAA;AAAM,SAAA;AACL,QAAA,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAChC,KAAA;AAED,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAiB,EAAA;AACzC,IAAA,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAC5E,OAAO,KAAK,CAAC,GAAG,CAAC;AAClB,KAAA;AACD,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,eAAe,CAAC,IAAwB,EAAA;AACtD,IAAA,OAAO,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AAC3C,CAAC;AAED;;;;;AAKG;AACa,SAAA,YAAY,CAC1B,YAAoB,EACpB,UAAmB,EAAA;AAEnB,IAAA,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAElC,IAAA,MAAM,OAAO,GAAG,UAAU,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/D,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEhC,IAAA,MAAM,SAAS,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;AAC7C,IAAA,MAAM,UAAU,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;AAC3C,IAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;AAExC,IAAA,MAAM,OAAO,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;AACzC,IAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;AACvC,IAAA,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;AAEpC,IAAA,IAAI,KAAK,GAAG,OAAO,GAAG,SAAS,CAAC;AAChC,IAAA,IAAI,QAAQ,GAAG,UAAU,KAAK,QAAQ,KAAK,UAAU,IAAI,MAAM,GAAG,QAAQ,CAAC,EAAE;AAC3E,QAAA,KAAK,EAAE,CAAC;AACT,KAAA;AAED,IAAA,IAAI,MAAM,GAAG,OAAO,GAAG,EAAE,GAAG,QAAQ,IAAI,SAAS,GAAG,EAAE,GAAG,UAAU,CAAC,CAAC;IACrE,IAAI,MAAM,GAAG,QAAQ,EAAE;AACrB,QAAA,MAAM,EAAE,CAAC;AACV,KAAA;AAED,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAE3F,IAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AACjC,CAAC;AAED;;;;;;;;AAQG;AACa,SAAA,kBAAkB,CAAC,YAAoB,EAAE,UAAmB,EAAA;AAC1E,IAAA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IACvE,IAAI,KAAK,IAAI,CAAC,EAAE;AACd,QAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;AAChD,KAAA;SAAM,IAAI,MAAM,IAAI,CAAC,EAAE;AACtB,QAAA,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;AACjD,KAAA;AAAM,SAAA;AACL,QAAA,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;AAC/C,KAAA;AACH,CAAC;AAED;;;;AAIG;AACG,SAAU,uBAAuB,CACrC,QAA+B,EAAA;IAE/B,MAAM,MAAM,GAAoD,EAAE,CAAC;AACnE,IAAA,6BAA6B,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACrD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;AAIG;AACH,SAAS,6BAA6B,CACpC,KAA8C,EAC9C,MAAuD,EAAA;AAEvD,IAAA,IAAI,KAAK,EAAE;AACT,QAAA,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AACxB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACxD,gBAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtC,aAAA;AACD,YAAA,6BAA6B,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAClD,SAAA;AACF,KAAA;AACH,CAAC;AAED;;;;;;;;;;AAUG;AACa,SAAA,aAAa,CAAC,QAAkB,EAAE,MAAc,EAAA;AAC9D,IAAA,MAAM,WAAW,GAAI,QAAgB,CAAC,UAAmD,CAAC;IAC1F,IAAI,CAAC,WAAW,EAAE;AAChB,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AACD,IAAA,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,GAAG,CAAC,WAAW,CAAC,CAAC;AACvE,IAAA,KAAK,MAAM,UAAU,IAAI,KAAK,EAAE;AAC9B,QAAA,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,EAAE;YAChC,OAAO,UAAU,CAAC,KAAK,CAAC;AACzB,SAAA;AACF,KAAA;AACD,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;AAKG;SACa,iBAAiB,CAAC,QAAa,EAAE,GAAG,IAAc,EAAA;;IAEhE,IAAI,IAAI,GAAQ,QAAQ,CAAC;;AAGzB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAI,GAAI,IAAI,EAAE,SAAqC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,KAAA;IAED,OAAO,IAAI,EAAE,WAAiC,CAAC;AACjD,CAAC;AAED;;;;;;;;AAQG;AACa,SAAA,SAAS,CAAC,KAAU,EAAE,MAAgB,EAAA;AACpD,IAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,iBAAiB,EAAE,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;AAC1E,CAAC;AAED;;;;;;AAMG;AACH,SAAS,iBAAiB,CAAC,CAAS,EAAE,CAAM,EAAA;AAC1C,IAAA,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;AACtD,CAAC;AAED;;;;AAIG;AACH,SAAS,UAAU,CAAC,CAAS,EAAA;IAC3B,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC;AAED;;;;AAIG;AACG,SAAU,OAAO,CAAC,CAAM,EAAA;AAC5B,IAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,EAAE;AACjC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC;IACnB,OAAO,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AACzF,CAAC;AAED;;;;;;AAMG;SACa,UAAU,CAAC,OAAgB,EAAE,OAAgB,EAAE,IAAa,EAAA;IAC1E,IAAI,OAAO,KAAK,OAAO,EAAE;AACvB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IACD,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AACxC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IACD,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AACxC,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpD,QAAA,OAAO,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC1C,KAAA;AACD,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpD,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;IACD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC1C,OAAO,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACjD,KAAA;IACD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC1C,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,eAAe,CAAC,MAAiB,EAAE,MAAiB,EAAA;AAC3D,IAAA,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;AACnC,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AACrC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACF,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,gBAAgB,CACvB,OAAgC,EAChC,OAAgC,EAChC,IAAwB,EAAA;AAExB,IAAA,MAAM,MAAM,GAAG,IAAI,GAAG,EAAU,CAAC;IACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,IAAI,KAAK,MAAM,EAAE;AACnB,QAAA,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC3B,QAAA,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC7B,QAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACzB,KAAA;AACD,IAAA,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;AACxB,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC1B,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;AAChC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACF,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;;;;;;;;;;AAaG;AACG,SAAU,SAAS,CAAI,KAAQ,EAAA;IACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAM,CAAC;AAChD,CAAC;AAED;;;;AAIG;AACG,SAAU,MAAM,CAAC,KAAa,EAAA;IAClC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAC5D,CAAC;AAED;;;;AAIG;AACG,SAAU,QAAQ,CAAC,GAAY,EAAA;IACnC,OAAO,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjD,CAAC;AAED;;;;AAIG;AACG,SAAU,aAAa,CAAC,GAAU,EAAA;AACtC,IAAA,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;AACjD,CAAC;AAED;AACA;AACA,MAAM,SAAS,GAAa,EAAE,CAAC;AAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5B,IAAA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACjD,CAAA;AAED;;;;;AAKG;AACG,SAAU,gBAAgB,CAAC,WAAwB,EAAA;AACvD,IAAA,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IAC1C,MAAM,MAAM,GAAa,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACjD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,KAAA;AACD,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AAED;;;;AAIG;AACG,SAAU,mBAAmB,CAAC,WAAwB,EAAA;AAC1D,IAAA,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IAC1C,MAAM,MAAM,GAAa,EAAE,CAAC;AAC5B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAA,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,KAAA;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC;AAEK,SAAU,UAAU,CAAC,IAAY,EAAA;AACrC,IAAA,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAEK,SAAU,WAAW,CAAC,CAAS,EAAA;AACnC,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AACxD,CAAC;AAED;;;;;AAKG;AACa,SAAA,eAAe,CAAC,OAAwB,EAAE,MAAc,EAAA;AACtE,IAAA,OAAO,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,EAAE,IAAI,CAAC;AAC3E,CAAC;AAED;;;;;AAKG;SACa,eAAe,CAAC,OAAwB,EAAE,MAAc,EAAE,IAAY,EAAA;AACpF,IAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnB,QAAA,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;AACrB,KAAA;AACD,IAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;AAChE,IAAA,IAAI,MAAM,EAAE;AACV,QAAA,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACpB,KAAA;AAAM,SAAA;QACL,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACxC,KAAA;AACH,CAAC;AAED;;;;;;AAMG;AACG,SAAU,uBAAuB,CACrC,UAAiC,EACjC,OAAgB,EAChB,KAAa,EACb,QAAgD,EAAA;AAEhD,IAAA,OAAO,UAAU,CAAC,iBAAiB,EAAE,IAAI,CACvC,CAAC,QAAQ,KACP,iCAAiC,CAAC,QAAQ,EAAE,OAAO,CAAC;QACpD,+BAA+B,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;SACjG,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAC7D,CAAC;AACJ,CAAC;AAED;;;;;;AAMG;SACa,6BAA6B,CAC3C,UAAiC,EACjC,OAAgB,EAChB,KAAe,EAAA;IAEf,OAAO,UAAU,CAAC,iBAAiB,EAAE,IAAI,CACvC,CAAC,QAAQ,KAAK,iCAAiC,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAmB,CAAC,CACnH,CAAC;AACJ,CAAC;AAED;;;;;AAKG;AACH,SAAS,iCAAiC,CACxC,QAAgD,EAChD,OAAgB,EAAA;AAEhB,IAAA,OAAO,gCAAgC,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,6BAA6B,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjH,CAAC;AAED;;;;;AAKG;AACH,SAAS,gCAAgC,CAAC,QAAgD,EAAE,OAAgB,EAAA;AAC1G,IAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC;AAChE,CAAC;AAED;;;;;AAKG;AACH,SAAS,6BAA6B,CAAC,QAAgD,EAAE,OAAgB,EAAA;IACvG,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,SAAmB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;AACtG,CAAC;AAED;;;;;;AAMG;AACH,SAAS,+BAA+B,CACtC,QAAgD,EAChD,KAAa,EACb,SAAkB,EAAA;AAElB,IAAA,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC5E,CAAC;AAED;;;;;;AAMG;SACa,YAAY,CAAC,KAAa,EAAE,KAAY,EAAE,SAAkB,EAAA;IAC1E,QACE,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,KAAK,SAAS,IAAI,0BAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;SAC/F,KAAK,CAAC,IAAI,EAAE,KAAK,KAAK,SAAS,IAAI,uBAAuB,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,EAChG;AACJ,CAAC;AAED;;;;;AAKG;AACa,SAAA,YAAY,CAAC,CAAS,EAAE,SAAiB,EAAA;IACvD,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED;;;;;;AAMG;SACa,aAAa,CAAC,CAAS,EAAE,CAAS,EAAE,SAAkB,EAAA;AACpE,IAAA,OAAO,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC3E,CAAC;AAED;;;;;;AAMG;SACa,eAAe,CAAC,CAAS,EAAE,CAAS,EAAE,SAAkB,EAAA;AACtE,IAAA,OAAO,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACzE,CAAC;AAED;;;;;;AAMG;SACa,kBAAkB,CAAC,CAAS,EAAE,CAAS,EAAE,SAAkB,EAAA;AACzE,IAAA,OAAO,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACzE,CAAC;AAED;;;;;;AAMG;SACa,uBAAuB,CAAC,CAAS,EAAE,CAAS,EAAE,SAAkB,EAAA;AAC9E,IAAA,OAAO,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC1E,CAAC;AAED;;;;;;AAMG;SACa,0BAA0B,CAAC,CAAS,EAAE,CAAS,EAAE,SAAkB,EAAA;AACjF,IAAA,OAAO,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC1E,CAAC;AAED;;;;;;AAMG;AACH,SAAS,gBAAgB,CAAC,CAAS,EAAE,SAAkB,EAAA;IACrD,IAAI,SAAS,KAAK,SAAS,EAAE;AAC3B,QAAA,OAAO,CAAC,CAAC;AACV,KAAA;AACD,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;AACjD;;;;"}