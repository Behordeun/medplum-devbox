{"version":3,"file":"readablepromise.mjs","sources":["../../src/readablepromise.ts"],"sourcesContent":["/**\n * The ReadablePromise class wraps a request promise suitable for React Suspense.\n * See: https://blog.logrocket.com/react-suspense-data-fetching/#wrappromise-js\n * See: https://github.com/ovieokeh/suspense-data-fetching/blob/master/lib/api/wrapPromise.js\n */\nexport class ReadablePromise<T> implements Promise<T> {\n  readonly [Symbol.toStringTag]: string = 'ReadablePromise';\n  #suspender: Promise<T>;\n  #status: 'pending' | 'error' | 'success' = 'pending';\n  #response: T | undefined;\n  #error: Error | undefined;\n\n  constructor(requestPromise: Promise<T>) {\n    this.#suspender = requestPromise.then(\n      (res: T) => {\n        this.#status = 'success';\n        this.#response = res;\n        return res;\n      },\n      (err: any) => {\n        this.#status = 'error';\n        this.#error = err;\n        throw err;\n      }\n    );\n  }\n\n  /**\n   * Returns true if the promise is pending.\n   * @returns True if the Promise is pending.\n   */\n  isPending(): boolean {\n    return this.#status === 'pending';\n  }\n\n  /**\n   * Returns true if the promise resolved successfully.\n   * @returns True if the Promise resolved successfully.\n   */\n  isOk(): boolean {\n    return this.#status === 'success';\n  }\n\n  /**\n   * Attempts to read the value of the promise.\n   * If the promise is pending, this method will throw a promise.\n   * If the promise rejected, this method will throw the rejection reason.\n   * If the promise resolved, this method will return the resolved value.\n   * @returns The resolved value of the Promise.\n   */\n  read(): T {\n    switch (this.#status) {\n      case 'pending':\n        throw this.#suspender;\n      case 'error':\n        throw this.#error;\n      default:\n        return this.#response as T;\n    }\n  }\n\n  /**\n   * Attaches callbacks for the resolution and/or rejection of the Promise.\n   * @param onfulfilled The callback to execute when the Promise is resolved.\n   * @param onrejected The callback to execute when the Promise is rejected.\n   * @returns A Promise for the completion of which ever callback is executed.\n   */\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): Promise<TResult1 | TResult2> {\n    return this.#suspender.then(onfulfilled, onrejected);\n  }\n\n  /**\n   * Attaches a callback for only the rejection of the Promise.\n   * @param onrejected The callback to execute when the Promise is rejected.\n   * @returns A Promise for the completion of the callback.\n   */\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n  ): Promise<T | TResult> {\n    return this.#suspender.catch(onrejected);\n  }\n\n  /**\n   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n   * resolved value cannot be modified from the callback.\n   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n   * @returns A Promise for the completion of the callback.\n   */\n  finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.#suspender.finally(onfinally);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;;;AAIG;MACU,eAAe,CAAA;AAO1B,IAAA,WAAA,CAAY,cAA0B,EAAA;QAN7B,IAAoB,CAAA,EAAA,CAAA,GAAW,iBAAiB,CAAC;QAC1D,0BAAuB,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACvB,QAAA,uBAAA,CAAA,GAAA,CAAA,IAAA,EAA2C,SAAS,CAAC,CAAA;QACrD,yBAAyB,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;QACzB,sBAA0B,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;QAGxB,sBAAA,CAAA,IAAI,8BAAc,cAAc,CAAC,IAAI,CACnC,CAAC,GAAM,KAAI;AACT,YAAA,sBAAA,CAAA,IAAI,EAAA,uBAAA,EAAW,SAAS,EAAA,GAAA,CAAA,CAAC;AACzB,YAAA,sBAAA,CAAA,IAAI,EAAA,yBAAA,EAAa,GAAG,EAAA,GAAA,CAAA,CAAC;AACrB,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,EACD,CAAC,GAAQ,KAAI;AACX,YAAA,sBAAA,CAAA,IAAI,EAAA,uBAAA,EAAW,OAAO,EAAA,GAAA,CAAA,CAAC;AACvB,YAAA,sBAAA,CAAA,IAAI,EAAA,sBAAA,EAAU,GAAG,EAAA,GAAA,CAAA,CAAC;AAClB,YAAA,MAAM,GAAG,CAAC;SACX,CACF,MAAA,CAAC;KACH;AAED;;;AAGG;IACH,SAAS,GAAA;AACP,QAAA,OAAO,sBAAA,CAAA,IAAI,EAAQ,uBAAA,EAAA,GAAA,CAAA,KAAK,SAAS,CAAC;KACnC;AAED;;;AAGG;IACH,IAAI,GAAA;AACF,QAAA,OAAO,sBAAA,CAAA,IAAI,EAAQ,uBAAA,EAAA,GAAA,CAAA,KAAK,SAAS,CAAC;KACnC;AAED;;;;;;AAMG;IACH,IAAI,GAAA;QACF,QAAQ,sBAAA,CAAA,IAAI,EAAA,uBAAA,EAAA,GAAA,CAAQ;AAClB,YAAA,KAAK,SAAS;gBACZ,MAAM,sBAAA,CAAA,IAAI,EAAA,0BAAA,EAAA,GAAA,CAAW,CAAC;AACxB,YAAA,KAAK,OAAO;gBACV,MAAM,sBAAA,CAAA,IAAI,EAAA,sBAAA,EAAA,GAAA,CAAO,CAAC;AACpB,YAAA;gBACE,OAAO,sBAAA,CAAA,IAAI,EAAA,yBAAA,EAAA,GAAA,CAAe,CAAC;AAC9B,SAAA;KACF;AAED;;;;;AAKG;IACH,IAAI,CACF,WAAiF,EACjF,UAAmF,EAAA;QAEnF,OAAO,sBAAA,CAAA,IAAI,EAAA,0BAAA,EAAA,GAAA,CAAW,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;KACtD;AAED;;;;AAIG;AACH,IAAA,KAAK,CACH,UAAiF,EAAA;QAEjF,OAAO,sBAAA,CAAA,IAAI,EAAW,0BAAA,EAAA,GAAA,CAAA,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KAC1C;AAED;;;;;AAKG;AACH,IAAA,OAAO,CAAC,SAA2C,EAAA;QACjD,OAAO,sBAAA,CAAA,IAAI,EAAW,0BAAA,EAAA,GAAA,CAAA,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC3C;AACF,CAAA;AAxFW,0BAAA,GAAA,IAAA,OAAA,EAAA,EAAA,uBAAA,GAAA,IAAA,OAAA,EAAA,EAAA,yBAAA,GAAA,IAAA,OAAA,EAAA,EAAA,sBAAA,GAAA,IAAA,OAAA,EAAA,EAAA,EAAA,GAAA,MAAM,CAAC,WAAW;;;;"}