{"version":3,"file":"crypto.mjs","sources":["../../src/crypto.ts"],"sourcesContent":["import { arrayBufferToHex } from './utils';\n\n/**\n * Returns a cryptographically secure random string.\n */\nexport function getRandomString(): string {\n  const randomItems = new Uint32Array(28);\n  crypto.getRandomValues(randomItems);\n  return arrayBufferToHex(randomItems.buffer);\n}\n\n/**\n * Encrypts a string with SHA256 encryption.\n * @param str\n */\nexport async function encryptSHA256(str: string): Promise<ArrayBuffer> {\n  return crypto.subtle.digest('SHA-256', new TextEncoder().encode(str));\n}\n"],"names":[],"mappings":";;AAEA;;AAEG;SACa,eAAe,GAAA;AAC7B,IAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AACxC,IAAA,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AACpC,IAAA,OAAO,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC9C,CAAC;AAED;;;AAGG;AACI,eAAe,aAAa,CAAC,GAAW,EAAA;AAC7C,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACxE;;;;"}