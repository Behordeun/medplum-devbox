{"version":3,"file":"index.cjs","sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/cache.ts","../../src/format.ts","../../src/utils.ts","../../src/crypto.ts","../../src/eventtarget.ts","../../src/jwt.ts","../../src/readablepromise.ts","../../src/storage.ts","../../src/types.ts","../../src/client.ts","../../src/fhirlexer/parse.ts","../../src/fhirlexer/tokenize.ts","../../src/fhirpath/date.ts","../../src/fhirpath/utils.ts","../../src/fhirpath/functions.ts","../../src/fhirpath/atoms.ts","../../src/fhirpath/tokenize.ts","../../src/fhirpath/parse.ts","../../src/hl7.ts","../../src/search.ts","../../src/searchparams.ts","../../src/match.ts","../../src/outcomes.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * LRU cache (least recently used)\n * Source: https://stackoverflow.com/a/46432113\n */\nexport class LRUCache<T> {\n  readonly #max: number;\n  readonly #cache: Map<string, T>;\n\n  constructor(max = 10) {\n    this.#max = max;\n    this.#cache = new Map();\n  }\n\n  /**\n   * Deletes all values from the cache.\n   */\n  clear(): void {\n    this.#cache.clear();\n  }\n\n  /**\n   * Returns the value for the given key.\n   * @param key The key to retrieve.\n   * @returns The value if found; undefined otherwise.\n   */\n  get(key: string): T | undefined {\n    const item = this.#cache.get(key);\n    if (item) {\n      this.#cache.delete(key);\n      this.#cache.set(key, item);\n    }\n    return item;\n  }\n\n  /**\n   * Sets the value for the given key.\n   * @param key The key to set.\n   * @param val The value to set.\n   */\n  set(key: string, val: T): void {\n    if (this.#cache.has(key)) {\n      this.#cache.delete(key);\n    } else if (this.#cache.size >= this.#max) {\n      this.#cache.delete(this.#first());\n    }\n    this.#cache.set(key, val);\n  }\n\n  /**\n   * Deletes the value for the given key.\n   * @param key The key to delete.\n   */\n  delete(key: string): void {\n    this.#cache.delete(key);\n  }\n\n  /**\n   * Returns the list of all keys in the cache.\n   * @returns The array of keys in the cache.\n   */\n  keys(): IterableIterator<string> {\n    return this.#cache.keys();\n  }\n\n  #first(): string {\n    // This works because the Map class maintains ordered keys.\n    return this.#cache.keys().next().value;\n  }\n}\n","import {\n  Address,\n  CodeableConcept,\n  Coding,\n  HumanName,\n  Money,\n  Observation,\n  ObservationComponent,\n  Period,\n  Quantity,\n  Range,\n  Timing,\n} from '@medplum/fhirtypes';\nimport { capitalize } from './utils';\n\nexport interface AddressFormatOptions {\n  all?: boolean;\n  use?: boolean;\n  lineSeparator?: string;\n}\n\nexport interface HumanNameFormatOptions {\n  all?: boolean;\n  prefix?: boolean;\n  suffix?: boolean;\n  use?: boolean;\n}\n\n/**\n * Formats a FHIR Address as a string.\n * @param address The address to format.\n * @param options Optional address format options.\n * @returns The formatted address string.\n */\nexport function formatAddress(address: Address, options?: AddressFormatOptions): string {\n  const builder = [];\n\n  if (address.line) {\n    builder.push(...address.line);\n  }\n\n  if (address.city || address.state || address.postalCode) {\n    const cityStateZip = [];\n    if (address.city) {\n      cityStateZip.push(address.city);\n    }\n    if (address.state) {\n      cityStateZip.push(address.state);\n    }\n    if (address.postalCode) {\n      cityStateZip.push(address.postalCode);\n    }\n    builder.push(cityStateZip.join(', '));\n  }\n\n  if (address.use && (options?.all || options?.use)) {\n    builder.push('[' + address.use + ']');\n  }\n\n  return builder.join(options?.lineSeparator || ', ').trim();\n}\n\n/**\n * Formats a FHIR HumanName as a string.\n * @param name The name to format.\n * @param options Optional name format options.\n * @returns The formatted name string.\n */\nexport function formatHumanName(name: HumanName, options?: HumanNameFormatOptions): string {\n  const builder = [];\n\n  if (name.prefix && options?.prefix !== false) {\n    builder.push(...name.prefix);\n  }\n\n  if (name.given) {\n    builder.push(...name.given);\n  }\n\n  if (name.family) {\n    builder.push(name.family);\n  }\n\n  if (name.suffix && options?.suffix !== false) {\n    builder.push(...name.suffix);\n  }\n\n  if (name.use && (options?.all || options?.use)) {\n    builder.push('[' + name.use + ']');\n  }\n\n  return builder.join(' ').trim();\n}\n\n/**\n * Formats the given name portion of a FHIR HumanName element.\n * @param name The name to format.\n * @returns The formatted given name string.\n */\nexport function formatGivenName(name: HumanName): string {\n  const builder: string[] = [];\n  if (name.given) {\n    builder.push(...name.given);\n  }\n  return builder.join(' ').trim();\n}\n\n/**\n * Formats the family name portion of a FHIR HumanName element.\n * @param name The name to format.\n * @returns The formatted family name string.\n */\nexport function formatFamilyName(name: HumanName): string {\n  return name.family || '';\n}\n\n/**\n * Returns true if the given date object is a valid date.\n * Dates can be invalid if created by parsing an invalid string.\n * @param date A date object.\n * @returns Returns true if the date is a valid date.\n */\nexport function isValidDate(date: Date): boolean {\n  return date instanceof Date && !isNaN(date.getTime());\n}\n\n/**\n * Formats a FHIR date string as a human readable string.\n * Handles missing values and invalid dates.\n * @param date The date to format.\n * @param locales Optional locales.\n * @param options Optional date format options.\n * @returns The formatted date string.\n */\nexport function formatDate(\n  date: string | undefined,\n  locales?: Intl.LocalesArgument,\n  options?: Intl.DateTimeFormatOptions | undefined\n): string {\n  if (!date) {\n    return '';\n  }\n  const d = new Date(date);\n  if (!isValidDate(d)) {\n    return '';\n  }\n  d.setUTCHours(0, 0, 0, 0);\n  return d.toLocaleDateString(locales, { timeZone: 'UTC', ...options });\n}\n\n/**\n * Formats a FHIR time string as a human readable string.\n * Handles missing values and invalid dates.\n * @param time The date to format.\n * @param locales Optional locales.\n * @param options Optional time format options.\n * @returns The formatted time string.\n */\nexport function formatTime(\n  time: string | undefined,\n  locales?: Intl.LocalesArgument,\n  options?: Intl.DateTimeFormatOptions | undefined\n): string {\n  if (!time) {\n    return '';\n  }\n  const d = new Date('2000-01-01T' + time + 'Z');\n  if (!isValidDate(d)) {\n    return '';\n  }\n  return d.toLocaleTimeString(locales, options);\n}\n\n/**\n * Formats a FHIR dateTime string as a human readable string.\n * Handles missing values and invalid dates.\n * @param dateTime The dateTime to format.\n * @param locales Optional locales.\n * @param options Optional dateTime format options.\n * @returns The formatted dateTime string.\n */\nexport function formatDateTime(\n  dateTime: string | undefined,\n  locales?: Intl.LocalesArgument,\n  options?: Intl.DateTimeFormatOptions | undefined\n): string {\n  if (!dateTime) {\n    return '';\n  }\n  const d = new Date(dateTime);\n  if (!isValidDate(d)) {\n    return '';\n  }\n  return d.toLocaleString(locales, options);\n}\n\n/**\n * Formats a FHIR Period as a human readable string.\n * @param period The period to format.\n * @param locales Optional locales.\n * @param options Optional period format options.\n * @returns The formatted period string.\n */\nexport function formatPeriod(\n  period: Period | undefined,\n  locales?: Intl.LocalesArgument,\n  options?: Intl.DateTimeFormatOptions | undefined\n): string {\n  if (!period || (!period.start && !period.end)) {\n    return '';\n  }\n  return formatDateTime(period.start, locales, options) + ' - ' + formatDateTime(period.end, locales, options);\n}\n\nconst unitAdverbForm: Record<string, string> = {\n  s: 'every second',\n  min: 'every minute',\n  h: 'hourly',\n  d: 'daily',\n  wk: 'weekly',\n  mo: 'monthly',\n  a: 'annually',\n};\n\nconst singularUnits: Record<string, string> = {\n  s: 'second',\n  min: 'minute',\n  h: 'hour',\n  d: 'day',\n  wk: 'week',\n  mo: 'month',\n  a: 'year',\n};\n\nconst pluralUnits: Record<string, string> = {\n  s: 'seconds',\n  min: 'minutes',\n  h: 'hours',\n  d: 'days',\n  wk: 'weeks',\n  mo: 'months',\n  a: 'years',\n};\n\n/**\n * Formats a FHIR Timing as a human readable string.\n * @param timing The timing to format.\n * @returns The formatted timing string.\n */\nexport function formatTiming(timing: Timing | undefined): string {\n  if (!timing) {\n    return '';\n  }\n\n  const builder: string[] = [];\n\n  if (timing.repeat?.periodUnit) {\n    const frequency = timing.repeat.frequency || 1;\n    const period = timing.repeat.period || 1;\n    const periodUnit = timing.repeat.periodUnit;\n\n    if (frequency === 1 && period === 1) {\n      builder.push(unitAdverbForm[periodUnit]);\n    } else {\n      if (frequency === 1) {\n        builder.push('once');\n      } else {\n        builder.push(frequency + ' times');\n      }\n\n      if (period === 1) {\n        builder.push('per ' + singularUnits[periodUnit]);\n      } else {\n        builder.push('per ' + period + ' ' + pluralUnits[periodUnit]);\n      }\n    }\n\n    if (timing.repeat.dayOfWeek) {\n      builder.push('on ' + timing.repeat.dayOfWeek.map(capitalize).join(', '));\n    }\n\n    if (timing.repeat.timeOfDay) {\n      builder.push('at ' + timing.repeat.timeOfDay.map((t) => formatTime(t)).join(', '));\n    }\n  }\n\n  if (timing.event) {\n    builder.push(timing.event.map((d) => formatDateTime(d)).join(', '));\n  }\n\n  return capitalize(builder.join(' ').trim());\n}\n\n/**\n * Returns a human-readable string for a FHIR Range datatype, taking into account comparators and one-sided ranges\n * @param range A FHIR Range element\n * @param exclusive If true, one-sided ranges will be rendered with the '>' or '<' bounds rather than '>=' or '<='\n * @returns A human-readable string representation of the Range\n */\nexport function formatRange(range: Range | undefined, precision?: number, exclusive = false): string {\n  if (exclusive && precision === undefined) {\n    throw new Error('Precision must be specified for exclusive ranges');\n  }\n\n  const low = range?.low && { ...range.low };\n  const high = range?.high && { ...range.high };\n  if (!range || (low?.value === undefined && high?.value === undefined)) {\n    return '';\n  }\n\n  if (range.low?.value !== undefined && range.high?.value === undefined) {\n    if (exclusive && precision !== undefined) {\n      range.low.value = preciseDecrement(range.low.value, precision);\n      return `> ${formatQuantity(range.low, precision)}`;\n    }\n    return `>= ${formatQuantity(range.low, precision)}`;\n  }\n\n  if (range.low?.value === undefined && range.high?.value !== undefined) {\n    if (exclusive && precision !== undefined) {\n      range.high.value = preciseIncrement(range.high.value, precision);\n      return `< ${formatQuantity(range.high, precision)}`;\n    }\n    return `<= ${formatQuantity(range.high, precision)}`;\n  }\n\n  if (low?.unit === high?.unit) {\n    delete low?.unit;\n  }\n  return `${formatQuantity(low, precision)} - ${formatQuantity(high, precision)}`;\n}\n\n/**\n * Returns a human-readable string for a FHIR Quantity datatype, taking into account units and comparators\n * @param quantity A FHIR Quantity element\n * @returns A human-readable string representation of the Quantity\n */\nexport function formatQuantity(quantity: Quantity | undefined, precision?: number): string {\n  if (!quantity) {\n    return '';\n  }\n\n  const result = [];\n\n  if (quantity.comparator) {\n    result.push(quantity.comparator);\n    result.push(' ');\n  }\n\n  if (quantity.value !== undefined) {\n    if (precision !== undefined) {\n      result.push(quantity.value.toFixed(precision));\n    } else {\n      result.push(quantity.value);\n    }\n  }\n\n  if (quantity.unit) {\n    if (quantity.unit !== '%' && result[result.length - 1] !== ' ') {\n      result.push(' ');\n    }\n    result.push(quantity.unit);\n  }\n\n  return result.join('').trim();\n}\n\nexport function formatMoney(money: Money | undefined): string {\n  if (money?.value === undefined) {\n    return '';\n  }\n\n  return money.value.toLocaleString(undefined, {\n    style: 'currency',\n    currency: money.currency || 'USD',\n    currencyDisplay: 'narrowSymbol',\n  });\n}\n\n/**\n * Formats a CodeableConcept element as a string.\n * @param codeableConcept A FHIR CodeableConcept element\n * @returns The codeable concept as a string.\n */\nexport function formatCodeableConcept(codeableConcept: CodeableConcept | undefined): string {\n  if (!codeableConcept) {\n    return '';\n  }\n  if (codeableConcept.text) {\n    return codeableConcept.text;\n  }\n  if (codeableConcept.coding) {\n    return codeableConcept.coding.map((c) => formatCoding(c)).join(', ');\n  }\n  return '';\n}\n\n/**\n * Formats a Coding element as a string.\n * @param coding A FHIR Coding element\n * @returns The coding as a string.\n */\nexport function formatCoding(coding: Coding | undefined): string {\n  return coding?.display || coding?.code || '';\n}\n\n/**\n * Formats a FHIR Observation resource value as a string.\n * @param obs A FHIR Observation resource.\n * @returns A human-readable string representation of the Observation.\n */\nexport function formatObservationValue(obs: Observation | ObservationComponent | undefined): string {\n  if (!obs) {\n    return '';\n  }\n\n  if ('component' in obs) {\n    return (obs.component as ObservationComponent[]).map((c) => formatObservationValue(c)).join(' / ');\n  }\n\n  if (obs?.valueQuantity) {\n    return formatQuantity(obs.valueQuantity);\n  }\n\n  if (obs.valueCodeableConcept) {\n    return formatCodeableConcept(obs.valueCodeableConcept);\n  }\n\n  if (obs.valueString) {\n    return obs.valueString;\n  }\n\n  return '';\n}\n\n/**\n * Returns the input number increased by the `n` units of the specified precision\n * @param a The input number\n * @param precision The precision in number of digits.\n * @param n (default 1) The number of units to add\n */\nfunction preciseIncrement(a: number, precision: number, n = 1): number {\n  return (toPreciseInteger(a, precision) + n) * Math.pow(10, -precision);\n}\n\n/**\n * Returns the input number decreased by the `n` units of the specified precision\n * @param a The input number\n * @param precision The precision in number of digits.\n * @param n (default 1) The number of units to subtract\n */\nfunction preciseDecrement(a: number, precision: number, n = 1): number {\n  return (toPreciseInteger(a, precision) - n) * Math.pow(10, -precision);\n}\n\n/**\n * Returns an integer representation of the number with the given precision.\n * For example, if precision is 2, then 1.2345 will be returned as 123.\n * @param a The number.\n * @param precision Optional precision in number of digits.\n * @returns The integer with the given precision.\n */\nfunction toPreciseInteger(a: number, precision?: number): number {\n  if (precision === undefined) {\n    return a;\n  }\n  return Math.round(a * Math.pow(10, precision));\n}\n","import {\n  Attachment,\n  CodeableConcept,\n  Device,\n  Extension,\n  Identifier,\n  ObservationDefinition,\n  ObservationDefinitionQualifiedInterval,\n  Patient,\n  Practitioner,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n  Range,\n  Reference,\n  RelatedPerson,\n  Resource,\n} from '@medplum/fhirtypes';\nimport { formatHumanName } from './format';\n\n/**\n * @internal\n */\nexport type ProfileResource = Patient | Practitioner | RelatedPerson;\n\n/**\n * Creates a reference resource.\n * @param resource The FHIR reesource.\n * @returns A reference resource.\n */\nexport function createReference<T extends Resource>(resource: T): Reference<T> {\n  const reference = getReferenceString(resource);\n  const display = getDisplayString(resource);\n  return display === reference ? { reference } : { reference, display };\n}\n\n/**\n * Returns a reference string for a resource.\n * @param resource The FHIR resource.\n * @returns A reference string of the form resourceType/id.\n */\nexport function getReferenceString(resource: Resource): string {\n  return resource.resourceType + '/' + resource.id;\n}\n\n/**\n * Returns the ID portion of a reference.\n * @param reference A FHIR reference.\n * @returns The ID portion of a reference.\n */\nexport function resolveId(reference: Reference | undefined): string | undefined {\n  return reference?.reference?.split('/')[1];\n}\n\n/**\n * Returns true if the resource is a \"ProfileResource\".\n * @param resource The FHIR resource.\n * @returns True if the resource is a \"ProfileResource\".\n */\nexport function isProfileResource(resource: Resource): resource is ProfileResource {\n  return (\n    resource.resourceType === 'Patient' ||\n    resource.resourceType === 'Practitioner' ||\n    resource.resourceType === 'RelatedPerson'\n  );\n}\n\n/**\n * Returns a display string for the resource.\n * @param resource The input resource.\n * @return Human friendly display string.\n */\nexport function getDisplayString(resource: Resource): string {\n  if (isProfileResource(resource)) {\n    const profileName = getProfileResourceDisplayString(resource);\n    if (profileName) {\n      return profileName;\n    }\n  }\n  if (resource.resourceType === 'Device') {\n    const deviceName = getDeviceDisplayString(resource);\n    if (deviceName) {\n      return deviceName;\n    }\n  }\n  if (resource.resourceType === 'Observation') {\n    if ('code' in resource && resource.code?.text) {\n      return resource.code.text;\n    }\n  }\n  if (resource.resourceType === 'User') {\n    if (resource.email) {\n      return resource.email;\n    }\n  }\n  if ('name' in resource && resource.name && typeof resource.name === 'string') {\n    return resource.name;\n  }\n  return getReferenceString(resource);\n}\n\n/**\n * Returns a display string for a profile resource if one is found.\n * @param resource The profile resource.\n * @returns The display name if one is found.\n */\nfunction getProfileResourceDisplayString(resource: ProfileResource): string | undefined {\n  const names = resource.name;\n  if (names && names.length > 0) {\n    return formatHumanName(names[0]);\n  }\n  return undefined;\n}\n\n/**\n * Returns a display string for a device resource if one is found.\n * @param device The device resource.\n * @returns The display name if one is found.\n */\nfunction getDeviceDisplayString(device: Device): string | undefined {\n  const names = device.deviceName;\n  if (names && names.length > 0) {\n    return names[0].name;\n  }\n  return undefined;\n}\n\n/**\n * Returns an image URL for the resource, if one is available.\n * @param resource The input resource.\n * @returns The image URL for the resource or undefined.\n */\nexport function getImageSrc(resource: Resource): string | undefined {\n  if (!('photo' in resource)) {\n    return undefined;\n  }\n\n  const photo = resource.photo;\n  if (!photo) {\n    return undefined;\n  }\n\n  if (Array.isArray(photo)) {\n    for (const p of photo) {\n      const url = getPhotoImageSrc(p);\n      if (url) {\n        return url;\n      }\n    }\n  } else {\n    return getPhotoImageSrc(photo);\n  }\n\n  return undefined;\n}\n\nfunction getPhotoImageSrc(photo: Attachment): string | undefined {\n  if (photo.url && photo.contentType && photo.contentType.startsWith('image/')) {\n    return photo.url;\n  }\n  return undefined;\n}\n\n/**\n * Returns a Date property as a Date.\n * When working with JSON objects, Dates are often serialized as ISO-8601 strings.\n * When that happens, we need to safely convert to a proper Date object.\n * @param date The date property value, which could be a string or a Date object.\n * @returns A Date object.\n */\nexport function getDateProperty(date: string | undefined): Date | undefined {\n  return date ? new Date(date) : undefined;\n}\n\n/**\n * Calculates the age in years from the birth date.\n * @param birthDateStr The birth date or start date in ISO-8601 format YYYY-MM-DD.\n * @param endDateStr Optional end date in ISO-8601 format YYYY-MM-DD. Default value is today.\n * @returns The age in years, months, and days.\n */\nexport function calculateAge(\n  birthDateStr: string,\n  endDateStr?: string\n): { years: number; months: number; days: number } {\n  const startDate = new Date(birthDateStr);\n  startDate.setUTCHours(0, 0, 0, 0);\n\n  const endDate = endDateStr ? new Date(endDateStr) : new Date();\n  endDate.setUTCHours(0, 0, 0, 0);\n\n  const startYear = startDate.getUTCFullYear();\n  const startMonth = startDate.getUTCMonth();\n  const startDay = startDate.getUTCDate();\n\n  const endYear = endDate.getUTCFullYear();\n  const endMonth = endDate.getUTCMonth();\n  const endDay = endDate.getUTCDate();\n\n  let years = endYear - startYear;\n  if (endMonth < startMonth || (endMonth === startMonth && endDay < startDay)) {\n    years--;\n  }\n\n  let months = endYear * 12 + endMonth - (startYear * 12 + startMonth);\n  if (endDay < startDay) {\n    months--;\n  }\n\n  const days = Math.floor((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n\n  return { years, months, days };\n}\n\n/**\n * Calculates the age string for display using the age appropriate units.\n * If the age is greater than or equal to 2 years, then the age is displayed in years.\n * If the age is greater than or equal to 1 month, then the age is displayed in months.\n * Otherwise, the age is displayed in days.\n * @param birthDateStr The birth date or start date in ISO-8601 format YYYY-MM-DD.\n * @param endDateStr Optional end date in ISO-8601 format YYYY-MM-DD. Default value is today.\n * @returns The age string.\n */\nexport function calculateAgeString(birthDateStr: string, endDateStr?: string): string | undefined {\n  const { years, months, days } = calculateAge(birthDateStr, endDateStr);\n  if (years >= 2) {\n    return years.toString().padStart(3, '0') + 'Y';\n  } else if (months >= 1) {\n    return months.toString().padStart(3, '0') + 'M';\n  } else {\n    return days.toString().padStart(3, '0') + 'D';\n  }\n}\n\n/**\n * Returns all questionnaire answers as a map by link ID.\n * @param response The questionnaire response resource.\n * @returns Questionnaire answers mapped by link ID.\n */\nexport function getQuestionnaireAnswers(\n  response: QuestionnaireResponse\n): Record<string, QuestionnaireResponseItemAnswer> {\n  const result: Record<string, QuestionnaireResponseItemAnswer> = {};\n  buildQuestionnaireAnswerItems(response.item, result);\n  return result;\n}\n\n/**\n * Recursively builds the questionnaire answer items map.\n * @param item The current questionnaire response item.\n * @param result The cumulative result map.\n */\nfunction buildQuestionnaireAnswerItems(\n  items: QuestionnaireResponseItem[] | undefined,\n  result: Record<string, QuestionnaireResponseItemAnswer>\n): void {\n  if (items) {\n    for (const item of items) {\n      if (item.linkId && item.answer && item.answer.length > 0) {\n        result[item.linkId] = item.answer[0];\n      }\n      buildQuestionnaireAnswerItems(item.item, result);\n    }\n  }\n}\n\n/**\n * Returns the resource identifier for the given system.\n *\n * If multiple identifiers exist with the same system, the first one is returned.\n *\n * If the system is not found, then returns undefined.\n *\n * @param resource The resource to check.\n * @param system The identifier system.\n * @returns The identifier value if found; otherwise undefined.\n */\nexport function getIdentifier(resource: Resource, system: string): string | undefined {\n  const identifiers = (resource as any).identifier as Identifier[] | Identifier | undefined;\n  if (!identifiers) {\n    return undefined;\n  }\n  const array = Array.isArray(identifiers) ? identifiers : [identifiers];\n  for (const identifier of array) {\n    if (identifier.system === system) {\n      return identifier.value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns an extension value by extension URLs.\n * @param resource The base resource.\n * @param urls Array of extension URLs.  Each entry represents a nested extension.\n * @returns The extension value if found; undefined otherwise.\n */\nexport function getExtensionValue(resource: any, ...urls: string[]): string | undefined {\n  // Let curr be the current resource or extension. Extensions can be nested.\n  let curr: any = resource;\n\n  // For each of the urls, try to find a matching nested extension.\n  for (let i = 0; i < urls.length && curr; i++) {\n    curr = (curr?.extension as Extension[] | undefined)?.find((e) => e.url === urls[i]);\n  }\n\n  return curr?.valueString as string | undefined;\n}\n\n/**\n * FHIR JSON stringify.\n * Removes properties with empty string values.\n * Removes objects with zero properties.\n * See: https://www.hl7.org/fhir/json.html\n * @param value The input value.\n * @param pretty Optional flag to pretty-print the JSON.\n * @returns The resulting JSON string.\n */\nexport function stringify(value: any, pretty?: boolean): string {\n  return JSON.stringify(value, stringifyReplacer, pretty ? 2 : undefined);\n}\n\n/**\n * Evaluates JSON key/value pairs for FHIR JSON stringify.\n * Removes properties with empty string values.\n * Removes objects with zero properties.\n * @param {string} k Property key.\n * @param {*} v Property value.\n */\nfunction stringifyReplacer(k: string, v: any): any {\n  return !isArrayKey(k) && isEmpty(v) ? undefined : v;\n}\n\n/**\n * Returns true if the key is an array key.\n * @param k The property key.\n * @returns True if the key is an array key.\n */\nfunction isArrayKey(k: string): boolean {\n  return !!k.match(/\\d+$/);\n}\n\n/**\n * Returns true if the value is empty (null, undefined, empty string, or empty object).\n * @param v Any value.\n * @returns True if the value is an empty string or an empty object.\n */\nexport function isEmpty(v: any): boolean {\n  if (v === null || v === undefined) {\n    return true;\n  }\n  const t = typeof v;\n  return (t === 'string' && v === '') || (t === 'object' && Object.keys(v).length === 0);\n}\n\n/**\n * Resource equality.\n * Ignores meta.versionId and meta.lastUpdated.\n * @param object1 The first object.\n * @param object2 The second object.\n * @returns True if the objects are equal.\n */\nexport function deepEquals(object1: unknown, object2: unknown, path?: string): boolean {\n  if (object1 === object2) {\n    return true;\n  }\n  if (isEmpty(object1) && isEmpty(object2)) {\n    return true;\n  }\n  if (isEmpty(object1) || isEmpty(object2)) {\n    return false;\n  }\n  if (Array.isArray(object1) && Array.isArray(object2)) {\n    return deepEqualsArray(object1, object2);\n  }\n  if (Array.isArray(object1) || Array.isArray(object2)) {\n    return false;\n  }\n  if (isObject(object1) && isObject(object2)) {\n    return deepEqualsObject(object1, object2, path);\n  }\n  if (isObject(object1) || isObject(object2)) {\n    return false;\n  }\n  return false;\n}\n\nfunction deepEqualsArray(array1: unknown[], array2: unknown[]): boolean {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (!deepEquals(array1[i], array2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction deepEqualsObject(\n  object1: Record<string, unknown>,\n  object2: Record<string, unknown>,\n  path: string | undefined\n): boolean {\n  const keySet = new Set<string>();\n  Object.keys(object1).forEach((k) => keySet.add(k));\n  Object.keys(object2).forEach((k) => keySet.add(k));\n  if (path === 'meta') {\n    keySet.delete('versionId');\n    keySet.delete('lastUpdated');\n    keySet.delete('author');\n  }\n  for (const key of keySet) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n    if (!deepEquals(val1, val2, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a deep clone of the input value.\n *\n * Limitations:\n *  - Only supports JSON primitives and arrays.\n *  - Does not support Functions, lambdas, etc.\n *  - Does not support circular references.\n *\n * See: https://web.dev/structured-clone/\n * See: https://stackoverflow.com/questions/40488190/how-is-structured-clone-algorithm-different-from-deep-copy\n *\n * @param input The input to clone.\n * @returns A deep clone of the input.\n */\nexport function deepClone<T>(input: T): T {\n  return JSON.parse(JSON.stringify(input)) as T;\n}\n\n/**\n * Returns true if the input string is a UUID.\n * @param input The input string.\n * @returns True if the input string matches the UUID format.\n */\nexport function isUUID(input: string): boolean {\n  return !!input.match(/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/i);\n}\n\n/**\n * Returns true if the input is an object.\n * @param object The candidate object.\n * @returns True if the input is a non-null non-undefined object.\n */\nexport function isObject(obj: unknown): obj is Record<string, unknown> {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Returns true if the input array is an array of strings.\n * @param arr Input array.\n * @returns True if the input array is an array of strings.\n */\nexport function isStringArray(arr: any[]): arr is string[] {\n  return arr.every((e) => typeof e === 'string');\n}\n\n// Precompute hex octets\n// See: https://stackoverflow.com/a/55200387\nconst byteToHex: string[] = [];\nfor (let n = 0; n < 256; n++) {\n  byteToHex.push(n.toString(16).padStart(2, '0'));\n}\n\n/**\n * Converts an ArrayBuffer to hex string.\n * See: https://stackoverflow.com/a/55200387\n * @param arrayBuffer The input array buffer.\n * @returns The resulting hex string.\n */\nexport function arrayBufferToHex(arrayBuffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(arrayBuffer);\n  const result: string[] = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    result[i] = byteToHex[bytes[i]];\n  }\n  return result.join('');\n}\n\n/**\n * Converts an ArrayBuffer to a base-64 encoded string.\n * @param arrayBuffer The input array buffer.\n * @returns The base-64 encoded string.\n */\nexport function arrayBufferToBase64(arrayBuffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(arrayBuffer);\n  const result: string[] = [];\n  for (let i = 0; i < bytes.length; i++) {\n    result[i] = String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(result.join(''));\n}\n\nexport function capitalize(word: string): string {\n  return word.charAt(0).toUpperCase() + word.substring(1);\n}\n\nexport function isLowerCase(c: string): boolean {\n  return c === c.toLowerCase() && c !== c.toUpperCase();\n}\n\n/**\n * Tries to find a code string for a given system within a given codeable concept.\n * @param concept The codeable concept.\n * @param system The system string.\n * @returns The code if found; otherwise undefined.\n */\nexport function getCodeBySystem(concept: CodeableConcept, system: string): string | undefined {\n  return concept?.coding?.find((coding) => coding.system === system)?.code;\n}\n\n/**\n * Sets a code for a given system within a given codeable concept.\n * @param concept The codeable concept.\n * @param system The system string.\n * @param code The code value.\n */\nexport function setCodeBySystem(concept: CodeableConcept, system: string, code: string): void {\n  if (!concept.coding) {\n    concept.coding = [];\n  }\n  const coding = concept.coding?.find((c) => c.system === system);\n  if (coding) {\n    coding.code = code;\n  } else {\n    concept.coding?.push({ system, code });\n  }\n}\n\n/**\n * Tries to find an observation interval for the given patient and value.\n * @param definition The observation definition.\n * @param patient The patient.\n * @param value The observation value.\n * @returns The observation interval if found; otherwise undefined.\n */\nexport function findObservationInterval(\n  definition: ObservationDefinition,\n  patient: Patient,\n  value: number,\n  category?: 'reference' | 'critical' | 'absolute'\n): ObservationDefinitionQualifiedInterval | undefined {\n  return definition.qualifiedInterval?.find(\n    (interval) =>\n      observationIntervalMatchesPatient(interval, patient) &&\n      observationIntervalMatchesValue(interval, value, definition.quantitativeDetails?.decimalPrecision) &&\n      (category === undefined || interval.category === category)\n  );\n}\n\n/**\n * Tries to find an observation reference range for the given patient and condition names.\n * @param definition The observation definition.\n * @param patient The patient.\n * @param names The condition names.\n * @returns The observation interval if found; otherwise undefined.\n */\nexport function findObservationReferenceRange(\n  definition: ObservationDefinition,\n  patient: Patient,\n  names: string[]\n): ObservationDefinitionQualifiedInterval | undefined {\n  return definition.qualifiedInterval?.find(\n    (interval) => observationIntervalMatchesPatient(interval, patient) && names.includes(interval.condition as string)\n  );\n}\n\n/**\n * Returns true if the patient matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient matches the observation interval.\n */\nfunction observationIntervalMatchesPatient(\n  interval: ObservationDefinitionQualifiedInterval,\n  patient: Patient\n): boolean {\n  return observationIntervalMatchesGender(interval, patient) && observationIntervalMatchesAge(interval, patient);\n}\n\n/**\n * Returns true if the patient gender matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient gender matches the observation interval.\n */\nfunction observationIntervalMatchesGender(interval: ObservationDefinitionQualifiedInterval, patient: Patient): boolean {\n  return !interval.gender || interval.gender === patient.gender;\n}\n\n/**\n * Returns true if the patient age matches the observation interval.\n * @param interval The observation interval.\n * @param patient The patient.\n * @returns True if the patient age matches the observation interval.\n */\nfunction observationIntervalMatchesAge(interval: ObservationDefinitionQualifiedInterval, patient: Patient): boolean {\n  return !interval.age || matchesRange(calculateAge(patient.birthDate as string).years, interval.age);\n}\n\n/**\n * Returns true if the value matches the observation interval.\n * @param interval The observation interval.\n * @param value The observation value.\n * @param precision Optional precision in number of digits.\n * @returns True if the value matches the observation interval.\n */\nfunction observationIntervalMatchesValue(\n  interval: ObservationDefinitionQualifiedInterval,\n  value: number,\n  precision?: number\n): boolean {\n  return !!interval.range && matchesRange(value, interval.range, precision);\n}\n\n/**\n * Returns true if the value is in the range accounting for precision.\n * @param value The numeric value.\n * @param range The numeric range.\n * @param precision Optional precision in number of digits.\n * @returns True if the value is within the range.\n */\nexport function matchesRange(value: number, range: Range, precision?: number): boolean {\n  return (\n    (range.low?.value === undefined || preciseGreaterThanOrEquals(value, range.low.value, precision)) &&\n    (range.high?.value === undefined || preciseLessThanOrEquals(value, range.high.value, precision))\n  );\n}\n\n/**\n * Returns the input number rounded to the specified number of digits.\n * @param a The input number.\n * @param precision The precision in number of digits.\n * @returns The number rounded to the specified number of digits.\n */\nexport function preciseRound(a: number, precision: number): number {\n  return parseFloat(a.toFixed(precision));\n}\n\n/**\n * Returns true if the two numbers are equal to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the two numbers are equal to the given precision.\n */\nexport function preciseEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) === toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is less than the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is less than the second number to the given precision.\n */\nexport function preciseLessThan(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) < toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is greater than the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is greater than the second number to the given precision.\n */\nexport function preciseGreaterThan(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) > toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is less than or equal to the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is less than or equal to the second number to the given precision.\n */\nexport function preciseLessThanOrEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) <= toPreciseInteger(b, precision);\n}\n\n/**\n * Returns true if the first number is greater than or equal to the second number to the given precision.\n * @param a The first number.\n * @param b The second number.\n * @param precision Optional precision in number of digits.\n * @returns True if the first number is greater than or equal to the second number to the given precision.\n */\nexport function preciseGreaterThanOrEquals(a: number, b: number, precision?: number): boolean {\n  return toPreciseInteger(a, precision) >= toPreciseInteger(b, precision);\n}\n\n/**\n * Returns an integer representation of the number with the given precision.\n * For example, if precision is 2, then 1.2345 will be returned as 123.\n * @param a The number.\n * @param precision Optional precision in number of digits.\n * @returns The integer with the given precision.\n */\nfunction toPreciseInteger(a: number, precision?: number): number {\n  if (precision === undefined) {\n    return a;\n  }\n  return Math.round(a * Math.pow(10, precision));\n}\n","import { arrayBufferToHex } from './utils';\n\n/**\n * Returns a cryptographically secure random string.\n */\nexport function getRandomString(): string {\n  const randomItems = new Uint32Array(28);\n  crypto.getRandomValues(randomItems);\n  return arrayBufferToHex(randomItems.buffer);\n}\n\n/**\n * Encrypts a string with SHA256 encryption.\n * @param str\n */\nexport async function encryptSHA256(str: string): Promise<ArrayBuffer> {\n  return crypto.subtle.digest('SHA-256', new TextEncoder().encode(str));\n}\n","/*\n * Based on: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\n\ninterface Event {\n  readonly type: string;\n  readonly defaultPrevented?: boolean;\n}\n\ntype EventListener = (e: Event) => void;\n\nexport class EventTarget {\n  readonly #listeners: Record<string, EventListener[]>;\n\n  constructor() {\n    this.#listeners = {};\n  }\n\n  addEventListener(type: string, callback: EventListener): void {\n    if (!this.#listeners[type]) {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(callback);\n  }\n\n  removeEventListeneer(type: string, callback: EventListener): void {\n    const array = this.#listeners[type];\n    if (!array) {\n      return;\n    }\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] === callback) {\n        array.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  dispatchEvent(event: Event): boolean {\n    const array = this.#listeners[event.type];\n    if (array) {\n      array.forEach((listener) => listener.call(this, event));\n    }\n    return !event.defaultPrevented;\n  }\n}\n","/**\n * Decodes a section of a JWT.\n * See: https://tools.ietf.org/html/rfc7519\n * @param payload\n */\nfunction decodePayload(payload: string): Record<string, number | string> {\n  const cleanedPayload = payload.replace(/-/g, '+').replace(/_/g, '/');\n  const decodedPayload = decodeBase64(cleanedPayload);\n  const uriEncodedPayload = Array.from(decodedPayload).reduce((acc, char) => {\n    const uriEncodedChar = ('00' + char.charCodeAt(0).toString(16)).slice(-2);\n    return `${acc}%${uriEncodedChar}`;\n  }, '');\n  const jsonPayload = decodeURIComponent(uriEncodedPayload);\n  return JSON.parse(jsonPayload);\n}\n\nfunction decodeBase64(data: string): string {\n  if (typeof window !== 'undefined') {\n    return window.atob(data);\n  }\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(data, 'base64').toString('binary');\n  }\n  throw new Error('Unable to decode base64');\n}\n\n/**\n * Parses the JWT payload.\n * @param token JWT token\n */\nexport function parseJWTPayload(token: string): Record<string, number | string> {\n  const [_header, payload, _signature] = token.split('.');\n  return decodePayload(payload);\n}\n","/**\n * The ReadablePromise class wraps a request promise suitable for React Suspense.\n * See: https://blog.logrocket.com/react-suspense-data-fetching/#wrappromise-js\n * See: https://github.com/ovieokeh/suspense-data-fetching/blob/master/lib/api/wrapPromise.js\n */\nexport class ReadablePromise<T> implements Promise<T> {\n  readonly [Symbol.toStringTag]: string = 'ReadablePromise';\n  #suspender: Promise<T>;\n  #status: 'pending' | 'error' | 'success' = 'pending';\n  #response: T | undefined;\n  #error: Error | undefined;\n\n  constructor(requestPromise: Promise<T>) {\n    this.#suspender = requestPromise.then(\n      (res: T) => {\n        this.#status = 'success';\n        this.#response = res;\n        return res;\n      },\n      (err: any) => {\n        this.#status = 'error';\n        this.#error = err;\n        throw err;\n      }\n    );\n  }\n\n  /**\n   * Returns true if the promise is pending.\n   * @returns True if the Promise is pending.\n   */\n  isPending(): boolean {\n    return this.#status === 'pending';\n  }\n\n  /**\n   * Returns true if the promise resolved successfully.\n   * @returns True if the Promise resolved successfully.\n   */\n  isOk(): boolean {\n    return this.#status === 'success';\n  }\n\n  /**\n   * Attempts to read the value of the promise.\n   * If the promise is pending, this method will throw a promise.\n   * If the promise rejected, this method will throw the rejection reason.\n   * If the promise resolved, this method will return the resolved value.\n   * @returns The resolved value of the Promise.\n   */\n  read(): T {\n    switch (this.#status) {\n      case 'pending':\n        throw this.#suspender;\n      case 'error':\n        throw this.#error;\n      default:\n        return this.#response as T;\n    }\n  }\n\n  /**\n   * Attaches callbacks for the resolution and/or rejection of the Promise.\n   * @param onfulfilled The callback to execute when the Promise is resolved.\n   * @param onrejected The callback to execute when the Promise is rejected.\n   * @returns A Promise for the completion of which ever callback is executed.\n   */\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): Promise<TResult1 | TResult2> {\n    return this.#suspender.then(onfulfilled, onrejected);\n  }\n\n  /**\n   * Attaches a callback for only the rejection of the Promise.\n   * @param onrejected The callback to execute when the Promise is rejected.\n   * @returns A Promise for the completion of the callback.\n   */\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n  ): Promise<T | TResult> {\n    return this.#suspender.catch(onrejected);\n  }\n\n  /**\n   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n   * resolved value cannot be modified from the callback.\n   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n   * @returns A Promise for the completion of the callback.\n   */\n  finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.#suspender.finally(onfinally);\n  }\n}\n","import { stringify } from './utils';\n\n/**\n * The ClientStorage class is a utility class for storing strings and objects.\n *\n * When using MedplumClient in the browser, it will be backed by browser localStorage.\n *\n * When Using MedplumClient in the server, it will be backed by the MemoryStorage class.\n */\nexport class ClientStorage {\n  readonly #storage: Storage;\n\n  constructor() {\n    this.#storage = typeof localStorage !== 'undefined' ? localStorage : new MemoryStorage();\n  }\n\n  clear(): void {\n    this.#storage.clear();\n  }\n\n  getString(key: string): string | undefined {\n    return this.#storage.getItem(key) || undefined;\n  }\n\n  setString(key: string, value: string | undefined): void {\n    if (value) {\n      this.#storage.setItem(key, value);\n    } else {\n      this.#storage.removeItem(key);\n    }\n  }\n\n  getObject<T>(key: string): T | undefined {\n    const str = this.getString(key);\n    return str ? (JSON.parse(str) as T) : undefined;\n  }\n\n  setObject<T>(key: string, value: T): void {\n    this.setString(key, value ? stringify(value) : undefined);\n  }\n}\n\n/**\n * The MemoryStorage class is a minimal in-memory implementation of the Storage interface.\n */\nexport class MemoryStorage implements Storage {\n  #data: Map<string, string>;\n\n  constructor() {\n    this.#data = new Map<string, string>();\n  }\n\n  /**\n   * Returns the number of key/value pairs.\n   */\n  get length(): number {\n    return this.#data.size;\n  }\n\n  /**\n   * Removes all key/value pairs, if there are any.\n   */\n  clear(): void {\n    this.#data.clear();\n  }\n\n  /**\n   * Returns the current value associated with the given key, or null if the given key does not exist.\n   */\n  getItem(key: string): string | null {\n    return this.#data.get(key) ?? null;\n  }\n\n  /**\n   * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n   */\n  setItem(key: string, value: string | null): void {\n    if (value) {\n      this.#data.set(key, value);\n    } else {\n      this.#data.delete(key);\n    }\n  }\n\n  /**\n   * Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n   */\n  removeItem(key: string): void {\n    this.#data.delete(key);\n  }\n\n  /**\n   * Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.\n   */\n  key(index: number): string | null {\n    return Array.from(this.#data.keys())[index];\n  }\n}\n","import {\n  Bundle,\n  BundleEntry,\n  ElementDefinition,\n  Resource,\n  SearchParameter,\n  StructureDefinition,\n} from '@medplum/fhirtypes';\nimport baseSchema from './base-schema.json';\nimport { SearchParameterDetails } from './searchparams';\nimport { capitalize } from './utils';\n\nexport interface TypedValue {\n  readonly type: string;\n  readonly value: any;\n}\n\n/**\n * List of property types.\n * http://www.hl7.org/fhir/valueset-defined-types.html\n * The list here includes additions found from StructureDefinition resources.\n */\nexport enum PropertyType {\n  Address = 'Address',\n  Age = 'Age',\n  Annotation = 'Annotation',\n  Attachment = 'Attachment',\n  BackboneElement = 'BackboneElement',\n  CodeableConcept = 'CodeableConcept',\n  Coding = 'Coding',\n  ContactDetail = 'ContactDetail',\n  ContactPoint = 'ContactPoint',\n  Contributor = 'Contributor',\n  Count = 'Count',\n  DataRequirement = 'DataRequirement',\n  Distance = 'Distance',\n  Dosage = 'Dosage',\n  Duration = 'Duration',\n  Expression = 'Expression',\n  Extension = 'Extension',\n  HumanName = 'HumanName',\n  Identifier = 'Identifier',\n  MarketingStatus = 'MarketingStatus',\n  Meta = 'Meta',\n  Money = 'Money',\n  Narrative = 'Narrative',\n  ParameterDefinition = 'ParameterDefinition',\n  Period = 'Period',\n  Population = 'Population',\n  ProdCharacteristic = 'ProdCharacteristic',\n  ProductShelfLife = 'ProductShelfLife',\n  Quantity = 'Quantity',\n  Range = 'Range',\n  Ratio = 'Ratio',\n  Reference = 'Reference',\n  RelatedArtifact = 'RelatedArtifact',\n  SampledData = 'SampledData',\n  Signature = 'Signature',\n  SubstanceAmount = 'SubstanceAmount',\n  SystemString = 'http://hl7.org/fhirpath/System.String',\n  Timing = 'Timing',\n  TriggerDefinition = 'TriggerDefinition',\n  UsageContext = 'UsageContext',\n  base64Binary = 'base64Binary',\n  boolean = 'boolean',\n  canonical = 'canonical',\n  code = 'code',\n  date = 'date',\n  dateTime = 'dateTime',\n  decimal = 'decimal',\n  id = 'id',\n  instant = 'instant',\n  integer = 'integer',\n  markdown = 'markdown',\n  oid = 'oid',\n  positiveInt = 'positiveInt',\n  string = 'string',\n  time = 'time',\n  unsignedInt = 'unsignedInt',\n  uri = 'uri',\n  url = 'url',\n  uuid = 'uuid',\n}\n\n/**\n * An IndexedStructureDefinition is a lookup-optimized version of a StructureDefinition.\n *\n * StructureDefinition resources contain schema information for other resource types.\n * These schemas can be used to automatically generate user interface elements for\n * resources.\n *\n * However, a StructureDefinition resource is not optimized for realtime lookups.  All\n * resource types, sub types, and property definitions are stored in a flat array of\n * ElementDefinition objects.  Therefore, to lookup the schema for a property (i.e., \"Patient.name\")\n * requires a linear scan of all ElementDefinition objects\n *\n * A StructureDefinition resource contains information about one or more types.\n * For example, the \"Patient\" StructureDefinition includes \"Patient\", \"Patient_Contact\",\n * \"Patient_Communication\", and \"Patient_Link\".  This is inefficient.\n *\n * Instead, we create an indexed version of the StructureDefinition, called IndexedStructureDefinition.\n * In an IndexedStructureDefinition, retrieving a property definition is a hashtable lookup.\n *\n * The hierarchy is:\n *   IndexedStructureDefinition - top level for one resource type\n *   TypeSchema - one per resource type and all contained BackboneElements\n *   PropertySchema - one per property/field\n */\nexport interface IndexedStructureDefinition {\n  types: { [resourceType: string]: TypeSchema };\n}\n\n/**\n * An indexed TypeSchema.\n *\n * Example:  The IndexedStructureDefinition for \"Patient\" would include the following TypeSchemas:\n *   1) Patient\n *   2) Patient_Contact\n *   3) Patient_Communication\n *   4) Patient_Link\n */\nexport interface TypeSchema {\n  structureDefinition: StructureDefinition;\n  elementDefinition: ElementDefinition;\n  display: string;\n  properties: { [name: string]: ElementDefinition };\n  searchParams?: { [code: string]: SearchParameter };\n  searchParamsDetails?: { [code: string]: SearchParameterDetails };\n  description?: string;\n  parentType?: string;\n}\n\n/**\n * Creates a new empty IndexedStructureDefinition.\n * @returns The empty IndexedStructureDefinition.\n * @deprecated Use globalSchema\n */\nexport function createSchema(): IndexedStructureDefinition {\n  return { types: {} };\n}\n\nfunction createTypeSchema(\n  typeName: string,\n  structureDefinition: StructureDefinition,\n  elementDefinition: ElementDefinition\n): TypeSchema {\n  return {\n    structureDefinition,\n    elementDefinition,\n    display: typeName,\n    description: elementDefinition.definition,\n    properties: {},\n  };\n}\n\n/**\n * Indexes a bundle of StructureDefinitions for faster lookup.\n * @param bundle A FHIR bundle StructureDefinition resources.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nexport function indexStructureDefinitionBundle(bundle: Bundle): void {\n  for (const entry of bundle.entry as BundleEntry[]) {\n    const resource = entry.resource as Resource;\n    if (resource.resourceType === 'StructureDefinition') {\n      indexStructureDefinition(resource);\n    }\n  }\n}\n\n/**\n * Indexes a StructureDefinition for fast lookup.\n * @param structureDefinition The original StructureDefinition.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nexport function indexStructureDefinition(structureDefinition: StructureDefinition): void {\n  const typeName = structureDefinition.name;\n  if (!typeName) {\n    return;\n  }\n\n  const elements = structureDefinition.snapshot?.element;\n  if (elements) {\n    // First pass, build types\n    elements.forEach((element) => indexType(structureDefinition, element));\n\n    // Second pass, build properties\n    elements.forEach((element) => indexProperty(element));\n  }\n}\n\n/**\n * Indexes TypeSchema from an ElementDefinition.\n * In the common case, there will be many ElementDefinition instances per TypeSchema.\n * Only the first occurrence is saved.\n * @param structureDefinition The parent type structure definition.\n * @param elementDefinition The element definition.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nfunction indexType(structureDefinition: StructureDefinition, elementDefinition: ElementDefinition): void {\n  const path = elementDefinition.path as string;\n  const typeCode = elementDefinition.type?.[0]?.code;\n  if (typeCode !== undefined && typeCode !== 'Element' && typeCode !== 'BackboneElement') {\n    return;\n  }\n  const parts = path.split('.');\n  const typeName = buildTypeName(parts);\n  globalSchema.types[typeName] = createTypeSchema(typeName, structureDefinition, elementDefinition);\n  globalSchema.types[typeName].parentType = buildTypeName(parts.slice(0, parts.length - 1));\n}\n\n/**\n * Indexes PropertySchema from an ElementDefinition.\n * @param element The input ElementDefinition.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nfunction indexProperty(element: ElementDefinition): void {\n  const path = element.path as string;\n  const parts = path.split('.');\n  if (parts.length === 1) {\n    return;\n  }\n  const typeName = buildTypeName(parts.slice(0, parts.length - 1));\n  const typeSchema = globalSchema.types[typeName];\n  if (!typeSchema) {\n    return;\n  }\n  const key = parts[parts.length - 1];\n  typeSchema.properties[key] = element;\n}\n\n/**\n * Indexes a bundle of SearchParameter resources for faster lookup.\n * @param bundle A FHIR bundle SearchParameter resources.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nexport function indexSearchParameterBundle(bundle: Bundle<SearchParameter>): void {\n  for (const entry of bundle.entry as BundleEntry[]) {\n    const resource = entry.resource as SearchParameter;\n    if (resource.resourceType === 'SearchParameter') {\n      indexSearchParameter(resource);\n    }\n  }\n}\n\n/**\n * Indexes a SearchParameter resource for fast lookup.\n * Indexes by SearchParameter.code, which is the query string parameter name.\n * @param searchParam The SearchParameter resource.\n * @see {@link IndexedStructureDefinition} for more details on indexed StructureDefinitions.\n */\nexport function indexSearchParameter(searchParam: SearchParameter): void {\n  if (!searchParam.base) {\n    return;\n  }\n\n  for (const resourceType of searchParam.base) {\n    const typeSchema = globalSchema.types[resourceType];\n    if (!typeSchema) {\n      continue;\n    }\n\n    if (!typeSchema.searchParams) {\n      typeSchema.searchParams = {\n        _id: {\n          base: [resourceType],\n          code: '_id',\n          type: 'token',\n          expression: resourceType + '.id',\n        } as SearchParameter,\n        _lastUpdated: {\n          base: [resourceType],\n          code: '_lastUpdated',\n          type: 'date',\n          expression: resourceType + '.meta.lastUpdated',\n        } as SearchParameter,\n        _compartment: {\n          base: [resourceType],\n          code: '_compartment',\n          type: 'reference',\n          expression: resourceType + '.meta.compartment',\n        } as SearchParameter,\n      };\n    }\n\n    typeSchema.searchParams[searchParam.code as string] = searchParam;\n  }\n}\n\nexport function buildTypeName(components: string[]): string {\n  if (components.length === 1) {\n    return components[0];\n  }\n  return components.map(capitalize).join('');\n}\n\nexport function getPropertyDisplayName(path: string): string {\n  // Get the property name, which is the remainder after the last period\n  // For example, for path \"Patient.birthDate\"\n  // the property name is \"birthDate\"\n  const propertyName = path.replaceAll('[x]', '').split('.').pop() as string;\n\n  // Special case for ID\n  if (propertyName === 'id') {\n    return 'ID';\n  }\n\n  // Split by capital letters\n  // Capitalize the first letter of each word\n  // Join together with spaces in between\n  // Then normalize whitespace to single space character\n  // For example, for property name \"birthDate\",\n  // the display name is \"Birth Date\".\n  return propertyName\n    .split(/(?=[A-Z])/)\n    .map(capitalize)\n    .join(' ')\n    .replace('_', ' ')\n    .replace(/\\s+/g, ' ');\n}\n\n/**\n * Returns an element definition by type and property name.\n * Handles content references.\n * @param typeName The type name.\n * @param propertyName The property name.\n * @returns The element definition if found.\n */\nexport function getElementDefinition(typeName: string, propertyName: string): ElementDefinition | undefined {\n  const typeSchema = globalSchema.types[typeName];\n  if (!typeSchema) {\n    return undefined;\n  }\n\n  const property = typeSchema.properties[propertyName] ?? typeSchema.properties[propertyName + '[x]'];\n  if (!property) {\n    return undefined;\n  }\n\n  if (property.contentReference) {\n    // Content references start with a \"#\"\n    // Remove the \"#\" character\n    const contentReference = property.contentReference.substring(1).split('.');\n    const referencePropertyName = contentReference.pop() as string;\n    const referenceTypeName = buildTypeName(contentReference);\n    return getElementDefinition(referenceTypeName, referencePropertyName);\n  }\n\n  return property;\n}\n\n/**\n * Global schema singleton.\n */\nexport const globalSchema = baseSchema as unknown as IndexedStructureDefinition;\n","// PKCE auth based on:\n// https://aws.amazon.com/blogs/security/how-to-add-authentication-single-page-web-application-with-amazon-cognito-oauth2-implementation/\n\nimport {\n  Binary,\n  Bundle,\n  Communication,\n  Encounter,\n  ExtractResource,\n  OperationOutcome,\n  Patient,\n  Project,\n  ProjectMembership,\n  ProjectSecret,\n  Reference,\n  Resource,\n  ResourceType,\n  SearchParameter,\n  StructureDefinition,\n  UserConfiguration,\n  ValueSet,\n} from '@medplum/fhirtypes';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n/** @ts-ignore */\nimport type { CustomTableLayout, TDocumentDefinitions, TFontDictionary } from 'pdfmake/interfaces';\nimport { LRUCache } from './cache';\nimport { encryptSHA256, getRandomString } from './crypto';\nimport { EventTarget } from './eventtarget';\nimport { Hl7Message } from './hl7';\nimport { parseJWTPayload } from './jwt';\nimport { ReadablePromise } from './readablepromise';\nimport { ClientStorage } from './storage';\nimport { globalSchema, IndexedStructureDefinition, indexSearchParameter, indexStructureDefinition } from './types';\nimport { arrayBufferToBase64, createReference, ProfileResource } from './utils';\n\nexport const MEDPLUM_VERSION = process.env.MEDPLUM_VERSION;\n\nconst DEFAULT_BASE_URL = 'https://api.medplum.com/';\nconst DEFAULT_RESOURCE_CACHE_SIZE = 1000;\nconst DEFAULT_CACHE_TIME = 60000; // 60 seconds\nconst JSON_CONTENT_TYPE = 'application/json';\nconst FHIR_CONTENT_TYPE = 'application/fhir+json';\nconst PATCH_CONTENT_TYPE = 'application/json-patch+json';\n\n/**\n * The MedplumClientOptions interface defines configuration options for MedplumClient.\n *\n * All configuration settings are optional.\n */\nexport interface MedplumClientOptions {\n  /**\n   * Base server URL.\n   *\n   * Default value is https://api.medplum.com/\n   *\n   * Use this to point to a custom Medplum deployment.\n   */\n  baseUrl?: string;\n\n  /**\n   * OAuth2 authorize URL.\n   *\n   * Default value is baseUrl + \"/oauth2/authorize\".\n   *\n   * Use this if you want to use a separate OAuth server.\n   */\n  authorizeUrl?: string;\n\n  /**\n   * OAuth2 token URL.\n   *\n   * Default value is baseUrl + \"/oauth2/token\".\n   *\n   * Use this if you want to use a separate OAuth server.\n   */\n  tokenUrl?: string;\n\n  /**\n   * OAuth2 logout URL.\n   *\n   * Default value is baseUrl + \"/oauth2/logout\".\n   *\n   * Use this if you want to use a separate OAuth server.\n   */\n  logoutUrl?: string;\n\n  /**\n   * The client ID.\n   *\n   * Client ID can be used for SMART-on-FHIR customization.\n   */\n  clientId?: string;\n\n  /**\n   * Number of resources to store in the cache.\n   *\n   * Default value is 1000.\n   *\n   * Consider using this for performance of displaying Patient or Practitioner resources.\n   */\n  resourceCacheSize?: number;\n\n  /**\n   * The length of time in milliseconds to cache resources.\n   *\n   * Default value is 10000 (10 seconds).\n   *\n   * Cache time of zero disables all caching.\n   *\n   * For any individual request, the cache behavior can be overridden by setting the cache property on request options.\n   *\n   * See: https://developer.mozilla.org/en-US/docs/Web/API/Request/cache\n   */\n  cacheTime?: number;\n\n  /**\n   * Fetch implementation.\n   *\n   * Default is window.fetch (if available).\n   *\n   * For nodejs applications, consider the 'node-fetch' package.\n   */\n  fetch?: FetchLike;\n\n  /**\n   * Create PDF implementation.\n   *\n   * Default is none, and PDF generation is disabled.\n   *\n   * In browser environments, import the client-side pdfmake library.\n   *\n   * ```html\n   * <script src=\"pdfmake.min.js\"></script>\n   * <script>\n   * async function createPdf(docDefinition, tableLayouts, fonts) {\n   *   return new Promise((resolve) => {\n   *     pdfMake.createPdf(docDefinition, tableLayouts, fonts).getBlob(resolve);\n   *   });\n   * }\n   * </script>\n   * ```\n   *\n   * In nodejs applications:\n   *\n   * ```ts\n   * import type { CustomTableLayout, TDocumentDefinitions, TFontDictionary } from 'pdfmake/interfaces';\n   * function createPdf(\n   *   docDefinition: TDocumentDefinitions,\n   *   tableLayouts?: { [name: string]: CustomTableLayout },\n   *   fonts?: TFontDictionary\n   * ): Promise<Buffer> {\n   *   return new Promise((resolve, reject) => {\n   *     const printer = new PdfPrinter(fonts || {});\n   *     const pdfDoc = printer.createPdfKitDocument(docDefinition, { tableLayouts });\n   *     const chunks: Uint8Array[] = [];\n   *     pdfDoc.on('data', (chunk: Uint8Array) => chunks.push(chunk));\n   *     pdfDoc.on('end', () => resolve(Buffer.concat(chunks)));\n   *     pdfDoc.on('error', reject);\n   *     pdfDoc.end();\n   *   });\n   * }\n   * ```\n   */\n  createPdf?: CreatePdfFunction;\n\n  /**\n   * Callback for when the client is unauthenticated.\n   *\n   * Default is do nothing.\n   *\n   * For client side applications, consider redirecting to a sign in page.\n   */\n  onUnauthenticated?: () => void;\n}\n\nexport interface FetchLike {\n  (url: string, options?: any): Promise<any>;\n}\n\nexport interface CreatePdfFunction {\n  (\n    docDefinition: TDocumentDefinitions,\n    tableLayouts?:\n      | {\n          [name: string]: CustomTableLayout;\n        }\n      | undefined,\n    fonts?: TFontDictionary | undefined\n  ): Promise<any>;\n}\n\nexport interface BaseLoginRequest {\n  readonly projectId?: string;\n  readonly clientId?: string;\n  readonly resourceType?: string;\n  readonly scope?: string;\n  readonly nonce?: string;\n  readonly codeChallenge?: string;\n  readonly codeChallengeMethod?: string;\n  readonly googleClientId?: string;\n  readonly launch?: string;\n}\n\nexport interface EmailPasswordLoginRequest extends BaseLoginRequest {\n  readonly email: string;\n  readonly password: string;\n  readonly remember?: boolean;\n}\n\nexport interface NewUserRequest {\n  readonly firstName: string;\n  readonly lastName: string;\n  readonly email: string;\n  readonly password: string;\n  readonly recaptchaToken: string;\n  readonly recaptchaSiteKey?: string;\n  readonly remember?: boolean;\n  readonly projectId?: string;\n}\n\nexport interface NewProjectRequest {\n  readonly login: string;\n  readonly projectName: string;\n}\n\nexport interface NewPatientRequest {\n  readonly login: string;\n  readonly projectId: string;\n}\n\nexport interface GoogleCredentialResponse {\n  readonly clientId: string;\n  readonly credential: string;\n}\n\nexport interface GoogleLoginRequest extends BaseLoginRequest {\n  readonly googleClientId: string;\n  readonly googleCredential: string;\n  readonly createUser?: boolean;\n}\n\nexport interface LoginAuthenticationResponse {\n  readonly login: string;\n  readonly mfaRequired?: boolean;\n  readonly code?: string;\n  readonly memberships?: ProjectMembership[];\n}\n\nexport interface LoginProfileResponse {\n  readonly login: string;\n  readonly scope: string;\n}\n\nexport interface LoginScopeResponse {\n  readonly login: string;\n  readonly code: string;\n}\n\nexport interface LoginState {\n  readonly project: Reference<Project>;\n  readonly profile: Reference<ProfileResource>;\n  readonly accessToken: string;\n  readonly refreshToken: string;\n}\n\nexport interface TokenResponse {\n  readonly token_type: string;\n  readonly id_token: string;\n  readonly access_token: string;\n  readonly refresh_token: string;\n  readonly expires_in: number;\n  readonly project: Reference<Project>;\n  readonly profile: Reference<ProfileResource>;\n}\n\nexport interface BotEvent<T = Resource | Hl7Message | string | Record<string, any>> {\n  readonly contentType: string;\n  readonly input: T;\n  readonly secrets: Record<string, ProjectSecret>;\n}\n\n/**\n * JSONPatch patch operation.\n * Compatible with fast-json-patch Operation.\n */\nexport interface PatchOperation {\n  readonly op: 'add' | 'remove' | 'replace' | 'copy' | 'move' | 'test';\n  readonly path: string;\n  readonly value?: any;\n}\n\n/**\n * Email address definition.\n * Compatible with nodemailer Mail.Address.\n */\nexport interface MailAddress {\n  readonly name: string;\n  readonly address: string;\n}\n\n/**\n * Email attachment definition.\n * Compatible with nodemailer Mail.Options.\n */\nexport interface MailAttachment {\n  /** String, Buffer or a Stream contents for the attachmentent */\n  readonly content?: string;\n  /** path to a file or an URL (data uris are allowed as well) if you want to stream the file instead of including it (better for larger attachments) */\n  readonly path?: string;\n  /** filename to be reported as the name of the attached file, use of unicode is allowed. If you do not want to use a filename, set this value as false, otherwise a filename is generated automatically */\n  readonly filename?: string | false;\n  /** optional content type for the attachment, if not set will be derived from the filename property */\n  readonly contentType?: string;\n}\n\n/**\n * Email message definition.\n * Compatible with nodemailer Mail.Options.\n */\nexport interface MailOptions {\n  /** The e-mail address of the sender. All e-mail addresses can be plain 'sender@server.com' or formatted 'Sender Name <sender@server.com>' */\n  readonly from?: string | MailAddress;\n  /** An e-mail address that will appear on the Sender: field */\n  readonly sender?: string | MailAddress;\n  /** Comma separated list or an array of recipients e-mail addresses that will appear on the To: field */\n  readonly to?: string | MailAddress | string[] | MailAddress[];\n  /** Comma separated list or an array of recipients e-mail addresses that will appear on the Cc: field */\n  readonly cc?: string | MailAddress | string[] | MailAddress[];\n  /** Comma separated list or an array of recipients e-mail addresses that will appear on the Bcc: field */\n  readonly bcc?: string | MailAddress | string[] | MailAddress[];\n  /** An e-mail address that will appear on the Reply-To: field */\n  readonly replyTo?: string | MailAddress;\n  /** The subject of the e-mail */\n  readonly subject?: string;\n  /** The plaintext version of the message */\n  readonly text?: string;\n  /** The HTML version of the message */\n  readonly html?: string;\n  /** An array of attachment objects */\n  readonly attachments?: MailAttachment[];\n}\n\ninterface SchemaGraphQLResponse {\n  readonly data: {\n    readonly StructureDefinitionList: StructureDefinition[];\n    readonly SearchParameterList: SearchParameter[];\n  };\n}\n\ninterface RequestCacheEntry {\n  readonly requestTime: number;\n  readonly value: ReadablePromise<any>;\n}\n\n/**\n * The MedplumClient class provides a client for the Medplum FHIR server.\n *\n * The client can be used in the browser, in a NodeJS application, or in a Medplum Bot.\n *\n * The client provides helpful methods for common operations such as:\n *   1) Authenticating\n *   2) Creating resources\n *   2) Reading resources\n *   3) Updating resources\n *   5) Deleting resources\n *   6) Searching\n *   7) Making GraphQL queries\n *\n * Here is a quick example of how to use the client:\n *\n * ```typescript\n * import { MedplumClient } from '@medplum/core';\n * const medplum = new MedplumClient();\n * ```\n *\n * Create a `Patient`:\n *\n * ```typescript\n * const patient = await medplum.createResource({\n *   resourceType: 'Patient',\n *   name: [{\n *     given: ['Alice'],\n *     family: 'Smith'\n *   }]\n * });\n * ```\n *\n * Read a `Patient` by ID:\n *\n * ```typescript\n * const patient = await medplum.readResource('Patient', '123');\n * console.log(patient.name[0].given[0]);\n * ```\n *\n * Search for a `Patient` by name:\n *\n * ```typescript\n * const bundle = await medplum.search('Patient', 'name=Alice');\n * console.log(bundle.total);\n * ```\n *\n *  <head>\n *    <meta name=\"algolia:pageRank\" content=\"100\" />\n *  </head>\n\n */\nexport class MedplumClient extends EventTarget {\n  readonly #fetch: FetchLike;\n  readonly #createPdf?: CreatePdfFunction;\n  readonly #storage: ClientStorage;\n  readonly #requestCache: LRUCache<RequestCacheEntry>;\n  readonly #cacheTime: number;\n  readonly #baseUrl: string;\n  readonly #authorizeUrl: string;\n  readonly #tokenUrl: string;\n  readonly #logoutUrl: string;\n  readonly #onUnauthenticated?: () => void;\n  #clientId?: string;\n  #clientSecret?: string;\n  #accessToken?: string;\n  #refreshToken?: string;\n  #refreshPromise?: Promise<any>;\n  #profilePromise?: Promise<any>;\n  #profile?: ProfileResource;\n  #config?: UserConfiguration;\n\n  constructor(options?: MedplumClientOptions) {\n    super();\n\n    if (options?.baseUrl) {\n      if (!options.baseUrl.startsWith('http')) {\n        throw new Error('Base URL must start with http or https');\n      }\n    }\n\n    this.#fetch = options?.fetch || window.fetch.bind(window);\n    this.#createPdf = options?.createPdf;\n    this.#storage = new ClientStorage();\n    this.#requestCache = new LRUCache(options?.resourceCacheSize ?? DEFAULT_RESOURCE_CACHE_SIZE);\n    this.#cacheTime = options?.cacheTime ?? DEFAULT_CACHE_TIME;\n    this.#baseUrl = ensureTrailingSlash(options?.baseUrl) || DEFAULT_BASE_URL;\n    this.#clientId = options?.clientId || '';\n    this.#authorizeUrl = options?.authorizeUrl || this.#baseUrl + 'oauth2/authorize';\n    this.#tokenUrl = options?.tokenUrl || this.#baseUrl + 'oauth2/token';\n    this.#logoutUrl = options?.logoutUrl || this.#baseUrl + 'oauth2/logout';\n    this.#onUnauthenticated = options?.onUnauthenticated;\n\n    const activeLogin = this.getActiveLogin();\n    if (activeLogin) {\n      this.#accessToken = activeLogin.accessToken;\n      this.#refreshToken = activeLogin.refreshToken;\n      this.#refreshProfile().catch(console.log);\n    }\n\n    this.#setupStorageListener();\n  }\n\n  /**\n   * Returns the current base URL for all API requests.\n   * By default, this is set to `https://api.medplum.com/`.\n   * This can be overridden by setting the `baseUrl` option when creating the client.\n   * @category HTTP\n   * @returns The current base URL for all API requests.\n   */\n  getBaseUrl(): string {\n    return this.#baseUrl;\n  }\n\n  /**\n   * Clears all auth state including local storage and session storage.\n   * @category Authentication\n   */\n  clear(): void {\n    this.#storage.clear();\n    this.#requestCache.clear();\n    this.#accessToken = undefined;\n    this.#refreshToken = undefined;\n    this.#profile = undefined;\n    this.#config = undefined;\n    this.dispatchEvent({ type: 'change' });\n  }\n\n  /**\n   * Invalidates any cached values or cached requests for the given URL.\n   * @category Caching\n   * @param url The URL to invalidate.\n   */\n  invalidateUrl(url: URL | string): void {\n    url = url.toString();\n    this.#requestCache.delete(url);\n  }\n\n  /**\n   * Invalidates all cached search results or cached requests for the given resourceType.\n   * @category Caching\n   * @param resourceType The resource type to invalidate.\n   */\n  invalidateSearches<K extends ResourceType>(resourceType: K): void {\n    const url = 'fhir/R4/' + resourceType;\n    for (const key of this.#requestCache.keys()) {\n      if (key.endsWith(url) || key.includes(url + '?')) {\n        this.#requestCache.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Makes an HTTP GET request to the specified URL.\n   *\n   * This is a lower level method for custom requests.\n   * For common operations, we recommend using higher level methods\n   * such as `readResource()`, `search()`, etc.\n   *\n   * @category HTTP\n   * @param url The target URL.\n   * @param options Optional fetch options.\n   * @returns Promise to the response content.\n   */\n  get<T = any>(url: URL | string, options: RequestInit = {}): ReadablePromise<T> {\n    url = url.toString();\n    const cached = this.#getCacheEntry(url, options);\n    if (cached) {\n      return cached.value;\n    }\n    const promise = new ReadablePromise(this.#request<T>('GET', url, options));\n    this.#setCacheEntry(url, promise);\n    return promise;\n  }\n\n  /**\n   * Makes an HTTP POST request to the specified URL.\n   *\n   * This is a lower level method for custom requests.\n   * For common operations, we recommend using higher level methods\n   * such as `createResource()`.\n   *\n   * @category HTTP\n   * @param url The target URL.\n   * @param body The content body. Strings and `File` objects are passed directly. Other objects are converted to JSON.\n   * @param contentType The content type to be included in the \"Content-Type\" header.\n   * @param options Optional fetch options.\n   * @returns Promise to the response content.\n   */\n  post(url: URL | string, body: any, contentType?: string, options: RequestInit = {}): Promise<any> {\n    url = url.toString();\n    if (body) {\n      this.#setRequestBody(options, body);\n    }\n    if (contentType) {\n      this.#setRequestContentType(options, contentType);\n    }\n    this.invalidateUrl(url);\n    return this.#request('POST', url, options);\n  }\n\n  /**\n   * Makes an HTTP PUT request to the specified URL.\n   *\n   * This is a lower level method for custom requests.\n   * For common operations, we recommend using higher level methods\n   * such as `updateResource()`.\n   *\n   * @category HTTP\n   * @param url The target URL.\n   * @param body The content body. Strings and `File` objects are passed directly. Other objects are converted to JSON.\n   * @param contentType The content type to be included in the \"Content-Type\" header.\n   * @param options Optional fetch options.\n   * @returns Promise to the response content.\n   */\n  put(url: URL | string, body: any, contentType?: string, options: RequestInit = {}): Promise<any> {\n    url = url.toString();\n    if (body) {\n      this.#setRequestBody(options, body);\n    }\n    if (contentType) {\n      this.#setRequestContentType(options, contentType);\n    }\n    this.invalidateUrl(url);\n    return this.#request('PUT', url, options);\n  }\n\n  /**\n   * Makes an HTTP PATCH request to the specified URL.\n   *\n   * This is a lower level method for custom requests.\n   * For common operations, we recommend using higher level methods\n   * such as `patchResource()`.\n   *\n   * @category HTTP\n   * @param url The target URL.\n   * @param operations Array of JSONPatch operations.\n   * @param options Optional fetch options.\n   * @returns Promise to the response content.\n   */\n  patch(url: URL | string, operations: PatchOperation[], options: RequestInit = {}): Promise<any> {\n    url = url.toString();\n    this.#setRequestBody(options, operations);\n    this.#setRequestContentType(options, PATCH_CONTENT_TYPE);\n    this.invalidateUrl(url);\n    return this.#request('PATCH', url, options);\n  }\n\n  /**\n   * Makes an HTTP DELETE request to the specified URL.\n   *\n   *\n   * This is a lower level method for custom requests.\n   * For common operations, we recommend using higher level methods\n   * such as `deleteResource()`.\n   *\n   * @category HTTP\n   * @param url The target URL.\n   * @param options Optional fetch options.\n   * @returns Promise to the response content.\n   */\n  delete(url: URL | string, options: RequestInit = {}): Promise<any> {\n    url = url.toString();\n    this.invalidateUrl(url);\n    return this.#request('DELETE', url, options);\n  }\n\n  /**\n   * Initiates a new user flow.\n   *\n   * This method is part of the two different user registration flows:\n   * 1) New Practitioner and new Project\n   * 2) New Patient registration\n   *\n   * @category Authentication\n   * @param newUserRequest Register request including email and password.\n   * @returns Promise to the authentication response.\n   */\n  async startNewUser(newUserRequest: NewUserRequest): Promise<LoginAuthenticationResponse> {\n    await this.startPkce();\n    return this.post('auth/newuser', {\n      ...newUserRequest,\n      codeChallengeMethod: 'S256',\n      codeChallenge: sessionStorage.getItem('codeChallenge') as string,\n    }) as Promise<LoginAuthenticationResponse>;\n  }\n\n  /**\n   * Initiates a new project flow.\n   *\n   * This requires a partial login from `startNewUser` or `startNewGoogleUser`.\n   *\n   * @param newProjectRequest Register request including email and password.\n   * @returns Promise to the authentication response.\n   */\n  async startNewProject(newProjectRequest: NewProjectRequest): Promise<LoginAuthenticationResponse> {\n    return this.post('auth/newproject', newProjectRequest) as Promise<LoginAuthenticationResponse>;\n  }\n\n  /**\n   * Initiates a new patient flow.\n   *\n   * This requires a partial login from `startNewUser` or `startNewGoogleUser`.\n   *\n   * @param newPatientRequest Register request including email and password.\n   * @returns Promise to the authentication response.\n   */\n  async startNewPatient(newPatientRequest: NewPatientRequest): Promise<LoginAuthenticationResponse> {\n    return this.post('auth/newpatient', newPatientRequest) as Promise<LoginAuthenticationResponse>;\n  }\n\n  /**\n   * Initiates a user login flow.\n   * @category Authentication\n   * @param loginRequest Login request including email and password.\n   * @returns Promise to the authentication response.\n   */\n  async startLogin(loginRequest: EmailPasswordLoginRequest): Promise<LoginAuthenticationResponse> {\n    const { codeChallenge, codeChallengeMethod } = this.getCodeChallenge(loginRequest);\n    return this.post('auth/login', {\n      ...loginRequest,\n      clientId: loginRequest.clientId ?? this.#clientId,\n      scope: loginRequest.scope,\n      codeChallengeMethod,\n      codeChallenge,\n    }) as Promise<LoginAuthenticationResponse>;\n  }\n\n  /**\n   * Tries to sign in with Google authentication.\n   * The response parameter is the result of a Google authentication.\n   * See: https://developers.google.com/identity/gsi/web/guides/handle-credential-responses-js-functions\n   * @category Authentication\n   * @param loginRequest Login request including Google credential response.\n   * @returns Promise to the authentication response.\n   */\n  async startGoogleLogin(loginRequest: GoogleLoginRequest): Promise<LoginAuthenticationResponse> {\n    const { codeChallenge, codeChallengeMethod } = this.getCodeChallenge(loginRequest);\n    return this.post('auth/google', {\n      ...loginRequest,\n      clientId: loginRequest.clientId ?? this.#clientId,\n      scope: loginRequest.scope,\n      codeChallengeMethod,\n      codeChallenge,\n    }) as Promise<LoginAuthenticationResponse>;\n  }\n\n  getCodeChallenge(loginRequest: BaseLoginRequest): {\n    codeChallenge?: string;\n    codeChallengeMethod?: string;\n  } {\n    if (loginRequest.codeChallenge) {\n      return {\n        codeChallenge: loginRequest.codeChallenge,\n        codeChallengeMethod: loginRequest.codeChallengeMethod,\n      };\n    }\n\n    const codeChallenge = sessionStorage.getItem('codeChallenge');\n    if (codeChallenge) {\n      return {\n        codeChallenge,\n        codeChallengeMethod: 'S256',\n      };\n    }\n\n    return {};\n  }\n\n  /**\n   * Signs out locally.\n   * Does not invalidate tokens with the server.\n   * @category Authentication\n   */\n  signOut(): void {\n    this.clear();\n  }\n\n  /**\n   * Tries to sign in the user.\n   * Returns true if the user is signed in.\n   * This may result in navigating away to the sign in page.\n   * @category Authentication\n   */\n  async signInWithRedirect(): Promise<ProfileResource | void> {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (!code) {\n      await this.#requestAuthorization();\n      return undefined;\n    } else {\n      return this.processCode(code);\n    }\n  }\n\n  /**\n   * Tries to sign out the user.\n   * See: https://docs.aws.amazon.com/cognito/latest/developerguide/logout-endpoint.html\n   * @category Authentication\n   */\n  signOutWithRedirect(): void {\n    window.location.assign(this.#logoutUrl);\n  }\n\n  /**\n   * Builds a FHIR URL from a collection of URL path components.\n   * For example, `buildUrl('/Patient', '123')` returns `fhir/R4/Patient/123`.\n   * @category HTTP\n   * @param path The path component of the URL.\n   * @returns The well-formed FHIR URL.\n   */\n  fhirUrl(...path: string[]): URL {\n    return new URL(this.#baseUrl + 'fhir/R4/' + path.join('/'));\n  }\n\n  /**\n   * Builds a FHIR search URL from a search query or structured query object.\n   * @category HTTP\n   * @category Search\n   * @param query The FHIR search query or structured query object.\n   * @returns The well-formed FHIR URL.\n   */\n  fhirSearchUrl(resourceType: ResourceType, query: URLSearchParams | string | undefined): URL {\n    const url = this.fhirUrl(resourceType);\n    if (query) {\n      url.search = query.toString();\n    }\n    return url;\n  }\n\n  /**\n   * Sends a FHIR search request.\n   *\n   * Example using a FHIR search string:\n   *\n   * ```typescript\n   * const bundle = await client.search('Patient', 'name=Alice');\n   * console.log(bundle);\n   * ```\n   *\n   * The return value is a FHIR bundle:\n   *\n   * ```json\n   * {\n   *    \"resourceType\": \"Bundle\",\n   *    \"type\": \"searchset\",\n   *    \"entry\": [\n   *       {\n   *          \"resource\": {\n   *             \"resourceType\": \"Patient\",\n   *             \"name\": [\n   *                {\n   *                   \"given\": [\n   *                      \"George\"\n   *                   ],\n   *                   \"family\": \"Washington\"\n   *                }\n   *             ],\n   *          }\n   *       }\n   *    ]\n   * }\n   * ```\n   *\n   * To query the count of a search, use the summary feature like so:\n   *\n   * ```typescript\n   * const patients = medplum.search('Patient', '_summary=count');\n   * ```\n   *\n   * See FHIR search for full details: https://www.hl7.org/fhir/search.html\n   *\n   * @category Search\n   * @param resourceType The FHIR resource type.\n   * @param query The search query as either a string or a structured search object.\n   * @param options Optional fetch options.\n   * @returns Promise to the search result bundle.\n   */\n  search<K extends ResourceType>(\n    resourceType: K,\n    query?: URLSearchParams | string,\n    options: RequestInit = {}\n  ): ReadablePromise<Bundle<ExtractResource<K>>> {\n    return this.get(this.fhirSearchUrl(resourceType, query), options);\n  }\n\n  /**\n   * Sends a FHIR search request for a single resource.\n   *\n   * This is a convenience method for `search()` that returns the first resource rather than a `Bundle`.\n   *\n   * Example using a FHIR search string:\n   *\n   * ```typescript\n   * const patient = await client.searchOne('Patient', 'identifier=123');\n   * console.log(patient);\n   * ```\n   *\n   * The return value is the resource, if available; otherwise, undefined.\n   *\n   * See FHIR search for full details: https://www.hl7.org/fhir/search.html\n   *\n   * @category Search\n   * @param resourceType The FHIR resource type.\n   * @param query The search query as either a string or a structured search object.\n   * @param options Optional fetch options.\n   * @returns Promise to the search result bundle.\n   */\n  searchOne<K extends ResourceType>(\n    resourceType: K,\n    query?: URLSearchParams | string,\n    options: RequestInit = {}\n  ): ReadablePromise<ExtractResource<K> | undefined> {\n    const url = this.fhirSearchUrl(resourceType, query);\n    url.searchParams.set('_count', '1');\n    url.searchParams.sort();\n    const cacheKey = url.toString() + '-searchOne';\n    const cached = this.#getCacheEntry(cacheKey, options);\n    if (cached) {\n      return cached.value;\n    }\n    const promise = new ReadablePromise(\n      this.search<K>(resourceType, url.searchParams, options).then((b) => b.entry?.[0]?.resource)\n    );\n    this.#setCacheEntry(cacheKey, promise);\n    return promise;\n  }\n\n  /**\n   * Sends a FHIR search request for an array of resources.\n   *\n   * This is a convenience method for `search()` that returns the resources as an array rather than a `Bundle`.\n   *\n   * Example using a FHIR search string:\n   *\n   * ```typescript\n   * const patients = await client.searchResources('Patient', 'name=Alice');\n   * console.log(patients);\n   * ```\n   *\n   * The return value is an array of resources.\n   *\n   * See FHIR search for full details: https://www.hl7.org/fhir/search.html\n   *\n   * @category Search\n   * @param resourceType The FHIR resource type.\n   * @param query The search query as either a string or a structured search object.\n   * @param options Optional fetch options.\n   * @returns Promise to the search result bundle.\n   */\n  searchResources<K extends ResourceType>(\n    resourceType: K,\n    query?: URLSearchParams | string,\n    options: RequestInit = {}\n  ): ReadablePromise<ExtractResource<K>[]> {\n    const url = this.fhirSearchUrl(resourceType, query);\n    const cacheKey = url.toString() + '-searchResources';\n    const cached = this.#getCacheEntry(cacheKey, options);\n    if (cached) {\n      return cached.value;\n    }\n    const promise = new ReadablePromise(\n      this.search<K>(resourceType, query, options).then(\n        (b) => b.entry?.map((e) => e.resource as ExtractResource<K>) ?? []\n      )\n    );\n    this.#setCacheEntry(cacheKey, promise);\n    return promise;\n  }\n\n  /**\n   * Searches a ValueSet resource using the \"expand\" operation.\n   * See: https://www.hl7.org/fhir/operation-valueset-expand.html\n   *\n   * @category Search\n   * @param system The ValueSet system url.\n   * @param filter The search string.\n   * @param options Optional fetch options.\n   * @returns Promise to expanded ValueSet.\n   */\n  searchValueSet(system: string, filter: string, options: RequestInit = {}): ReadablePromise<ValueSet> {\n    const url = this.fhirUrl('ValueSet', '$expand');\n    url.searchParams.set('url', system);\n    url.searchParams.set('filter', filter);\n    return this.get(url.toString(), options);\n  }\n\n  /**\n   * Returns a cached resource if it is available.\n   * @category Caching\n   * @param resourceType The FHIR resource type.\n   * @param id The FHIR resource ID.\n   * @returns The resource if it is available in the cache; undefined otherwise.\n   */\n  getCached<K extends ResourceType>(resourceType: K, id: string): ExtractResource<K> | undefined {\n    const cached = this.#requestCache.get(this.fhirUrl(resourceType, id).toString())?.value;\n    return cached && cached.isOk() ? (cached.read() as ExtractResource<K>) : undefined;\n  }\n\n  /**\n   * Returns a cached resource if it is available.\n   * @category Caching\n   * @param resourceType The FHIR resource type.\n   * @param id The FHIR resource ID.\n   * @returns The resource if it is available in the cache; undefined otherwise.\n   */\n  getCachedReference<T extends Resource>(reference: Reference<T>): T | undefined {\n    const refString = reference.reference as string;\n    if (!refString) {\n      return undefined;\n    }\n    const [resourceType, id] = refString.split('/');\n    if (!resourceType || !id) {\n      return undefined;\n    }\n    return this.getCached(resourceType as ResourceType, id) as T | undefined;\n  }\n\n  /**\n   * Reads a resource by resource type and ID.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const patient = await medplum.readResource('Patient', '123');\n   * console.log(patient);\n   * ```\n   *\n   * See the FHIR \"read\" operation for full details: https://www.hl7.org/fhir/http.html#read\n   *\n   * @category Read\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @param options Optional fetch options.\n   * @returns The resource if available; undefined otherwise.\n   */\n  readResource<K extends ResourceType>(\n    resourceType: K,\n    id: string,\n    options: RequestInit = {}\n  ): ReadablePromise<ExtractResource<K>> {\n    return this.get<ExtractResource<K>>(this.fhirUrl(resourceType, id), options);\n  }\n\n  /**\n   * Reads a resource by `Reference`.\n   *\n   * This is a convenience method for `readResource()` that accepts a `Reference` object.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const serviceRequest = await medplum.readResource('ServiceRequest', '123');\n   * const patient = await medplum.readReference(serviceRequest.subject);\n   * console.log(patient);\n   * ```\n   *\n   * See the FHIR \"read\" operation for full details: https://www.hl7.org/fhir/http.html#read\n   *\n   * @category Read\n   * @param reference The FHIR reference object.\n   * @param options Optional fetch options.\n   * @returns The resource if available; undefined otherwise.\n   */\n  readReference<T extends Resource>(reference: Reference<T>, options: RequestInit = {}): ReadablePromise<T> {\n    const refString = reference?.reference;\n    if (!refString) {\n      return new ReadablePromise(Promise.reject(new Error('Missing reference')));\n    }\n    const [resourceType, id] = refString.split('/');\n    if (!resourceType || !id) {\n      return new ReadablePromise(Promise.reject(new Error('Invalid reference')));\n    }\n    return this.readResource(resourceType as ResourceType, id, options) as ReadablePromise<T>;\n  }\n\n  /**\n   * Returns a cached schema for a resource type.\n   * If the schema is not cached, returns undefined.\n   * It is assumed that a client will call requestSchema before using this method.\n   * @category Schema\n   * @returns The schema if immediately available, undefined otherwise.\n   * @deprecated Use globalSchema instead.\n   */\n  getSchema(): IndexedStructureDefinition {\n    return globalSchema;\n  }\n\n  /**\n   * Requests the schema for a resource type.\n   * If the schema is already cached, the promise is resolved immediately.\n   * @category Schema\n   * @param resourceType The FHIR resource type.\n   * @returns Promise to a schema with the requested resource type.\n   */\n  async requestSchema(resourceType: string): Promise<IndexedStructureDefinition> {\n    if (resourceType in globalSchema.types) {\n      return globalSchema;\n    }\n\n    const query = `{\n      StructureDefinitionList(name: \"${resourceType}\") {\n        name,\n        description,\n        snapshot {\n          element {\n            id,\n            path,\n            min,\n            max,\n            type {\n              code,\n              targetProfile\n            },\n            binding {\n              valueSet\n            },\n            definition\n          }\n        }\n      }\n      SearchParameterList(base: \"${resourceType}\", _count: 100) {\n        base,\n        code,\n        type,\n        expression,\n        target\n      }\n    }`.replace(/\\s+/g, ' ');\n\n    const response = (await this.graphql(query)) as SchemaGraphQLResponse;\n\n    for (const structureDefinition of response.data.StructureDefinitionList) {\n      indexStructureDefinition(structureDefinition);\n    }\n\n    for (const searchParameter of response.data.SearchParameterList) {\n      indexSearchParameter(searchParameter);\n    }\n\n    return globalSchema;\n  }\n\n  /**\n   * Reads resource history by resource type and ID.\n   *\n   * The return value is a bundle of all versions of the resource.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const history = await medplum.readHistory('Patient', '123');\n   * console.log(history);\n   * ```\n   *\n   * See the FHIR \"history\" operation for full details: https://www.hl7.org/fhir/http.html#history\n   *\n   * @category Read\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @param options Optional fetch options.\n   * @returns Promise to the resource history.\n   */\n  readHistory<K extends ResourceType>(\n    resourceType: K,\n    id: string,\n    options: RequestInit = {}\n  ): ReadablePromise<Bundle<ExtractResource<K>>> {\n    return this.get(this.fhirUrl(resourceType, id, '_history'), options);\n  }\n\n  /**\n   * Reads a specific version of a resource by resource type, ID, and version ID.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const version = await medplum.readVersion('Patient', '123', '456');\n   * console.log(version);\n   * ```\n   *\n   * See the FHIR \"vread\" operation for full details: https://www.hl7.org/fhir/http.html#vread\n   *\n   * @category Read\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @param vid The version ID.\n   * @param options Optional fetch options.\n   * @returns The resource if available; undefined otherwise.\n   */\n  readVersion<K extends ResourceType>(\n    resourceType: K,\n    id: string,\n    vid: string,\n    options: RequestInit = {}\n  ): ReadablePromise<ExtractResource<K>> {\n    return this.get(this.fhirUrl(resourceType, id, '_history', vid), options);\n  }\n\n  /**\n   * Executes the Patient \"everything\" operation for a patient.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const bundle = await medplum.readPatientEverything('123');\n   * console.log(bundle);\n   * ```\n   *\n   * See the FHIR \"patient-everything\" operation for full details: https://hl7.org/fhir/operation-patient-everything.html\n   *\n   * @category Read\n   * @param id The Patient Id\n   * @param options Optional fetch options.\n   * @returns A Bundle of all Resources related to the Patient\n   */\n  readPatientEverything(id: string, options: RequestInit = {}): ReadablePromise<Bundle> {\n    return this.get(this.fhirUrl('Patient', id, '$everything'), options);\n  }\n\n  /**\n   * Creates a new FHIR resource.\n   *\n   * The return value is the newly created resource, including the ID and meta.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.createResource({\n   *   resourceType: 'Patient',\n   *   name: [{\n   *    family: 'Smith',\n   *    given: ['John']\n   *   }]\n   * });\n   * console.log(result.id);\n   * ```\n   *\n   * See the FHIR \"create\" operation for full details: https://www.hl7.org/fhir/http.html#create\n   *\n   * @category Create\n   * @param resource The FHIR resource to create.\n   * @returns The result of the create operation.\n   */\n  createResource<T extends Resource>(resource: T): Promise<T> {\n    if (!resource.resourceType) {\n      throw new Error('Missing resourceType');\n    }\n    this.invalidateSearches(resource.resourceType);\n    return this.post(this.fhirUrl(resource.resourceType), resource);\n  }\n\n  /**\n   * Conditionally create a new FHIR resource only if some equivalent resource does not already exist on the server.\n   *\n   * The return value is the existing resource or the newly created resource, including the ID and meta.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.createResourceIfNoneExist(\n   *   {\n   *     resourceType: 'Patient',\n   *     identifier: [{\n   *      system: 'http://example.com/mrn',\n   *      value: '123'\n   *     }]\n   *     name: [{\n   *      family: 'Smith',\n   *      given: ['John']\n   *     }]\n   *   },\n   *   'identifier=123'\n   * );\n   * console.log(result.id);\n   * ```\n   *\n   * This method is syntactic sugar for:\n   *\n   * ```typescript\n   * return searchOne(resourceType, query) ?? createResource(resource);\n   * ```\n   *\n   * The query parameter only contains the search parameters (what would be in the URL following the \"?\").\n   *\n   * See the FHIR \"conditional create\" operation for full details: https://www.hl7.org/fhir/http.html#ccreate\n   *\n   * @category Create\n   * @param resource The FHIR resource to create.\n   * @param query The search query for an equivalent resource (should not include resource type or \"?\").\n   * @returns The result of the create operation.\n   */\n  async createResourceIfNoneExist<T extends Resource>(resource: T, query: string): Promise<T> {\n    return ((await this.searchOne(resource.resourceType, query)) ?? this.createResource(resource)) as Promise<T>;\n  }\n\n  /**\n   * Creates a FHIR `Binary` resource with the provided data content.\n   *\n   * The return value is the newly created resource, including the ID and meta.\n   *\n   * The `data` parameter can be a string or a `File` object.\n   *\n   * A `File` object often comes from a `<input type=\"file\">` element.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.createBinary(myFile, 'test.jpg', 'image/jpeg');\n   * console.log(result.id);\n   * ```\n   *\n   * See the FHIR \"create\" operation for full details: https://www.hl7.org/fhir/http.html#create\n   *\n   * @category Create\n   * @param data The binary data to upload.\n   * @param filename Optional filename for the binary.\n   * @param contentType Content type for the binary.\n   * @returns The result of the create operation.\n   */\n  createBinary(\n    data: string | File | Blob | Uint8Array,\n    filename: string | undefined,\n    contentType: string,\n    onProgress?: (e: ProgressEvent) => void\n  ): Promise<Binary> {\n    const url = this.fhirUrl('Binary');\n    if (filename) {\n      url.searchParams.set('_filename', filename);\n    }\n\n    if (onProgress) {\n      return this.uploadwithProgress(url, data, contentType, onProgress);\n    } else {\n      return this.post(url, data, contentType);\n    }\n  }\n\n  uploadwithProgress(\n    url: URL,\n    data: string | File | Blob | Uint8Array,\n    contentType: string,\n    onProgress: (e: ProgressEvent) => void\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.responseType = 'json';\n      xhr.onabort = () => reject(new Error('Request aborted'));\n      xhr.onerror = () => reject(new Error('Request error'));\n\n      if (onProgress) {\n        xhr.upload.onprogress = (e) => onProgress(e);\n        xhr.upload.onload = (e) => onProgress(e);\n      }\n\n      xhr.onload = () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject(new Error(xhr.statusText));\n        }\n      };\n\n      xhr.open('POST', url);\n      xhr.withCredentials = true;\n      xhr.setRequestHeader('Authorization', 'Bearer ' + this.#accessToken);\n      xhr.setRequestHeader('Cache-Control', 'no-cache, no-store, max-age=0');\n      xhr.setRequestHeader('Content-Type', contentType);\n      xhr.setRequestHeader('X-Medplum', 'extended');\n      xhr.send(data);\n    });\n  }\n\n  /**\n   * Creates a PDF as a FHIR `Binary` resource based on pdfmake document definition.\n   *\n   * The return value is the newly created resource, including the ID and meta.\n   *\n   * The `docDefinition` parameter is a pdfmake document definition.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.createPdf({\n   *   content: ['Hello world']\n   * });\n   * console.log(result.id);\n   * ```\n   *\n   * See the pdfmake document definition for full details: https://pdfmake.github.io/docs/0.1/document-definition-object/\n   *\n   * @category Media\n   * @param docDefinition The PDF document definition.\n   * @returns The result of the create operation.\n   */\n  async createPdf(\n    docDefinition: TDocumentDefinitions,\n    filename?: string,\n    tableLayouts?: { [name: string]: CustomTableLayout },\n    fonts?: TFontDictionary\n  ): Promise<Binary> {\n    if (!this.#createPdf) {\n      throw new Error('PDF creation not enabled');\n    }\n    const blob = await this.#createPdf(docDefinition, tableLayouts, fonts);\n    return this.createBinary(blob, filename, 'application/pdf');\n  }\n\n  /**\n   * Creates a FHIR `Communication` resource with the provided data content.\n   *\n   * This is a convenience method to handle commmon cases where a `Communication` resource is created with a `payload`.\n   *\n   * @category Create\n   * @param resource The FHIR resource to comment on.\n   * @param text The text of the comment.\n   * @returns The result of the create operation.\n   */\n  createComment(resource: Resource, text: string): Promise<Communication> {\n    const profile = this.getProfile();\n    let encounter: Reference<Encounter> | undefined = undefined;\n    let subject: Reference<Patient> | undefined = undefined;\n\n    if (resource.resourceType === 'Encounter') {\n      encounter = createReference(resource);\n      subject = resource.subject as Reference<Patient> | undefined;\n    }\n\n    if (resource.resourceType === 'ServiceRequest') {\n      encounter = resource.encounter;\n      subject = resource.subject as Reference<Patient> | undefined;\n    }\n\n    if (resource.resourceType === 'Patient') {\n      subject = createReference(resource);\n    }\n\n    return this.createResource<Communication>({\n      resourceType: 'Communication',\n      basedOn: [createReference(resource)],\n      encounter,\n      subject,\n      sender: profile ? createReference(profile) : undefined,\n      sent: new Date().toISOString(),\n      payload: [{ contentString: text }],\n    });\n  }\n\n  /**\n   * Updates a FHIR resource.\n   *\n   * The return value is the updated resource, including the ID and meta.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.updateResource({\n   *   resourceType: 'Patient',\n   *   id: '123',\n   *   name: [{\n   *    family: 'Smith',\n   *    given: ['John']\n   *   }]\n   * });\n   * console.log(result.meta.versionId);\n   * ```\n   *\n   * See the FHIR \"update\" operation for full details: https://www.hl7.org/fhir/http.html#update\n   *\n   * @category Write\n   * @param resource The FHIR resource to update.\n   * @returns The result of the update operation.\n   */\n  async updateResource<T extends Resource>(resource: T): Promise<T> {\n    if (!resource.resourceType) {\n      throw new Error('Missing resourceType');\n    }\n    if (!resource.id) {\n      throw new Error('Missing id');\n    }\n    this.invalidateSearches(resource.resourceType);\n    const result = await this.put(this.fhirUrl(resource.resourceType, resource.id), resource);\n    // On 304 not modified, result will be undefined\n    // Return the user input instead\n    return result ?? resource;\n  }\n\n  /**\n   * Updates a FHIR resource using JSONPatch operations.\n   *\n   * The return value is the updated resource, including the ID and meta.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.patchResource('Patient', '123', [\n   *   {op: 'replace', path: '/name/0/family', value: 'Smith'},\n   * ]);\n   * console.log(result.meta.versionId);\n   * ```\n   *\n   * See the FHIR \"update\" operation for full details: https://www.hl7.org/fhir/http.html#patch\n   *\n   * See the JSONPatch specification for full details: https://tools.ietf.org/html/rfc6902\n   *\n   * @category Write\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @param operations The JSONPatch operations.\n   * @returns The result of the patch operations.\n   */\n  patchResource<K extends ResourceType>(\n    resourceType: K,\n    id: string,\n    operations: PatchOperation[]\n  ): Promise<ExtractResource<K>> {\n    this.invalidateSearches(resourceType);\n    return this.patch(this.fhirUrl(resourceType, id), operations);\n  }\n\n  /**\n   * Deletes a FHIR resource by resource type and ID.\n   *\n   * Example:\n   *\n   * ```typescript\n   * await medplum.deleteResource('Patient', '123');\n   * ```\n   *\n   * See the FHIR \"delete\" operation for full details: https://www.hl7.org/fhir/http.html#delete\n   *\n   * @category Delete\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @returns The result of the delete operation.\n   */\n  deleteResource(resourceType: ResourceType, id: string): Promise<any> {\n    this.invalidateSearches(resourceType);\n    return this.delete(this.fhirUrl(resourceType, id));\n  }\n\n  /**\n   * Executes the validate operation with the provided resource.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.validateResource({\n   *   resourceType: 'Patient',\n   *   name: [{ given: ['Alice'], family: 'Smith' }],\n   * });\n   * ```\n   *\n   * See the FHIR \"$validate\" operation for full details: https://www.hl7.org/fhir/resource-operation-validate.html\n   *\n   * @param resource The FHIR resource.\n   * @returns The validate operation outcome.\n   */\n  validateResource<T extends Resource>(resource: T): Promise<OperationOutcome> {\n    return this.post(this.fhirUrl(resource.resourceType, '$validate'), resource);\n  }\n\n  /**\n   * Executes a batch or transaction of FHIR operations.\n   *\n   * Example:\n   *\n   * ```typescript\n   * await medplum.executeBatch({\n   *   \"resourceType\": \"Bundle\",\n   *   \"type\": \"transaction\",\n   *   \"entry\": [\n   *     {\n   *       \"fullUrl\": \"urn:uuid:61ebe359-bfdc-4613-8bf2-c5e300945f0a\",\n   *       \"resource\": {\n   *         \"resourceType\": \"Patient\",\n   *         \"name\": [{ \"use\": \"official\", \"given\": [\"Alice\"], \"family\": \"Smith\" }],\n   *         \"gender\": \"female\",\n   *         \"birthDate\": \"1974-12-25\"\n   *       },\n   *       \"request\": {\n   *         \"method\": \"POST\",\n   *         \"url\": \"Patient\"\n   *       }\n   *     },\n   *     {\n   *       \"fullUrl\": \"urn:uuid:88f151c0-a954-468a-88bd-5ae15c08e059\",\n   *       \"resource\": {\n   *         \"resourceType\": \"Patient\",\n   *         \"identifier\": [{ \"system\": \"http:/example.org/fhir/ids\", \"value\": \"234234\" }],\n   *         \"name\": [{ \"use\": \"official\", \"given\": [\"Bob\"], \"family\": \"Jones\" }],\n   *         \"gender\": \"male\",\n   *         \"birthDate\": \"1974-12-25\"\n   *       },\n   *       \"request\": {\n   *         \"method\": \"POST\",\n   *         \"url\": \"Patient\",\n   *         \"ifNoneExist\": \"identifier=http:/example.org/fhir/ids|234234\"\n   *       }\n   *     }\n   *   ]\n   * });\n   * ```\n   *\n   * See The FHIR \"batch/transaction\" section for full details: https://hl7.org/fhir/http.html#transaction\n   * @category Batch\n   * @param bundle The FHIR batch/transaction bundle.\n   * @returns The FHIR batch/transaction response bundle.\n   */\n  executeBatch(bundle: Bundle): Promise<Bundle> {\n    return this.post('fhir/R4', bundle);\n  }\n\n  /**\n   * Sends an email using the Medplum Email API.\n   *\n   * Builds the email using nodemailer MailComposer.\n   *\n   * Examples:\n   *\n   * Send a simple text email:\n   *\n   * ```typescript\n   * await medplum.sendEmail({\n   *   to: 'alice@example.com',\n   *   cc: 'bob@example.com',\n   *   subject: 'Hello',\n   *   text: 'Hello Alice',\n   * });\n   * ```\n   *\n   * Send an email with a `Binary` attachment:\n   *\n   * ```typescript\n   * await medplum.sendEmail({\n   *   to: 'alice@example.com',\n   *   subject: 'Email with attachment',\n   *   text: 'See the attached report',\n   *   attachments: [{\n   *     filename: 'report.pdf',\n   *     path: \"Binary/\" + binary.id\n   *   }]\n   * });\n   * ```\n   *\n   * See options here: https://nodemailer.com/extras/mailcomposer/\n   * @category Media\n   * @param options The MailComposer options.\n   * @returns Promise to the operation outcome.\n   */\n  sendEmail(email: MailOptions): Promise<OperationOutcome> {\n    return this.post('email/v1/send', email, 'application/json');\n  }\n\n  /**\n   * Executes a GraphQL query.\n   *\n   * Example:\n   *\n   * ```typescript\n   * const result = await medplum.graphql(`{\n   *   Patient(id: \"123\") {\n   *     resourceType\n   *     id\n   *     name {\n   *       given\n   *       family\n   *     }\n   *   }\n   * }`);\n   * ```\n   *\n   * Advanced queries such as named operations and variable substitution are supported:\n   *\n   * ```typescript\n   * const result = await medplum.graphql(\n   *   `query GetPatientById($patientId: ID!) {\n   *     Patient(id: $patientId) {\n   *       resourceType\n   *       id\n   *       name {\n   *         given\n   *         family\n   *       }\n   *     }\n   *   }`,\n   *   'GetPatientById',\n   *   { patientId: '123' }\n   * );\n   * ```\n   *\n   * See the GraphQL documentation for more details: https://graphql.org/learn/\n   *\n   * See the FHIR GraphQL documentation for FHIR specific details: https://www.hl7.org/fhir/graphql.html\n   *\n   * @category Read\n   * @param query The GraphQL query.\n   * @param operationName Optional GraphQL operation name.\n   * @param variables Optional GraphQL variables.\n   * @param options Optional fetch options.\n   * @returns The GraphQL result.\n   */\n  graphql(query: string, operationName?: string | null, variables?: any, options?: RequestInit): Promise<any> {\n    return this.post(this.fhirUrl('$graphql'), { query, operationName, variables }, JSON_CONTENT_TYPE, options);\n  }\n\n  /**\n   *\n   * Executes the $graph operation on this resource to fetch a Bundle of resources linked to the target resource\n   * according to a graph definition\n\n   * @category Read\n   * @param resourceType The FHIR resource type.\n   * @param id The resource ID.\n   * @param graphName `name` parameter of the GraphDefinition\n   * @returns A Bundle\n   */\n  readResourceGraph<K extends ResourceType>(\n    resourceType: K,\n    id: string,\n    graphName: string\n  ): ReadablePromise<Bundle<Resource>> {\n    return this.get<Bundle<Resource>>(`${this.fhirUrl(resourceType, id)}/$graph?graph=${graphName}`);\n  }\n\n  /**\n   * @category Authentication\n   * @returns The Login State\n   */\n  getActiveLogin(): LoginState | undefined {\n    return this.#storage.getObject('activeLogin');\n  }\n\n  /**\n   * @category Authentication\n   */\n  async setActiveLogin(login: LoginState): Promise<void> {\n    this.#accessToken = login.accessToken;\n    this.#refreshToken = login.refreshToken;\n    this.#profile = undefined;\n    this.#config = undefined;\n    this.#storage.setObject('activeLogin', login);\n    this.#addLogin(login);\n    this.#requestCache.clear();\n    this.#refreshPromise = undefined;\n    await this.#refreshProfile();\n  }\n\n  /**\n   * @category Authentication\n   */\n  getAccessToken(): string | undefined {\n    return this.#accessToken;\n  }\n\n  /**\n   * @category Authentication\n   */\n  setAccessToken(accessToken: string): void {\n    this.#accessToken = accessToken;\n    this.#refreshToken = undefined;\n    this.#profile = undefined;\n    this.#config = undefined;\n  }\n\n  /**\n   * @category Authentication\n   */\n  getLogins(): LoginState[] {\n    return this.#storage.getObject<LoginState[]>('logins') ?? [];\n  }\n\n  #addLogin(newLogin: LoginState): void {\n    const logins = this.getLogins().filter((login) => login.profile?.reference !== newLogin.profile?.reference);\n    logins.push(newLogin);\n    this.#storage.setObject('logins', logins);\n  }\n\n  async #refreshProfile(): Promise<ProfileResource | undefined> {\n    this.#profilePromise = new Promise((resolve, reject) => {\n      this.get('auth/me')\n        .then((result) => {\n          this.#profilePromise = undefined;\n          this.#profile = result.profile;\n          this.#config = result.config;\n          this.dispatchEvent({ type: 'change' });\n          resolve(this.#profile);\n        })\n        .catch(reject);\n    });\n\n    return this.#profilePromise;\n  }\n\n  /**\n   * @category Authentication\n   */\n  isLoading(): boolean {\n    return !!this.#profilePromise;\n  }\n\n  /**\n   * @category User Profile\n   */\n  getProfile(): ProfileResource | undefined {\n    return this.#profile;\n  }\n\n  /**\n   * @category User Profile\n   */\n  async getProfileAsync(): Promise<ProfileResource | undefined> {\n    if (this.#profilePromise) {\n      await this.#profilePromise;\n    }\n    return this.getProfile();\n  }\n\n  /**\n   * @category User Profile\n   */\n  getUserConfiguration(): UserConfiguration | undefined {\n    return this.#config;\n  }\n\n  /**\n   * Downloads the URL as a blob.\n   *\n   * @category Read\n   * @param url The URL to request.\n   * @returns Promise to the response body as a blob.\n   */\n  async download(url: URL | string, options: RequestInit = {}): Promise<Blob> {\n    if (this.#refreshPromise) {\n      await this.#refreshPromise;\n    }\n    this.#addFetchOptionsDefaults(options);\n    const response = await this.#fetch(url.toString(), options);\n    return response.blob();\n  }\n\n  //\n  // Private helpers\n  //\n\n  /**\n   * Returns the cache entry if available and not expired.\n   * @param key The cache key to retrieve.\n   * @param options Optional fetch options for cache settings.\n   * @returns The cached entry if found.\n   */\n  #getCacheEntry(key: string, options: RequestInit | undefined): RequestCacheEntry | undefined {\n    if (this.#cacheTime <= 0 || options?.cache === 'no-cache' || options?.cache === 'reload') {\n      return undefined;\n    }\n    const entry = this.#requestCache.get(key);\n    if (!entry || entry.requestTime + this.#cacheTime < Date.now()) {\n      return undefined;\n    }\n    return entry;\n  }\n\n  /**\n   * Adds a readable promise to the cache.\n   * @param key The cache key to store.\n   * @param value The readable promise to store.\n   */\n  #setCacheEntry(key: string, value: ReadablePromise<any>): void {\n    if (this.#cacheTime > 0) {\n      this.#requestCache.set(key, { requestTime: Date.now(), value });\n    }\n  }\n\n  /**\n   * Makes an HTTP request.\n   * @param {string} method\n   * @param {string} url\n   * @param {string=} contentType\n   * @param {Object=} body\n   */\n  async #request<T>(method: string, url: string, options: RequestInit = {}): Promise<T> {\n    if (this.#refreshPromise) {\n      await this.#refreshPromise;\n    }\n\n    if (!url.startsWith('http')) {\n      url = this.#baseUrl + url;\n    }\n\n    options.method = method;\n    this.#addFetchOptionsDefaults(options);\n\n    const response = await this.#fetch(url, options);\n    if (response.status === 401) {\n      // Refresh and try again\n      return this.#handleUnauthenticated(method, url, options);\n    }\n\n    if (response.status === 204 || response.status === 304) {\n      // No content or change\n      return undefined as unknown as T;\n    }\n\n    const obj = await response.json();\n    if (response.status >= 400) {\n      throw obj;\n    }\n    return obj;\n  }\n\n  /**\n   * Adds default options to the fetch options.\n   * @param options The options to add defaults to.\n   */\n  #addFetchOptionsDefaults(options: RequestInit): void {\n    if (!options.headers) {\n      options.headers = {};\n    }\n\n    const headers = options.headers as Record<string, string>;\n    headers['X-Medplum'] = 'extended';\n\n    if (!headers['Content-Type']) {\n      headers['Content-Type'] = FHIR_CONTENT_TYPE;\n    }\n\n    if (this.#accessToken) {\n      headers['Authorization'] = 'Bearer ' + this.#accessToken;\n    }\n\n    if (!options.cache) {\n      options.cache = 'no-cache';\n    }\n\n    if (!options.credentials) {\n      options.credentials = 'include';\n    }\n  }\n\n  /**\n   * Sets the \"Content-Type\" header on fetch options.\n   * @param options The fetch options.\n   * @param contentType The new content type to set.\n   */\n  #setRequestContentType(options: RequestInit, contentType: string): void {\n    if (!options.headers) {\n      options.headers = {};\n    }\n    const headers = options.headers as Record<string, string>;\n    headers['Content-Type'] = contentType;\n  }\n\n  /**\n   * Sets the body on fetch options.\n   * @param options The fetch options.\n   * @param data The new content body.\n   */\n  #setRequestBody(options: RequestInit, data: any): void {\n    if (\n      typeof data === 'string' ||\n      (typeof Blob !== 'undefined' && data instanceof Blob) ||\n      (typeof File !== 'undefined' && data instanceof File) ||\n      (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array)\n    ) {\n      options.body = data;\n    } else if (data) {\n      options.body = JSON.stringify(data);\n    }\n  }\n\n  /**\n   * Handles an unauthenticated response from the server.\n   * First, tries to refresh the access token and retry the request.\n   * Otherwise, calls unauthenticated callbacks and rejects.\n   * @param method The HTTP method of the original request.\n   * @param url The URL of the original request.\n   * @param contentType The content type of the original request.\n   * @param body The body of the original request.\n   */\n  #handleUnauthenticated(method: string, url: string, options: RequestInit): Promise<any> {\n    if (this.#refresh()) {\n      return this.#request(method, url, options);\n    }\n    this.clear();\n    if (this.#onUnauthenticated) {\n      this.#onUnauthenticated();\n    }\n    return Promise.reject(new Error('Unauthenticated'));\n  }\n\n  /**\n   * Starts a new PKCE flow.\n   * These PKCE values are stateful, and must survive redirects and page refreshes.\n   */\n  async startPkce(): Promise<void> {\n    const pkceState = getRandomString();\n    sessionStorage.setItem('pkceState', pkceState);\n\n    const codeVerifier = getRandomString();\n    sessionStorage.setItem('codeVerifier', codeVerifier);\n\n    const arrayHash = await encryptSHA256(codeVerifier);\n    const codeChallenge = arrayBufferToBase64(arrayHash).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n    sessionStorage.setItem('codeChallenge', codeChallenge);\n  }\n\n  /**\n   * Redirects the user to the login screen for authorization.\n   * Clears all auth state including local storage and session storage.\n   * See: https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\n   */\n  async #requestAuthorization(): Promise<void> {\n    await this.startPkce();\n\n    const url = new URL(this.#authorizeUrl);\n    url.searchParams.set('response_type', 'code');\n    url.searchParams.set('state', sessionStorage.getItem('pkceState') as string);\n    url.searchParams.set('client_id', this.#clientId as string);\n    url.searchParams.set('redirect_uri', getBaseUrl());\n    url.searchParams.set('code_challenge_method', 'S256');\n    url.searchParams.set('code_challenge', sessionStorage.getItem('codeChallenge') as string);\n    window.location.assign(url.toString());\n  }\n\n  /**\n   * Processes an OAuth authorization code.\n   * See: https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest\n   * @param code The authorization code received by URL parameter.\n   */\n  processCode(code: string): Promise<ProfileResource> {\n    const formBody = new URLSearchParams();\n    formBody.set('grant_type', 'authorization_code');\n    formBody.set('client_id', this.#clientId as string);\n    formBody.set('code', code);\n    formBody.set('redirect_uri', getBaseUrl());\n\n    const codeVerifier = sessionStorage.getItem('codeVerifier');\n    if (codeVerifier) {\n      formBody.set('code_verifier', codeVerifier);\n    }\n\n    return this.#fetchTokens(formBody);\n  }\n\n  /**\n   * Tries to refresh the auth tokens.\n   * See: https://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens\n   */\n  #refresh(): Promise<void> | undefined {\n    if (this.#refreshPromise) {\n      return this.#refreshPromise;\n    }\n\n    if (this.#refreshToken) {\n      const formBody = new URLSearchParams();\n      formBody.set('grant_type', 'refresh_token');\n      formBody.set('client_id', this.#clientId as string);\n      formBody.set('refresh_token', this.#refreshToken);\n      this.#refreshPromise = this.#fetchTokens(formBody);\n      return this.#refreshPromise;\n    }\n\n    if (this.#clientId && this.#clientSecret) {\n      this.#refreshPromise = this.startClientLogin(this.#clientId, this.#clientSecret);\n      return this.#refreshPromise;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Starts a new OAuth2 client credentials flow.\n   * See: https://datatracker.ietf.org/doc/html/rfc6749#section-4.4\n   * @category Authentication\n   * @param clientId The client ID.\n   * @param clientSecret The client secret.\n   * @returns Promise that resolves to the client profile.\n   */\n  async startClientLogin(clientId: string, clientSecret: string): Promise<ProfileResource> {\n    this.#clientId = clientId;\n    this.#clientSecret = clientSecret;\n\n    const formBody = new URLSearchParams();\n    formBody.set('grant_type', 'client_credentials');\n    formBody.set('client_id', clientId);\n    formBody.set('client_secret', clientSecret);\n    return this.#fetchTokens(formBody);\n  }\n\n  /**\n   * Makes a POST request to the tokens endpoint.\n   * See: https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n   * @param formBody Token parameters in URL encoded format.\n   */\n  async #fetchTokens(formBody: URLSearchParams): Promise<ProfileResource> {\n    return this.#fetch(this.#tokenUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: formBody,\n      credentials: 'include',\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch tokens');\n        }\n        return response.json();\n      })\n      .then((tokens) => this.#verifyTokens(tokens))\n      .then(() => this.getProfile() as ProfileResource);\n  }\n\n  /**\n   * Verifies the tokens received from the auth server.\n   * Validates the JWT against the JWKS.\n   * See: https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n   * @param tokens\n   */\n  async #verifyTokens(tokens: TokenResponse): Promise<void> {\n    const token = tokens.access_token;\n\n    // Verify token has not expired\n    const tokenPayload = parseJWTPayload(token);\n    if (Date.now() >= (tokenPayload.exp as number) * 1000) {\n      this.clear();\n      throw new Error('Token expired');\n    }\n\n    // Verify app_client_id\n    if (this.#clientId && tokenPayload.client_id !== this.#clientId) {\n      this.clear();\n      throw new Error('Token was not issued for this audience');\n    }\n\n    await this.setActiveLogin({\n      accessToken: token,\n      refreshToken: tokens.refresh_token,\n      project: tokens.project,\n      profile: tokens.profile,\n    });\n  }\n\n  /**\n   * Sets up a listener for window storage events.\n   * This synchronizes state across browser windows and browser tabs.\n   */\n  #setupStorageListener(): void {\n    try {\n      window.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === null || e.key === 'activeLogin') {\n          // Storage events fire when different tabs make changes.\n          // On storage clear (key === null) or activeLogin change (key === 'activeLogin')\n          // Refresh the page to ensure the active login is up to date.\n          window.location.reload();\n        }\n      });\n    } catch (err) {\n      // Silently ignore if this environment does not support storage events\n    }\n  }\n}\n\n/**\n * Returns the base URL for the current page.\n * @category HTTP\n */\nfunction getBaseUrl(): string {\n  return window.location.protocol + '//' + window.location.host + '/';\n}\n\nfunction ensureTrailingSlash(url: string | undefined): string | undefined {\n  if (!url) {\n    return url;\n  }\n  return url.endsWith('/') ? url : url + '/';\n}\n","import { TypedValue } from '../types';\nimport { Token } from './tokenize';\n\nexport interface Atom {\n  eval(context: TypedValue[]): TypedValue[];\n}\n\nexport abstract class PrefixOperatorAtom implements Atom {\n  constructor(public readonly operator: string, public readonly child: Atom) {}\n\n  abstract eval(context: TypedValue[]): TypedValue[];\n\n  toString(): string {\n    return `${this.operator}(${this.child.toString()})`;\n  }\n}\n\nexport abstract class InfixOperatorAtom implements Atom {\n  constructor(public readonly operator: string, public readonly left: Atom, public readonly right: Atom) {}\n\n  abstract eval(context: TypedValue[]): TypedValue[];\n\n  toString(): string {\n    return `${this.left.toString()} ${this.operator} ${this.right.toString()}`;\n  }\n}\n\nexport interface PrefixParselet {\n  parse(parser: Parser, token: Token): Atom;\n}\n\nexport interface InfixParselet {\n  precedence: number;\n  parse?(parser: Parser, left: Atom, token: Token): Atom;\n}\n\nexport class ParserBuilder {\n  readonly #prefixParselets: Record<string, PrefixParselet> = {};\n  readonly #infixParselets: Record<string, InfixParselet> = {};\n\n  public registerInfix(tokenType: string, parselet: InfixParselet): ParserBuilder {\n    this.#infixParselets[tokenType] = parselet;\n    return this;\n  }\n\n  public registerPrefix(tokenType: string, parselet: PrefixParselet): ParserBuilder {\n    this.#prefixParselets[tokenType] = parselet;\n    return this;\n  }\n\n  public prefix(tokenType: string, precedence: number, builder: (token: Token, right: Atom) => Atom): ParserBuilder {\n    return this.registerPrefix(tokenType, {\n      parse(parser, token) {\n        const right = parser.consumeAndParse(precedence);\n        return builder(token, right);\n      },\n    });\n  }\n\n  public infixLeft(\n    tokenType: string,\n    precedence: number,\n    builder: (left: Atom, token: Token, right: Atom) => Atom\n  ): ParserBuilder {\n    return this.registerInfix(tokenType, {\n      parse(parser, left, token) {\n        const right = parser.consumeAndParse(precedence);\n        return builder(left, token, right);\n      },\n      precedence,\n    });\n  }\n\n  public construct(input: Token[]): Parser {\n    return new Parser(input, this.#prefixParselets, this.#infixParselets);\n  }\n}\n\nexport class Parser {\n  #tokens: Token[];\n  #prefixParselets: Record<string, PrefixParselet>;\n  #infixParselets: Record<string, InfixParselet>;\n\n  constructor(\n    tokens: Token[],\n    prefixParselets: Record<string, PrefixParselet>,\n    infixParselets: Record<string, InfixParselet>\n  ) {\n    this.#tokens = tokens;\n    this.#prefixParselets = prefixParselets;\n    this.#infixParselets = infixParselets;\n  }\n\n  hasMore(): boolean {\n    return this.#tokens.length > 0;\n  }\n\n  match(expected: string): boolean {\n    const token = this.peek();\n    if (token?.id !== expected) {\n      return false;\n    }\n\n    this.consume();\n    return true;\n  }\n\n  consumeAndParse(precedence = Infinity): Atom {\n    const token = this.consume();\n    const prefix = this.#prefixParselets[token.id];\n    if (!prefix) {\n      throw Error(\n        `Parse error at \"${token.value}\" (line ${token.line}, column ${token.column}). No matching prefix parselet.`\n      );\n    }\n\n    let left = prefix.parse(this, token);\n\n    while (precedence > this.getPrecedence()) {\n      const next = this.consume();\n      const infix = this.getInfixParselet(next) as InfixParselet;\n      left = (infix.parse as (parser: Parser, left: Atom, token: Token) => Atom)(this, left, next);\n    }\n\n    return left;\n  }\n\n  getPrecedence(): number {\n    const nextToken = this.peek();\n    if (!nextToken) {\n      return Infinity;\n    }\n    const parser = this.getInfixParselet(nextToken);\n    if (parser) {\n      return parser.precedence;\n    }\n    return Infinity;\n  }\n\n  consume(expectedId?: string, expectedValue?: string): Token {\n    if (!this.#tokens.length) {\n      throw Error('Cant consume unknown more tokens.');\n    }\n    if (expectedId && this.peek()?.id !== expectedId) {\n      const actual = this.peek() as Token;\n      throw Error(`Expected ${expectedId} but got \"${actual.id}\" at line ${actual.line} column ${actual.column}.`);\n    }\n    if (expectedValue && this.peek()?.value !== expectedValue) {\n      const actual = this.peek() as Token;\n      throw Error(\n        `Expected \"${expectedValue}\" but got \"${actual.value}\" at line ${actual.line} column ${actual.column}.`\n      );\n    }\n    return this.#tokens.shift() as Token;\n  }\n\n  peek(): Token | undefined {\n    return this.#tokens.length > 0 ? this.#tokens[0] : undefined;\n  }\n\n  removeComments(): void {\n    this.#tokens = this.#tokens.filter((t) => t.id !== 'Comment');\n  }\n\n  getInfixParselet(token: Token): InfixParselet | undefined {\n    return this.#infixParselets[token.id === 'Symbol' ? token.value : token.id];\n  }\n}\n","export interface Marker {\n  index: number;\n  line: number;\n  column: number;\n}\n\nexport interface Token extends Marker {\n  id: string;\n  value: string;\n}\n\nconst STANDARD_UNITS = [\n  'year',\n  'years',\n  'month',\n  'months',\n  'week',\n  'weeks',\n  'day',\n  'days',\n  'hour',\n  'hours',\n  'minute',\n  'minutes',\n  'second',\n  'seconds',\n  'millisecond',\n  'milliseconds',\n];\n\nexport class Tokenizer {\n  readonly #str: string;\n  readonly #keywords: string[];\n  readonly #operators: string[];\n  readonly #result: Token[] = [];\n  readonly #pos: Marker = { index: 0, line: 1, column: 0 };\n  readonly #markStack: Marker[] = [];\n\n  constructor(str: string, keywords: string[], operators: string[]) {\n    this.#str = str;\n    this.#keywords = keywords;\n    this.#operators = operators;\n  }\n\n  tokenize(): Token[] {\n    while (this.#pos.index < this.#str.length) {\n      const token = this.#consumeToken();\n      if (token) {\n        this.#result.push(token);\n      }\n    }\n\n    return this.#result;\n  }\n\n  #prevToken(): Token | undefined {\n    return this.#result.slice(-1)[0];\n  }\n\n  #peekToken(): Token | undefined {\n    this.#mark();\n    const token = this.#consumeToken();\n    this.#reset();\n    return token;\n  }\n\n  #consumeToken(): Token | undefined {\n    this.#consumeWhitespace();\n\n    const c = this.#curr();\n    if (!c) {\n      return undefined;\n    }\n\n    this.#mark();\n\n    const next = this.#peek();\n\n    if (c === '/' && next === '*') {\n      return this.#consumeMultiLineComment();\n    }\n\n    if (c === '/' && next === '/') {\n      return this.#consumeSingleLineComment();\n    }\n\n    if (c === \"'\" || c === '\"') {\n      return this.#consumeString(c);\n    }\n\n    if (c === '`') {\n      return this.#consumeBacktickSymbol();\n    }\n\n    if (c === '@') {\n      return this.#consumeDateTime();\n    }\n\n    if (c.match(/\\d/)) {\n      return this.#consumeNumber();\n    }\n\n    if (c.match(/\\w/)) {\n      return this.#consumeSymbol();\n    }\n\n    if (c === '$' && next.match(/\\w/)) {\n      return this.#consumeSymbol();\n    }\n\n    return this.#consumeOperator();\n  }\n\n  #consumeWhitespace(): void {\n    this.#consumeWhile(() => this.#curr().match(/\\s/));\n  }\n\n  #consumeMultiLineComment(): Token {\n    const start = this.#pos.index;\n    this.#consumeWhile(() => this.#curr() !== '*' || this.#peek() !== '/');\n    this.#advance();\n    this.#advance();\n    return this.#buildToken('Comment', this.#str.substring(start, this.#pos.index));\n  }\n\n  #consumeSingleLineComment(): Token {\n    return this.#buildToken(\n      'Comment',\n      this.#consumeWhile(() => this.#curr() !== '\\n')\n    );\n  }\n\n  #consumeString(endChar: string): Token {\n    this.#advance();\n    const result = this.#buildToken(\n      'String',\n      this.#consumeWhile(() => this.#prev() === '\\\\' || this.#curr() !== endChar)\n    );\n    this.#advance();\n    return result;\n  }\n\n  #consumeBacktickSymbol(): Token {\n    this.#advance();\n    const result = this.#buildToken(\n      'Symbol',\n      this.#consumeWhile(() => this.#curr() !== '`')\n    );\n    this.#advance();\n    return result;\n  }\n\n  #consumeDateTime(): Token {\n    this.#advance(); // Consume \"@\"\n\n    const start = this.#pos.index;\n    this.#consumeWhile(() => this.#curr().match(/[\\d-]/));\n\n    if (this.#curr() === 'T') {\n      this.#advance();\n      this.#consumeWhile(() => this.#curr().match(/[\\d:]/));\n\n      if (this.#curr() === '.' && this.#peek().match(/\\d/)) {\n        this.#advance();\n        this.#consumeWhile(() => this.#curr().match(/\\d/));\n      }\n\n      if (this.#curr() === 'Z') {\n        this.#advance();\n      } else if (this.#curr() === '+' || this.#curr() === '-') {\n        this.#advance();\n        this.#consumeWhile(() => this.#curr().match(/[\\d:]/));\n      }\n    }\n\n    return this.#buildToken('DateTime', this.#str.substring(start, this.#pos.index));\n  }\n\n  #consumeNumber(): Token {\n    const start = this.#pos.index;\n    let id = 'Number';\n    this.#consumeWhile(() => this.#curr().match(/\\d/));\n\n    if (this.#curr() === '.' && this.#peek().match(/\\d/)) {\n      this.#advance();\n      this.#consumeWhile(() => this.#curr().match(/\\d/));\n    }\n\n    if (this.#curr() === ' ') {\n      if (isUnitToken(this.#peekToken())) {\n        id = 'Quantity';\n        this.#consumeToken();\n      }\n    }\n\n    return this.#buildToken(id, this.#str.substring(start, this.#pos.index));\n  }\n\n  #consumeSymbol(): Token {\n    const value = this.#consumeWhile(() => this.#curr().match(/[$\\w]/));\n    if (this.#prevToken()?.value !== '.' && this.#keywords.includes(value)) {\n      return this.#buildToken(value, value);\n    }\n    return this.#buildToken('Symbol', value);\n  }\n\n  #consumeOperator(): Token {\n    const c = this.#curr();\n    const next = this.#peek();\n    const twoCharOp = c + next;\n\n    if (this.#operators.includes(twoCharOp)) {\n      this.#advance();\n      this.#advance();\n      return this.#buildToken(twoCharOp, twoCharOp);\n    }\n\n    this.#advance();\n    return this.#buildToken(c, c);\n  }\n\n  #consumeWhile(condition: () => unknown): string {\n    const start = this.#pos.index;\n\n    while (this.#pos.index < this.#str.length && condition()) {\n      this.#advance();\n    }\n\n    return this.#str.substring(start, this.#pos.index);\n  }\n\n  #curr(): string {\n    return this.#str[this.#pos.index];\n  }\n\n  #prev(): string {\n    return this.#str[this.#pos.index - 1] ?? '';\n  }\n\n  #peek(): string {\n    return this.#str[this.#pos.index + 1] ?? '';\n  }\n\n  #mark(): void {\n    this.#markStack.push({ ...this.#pos });\n  }\n\n  #reset(): void {\n    const mark = this.#markStack.pop();\n    if (!mark) {\n      throw new Error('No mark to reset to');\n    }\n    this.#pos.index = mark.index;\n    this.#pos.line = mark.line;\n    this.#pos.column = mark.column;\n  }\n\n  #advance(): void {\n    this.#pos.index++;\n    if (this.#curr() === '\\n') {\n      this.#pos.line++;\n      this.#pos.column = 0;\n    } else {\n      this.#pos.column++;\n    }\n  }\n\n  #buildToken(id: string, value: string): Token {\n    const mark = this.#markStack.pop();\n    if (!mark) {\n      throw new Error('No mark for token');\n    }\n    return {\n      id,\n      value,\n      ...mark,\n    };\n  }\n}\n\nfunction isUnitToken(token: Token | undefined): boolean {\n  if (token) {\n    if (token.id === 'String') {\n      return true;\n    }\n\n    if (token.id === 'Symbol' && STANDARD_UNITS.includes(token.value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","export function parseDateString(str: string): string {\n  if (str.startsWith('T')) {\n    // If a time string,\n    // then normalize to full length.\n    return str + 'T00:00:00.000Z'.substring(str.length);\n  }\n\n  if (str.length <= 10) {\n    // If a local date (i.e., \"2021-01-01\"),\n    // then return as-is.\n    return str;\n  }\n\n  try {\n    // Try to normalize to UTC\n    return new Date(str).toISOString();\n  } catch (e) {\n    // Fallback to original input\n    // This happens on unsupported time formats such as \"2021-01-01T12\"\n    return str;\n  }\n}\n","import { ElementDefinition, Period, Quantity, Resource } from '@medplum/fhirtypes';\nimport { buildTypeName, getElementDefinition, PropertyType, TypedValue } from '../types';\nimport { capitalize, isEmpty } from '../utils';\n\n/**\n * Returns a single element array with a typed boolean value.\n * @param value The primitive boolean value.\n * @returns Single element array with a typed boolean value.\n */\nexport function booleanToTypedValue(value: boolean): [TypedValue] {\n  return [{ type: PropertyType.boolean, value }];\n}\n\n/**\n * Returns a \"best guess\" TypedValue for a given value.\n * @param value The unknown value to check.\n * @returns A \"best guess\" TypedValue for the given value.\n */\nexport function toTypedValue(value: unknown): TypedValue {\n  if (value === null || value === undefined) {\n    return { type: 'undefined', value: undefined };\n  } else if (Number.isSafeInteger(value)) {\n    return { type: PropertyType.integer, value };\n  } else if (typeof value === 'number') {\n    return { type: PropertyType.decimal, value };\n  } else if (typeof value === 'boolean') {\n    return { type: PropertyType.boolean, value };\n  } else if (typeof value === 'string') {\n    return { type: PropertyType.string, value };\n  } else if (isQuantity(value)) {\n    return { type: PropertyType.Quantity, value };\n  } else if (typeof value === 'object' && 'resourceType' in value) {\n    return { type: (value as Resource).resourceType, value };\n  } else {\n    return { type: PropertyType.BackboneElement, value };\n  }\n}\n\n/**\n * Converts unknown object into a JavaScript boolean.\n * Note that this is different than the FHIRPath \"toBoolean\",\n * which has particular semantics around arrays, empty arrays, and type conversions.\n * @param obj Any value or array of values.\n * @returns The converted boolean value according to FHIRPath rules.\n */\nexport function toJsBoolean(obj: TypedValue[]): boolean {\n  return obj.length === 0 ? false : !!obj[0].value;\n}\n\n/**\n * Returns the value of the property and the property type.\n * Some property definitions support multiple types.\n * For example, \"Observation.value[x]\" can be \"valueString\", \"valueInteger\", \"valueQuantity\", etc.\n * According to the spec, there can only be one property for a given element definition.\n * This function returns the value and the type.\n * @param input The base context (FHIR resource or backbone element).\n * @param path The property path.\n * @returns The value of the property and the property type.\n */\nexport function getTypedPropertyValue(input: TypedValue, path: string): TypedValue[] | TypedValue | undefined {\n  if (!input?.value) {\n    return undefined;\n  }\n\n  const elementDefinition = getElementDefinition(input.type, path);\n  if (elementDefinition) {\n    const typedResult = getTypedPropertyValueWithSchema(input, path, elementDefinition);\n    if (typedResult) {\n      return typedResult;\n    }\n  }\n\n  return getTypedPropertyValueWithoutSchema(input, path);\n}\n\n/**\n * Returns the value of the property and the property type using a type schema.\n * @param input The base context (FHIR resource or backbone element).\n * @param path The property path.\n * @param property The property element definition.\n * @returns The value of the property and the property type.\n */\nfunction getTypedPropertyValueWithSchema(\n  input: TypedValue,\n  path: string,\n  property: ElementDefinition\n): TypedValue[] | TypedValue | undefined {\n  const types = property.type;\n  if (!types || types.length === 0) {\n    return undefined;\n  }\n\n  let resultValue: any = undefined;\n  let resultType = 'undefined';\n\n  if (types.length === 1) {\n    resultValue = input.value[path];\n    resultType = types[0].code as string;\n  } else {\n    for (const type of types) {\n      const path2 = path.replace('[x]', '') + capitalize(type.code as string);\n      if (path2 in input.value) {\n        resultValue = input.value[path2];\n        resultType = type.code as string;\n        break;\n      }\n    }\n  }\n\n  if (isEmpty(resultValue)) {\n    return undefined;\n  }\n\n  if (resultType === 'Element' || resultType === 'BackboneElement') {\n    resultType = buildTypeName(property.path?.split('.') as string[]);\n  }\n\n  if (Array.isArray(resultValue)) {\n    return resultValue.map((element) => toTypedValueWithType(element, resultType));\n  } else {\n    return toTypedValueWithType(resultValue, resultType);\n  }\n}\n\nfunction toTypedValueWithType(value: any, type: string): TypedValue {\n  if (type === 'Resource' && typeof value === 'object' && 'resourceType' in value) {\n    type = value.resourceType;\n  }\n  return { type, value };\n}\n\n/**\n * Returns the value of the property and the property type using a type schema.\n * Note that because the type schema is not available, this function may be inaccurate.\n * In some cases, that is the desired behavior.\n * @param typedValue The base context (FHIR resource or backbone element).\n * @param path The property path.\n * @returns The value of the property and the property type.\n */\nfunction getTypedPropertyValueWithoutSchema(\n  typedValue: TypedValue,\n  path: string\n): TypedValue[] | TypedValue | undefined {\n  const input = typedValue.value;\n  if (!input || typeof input !== 'object') {\n    return undefined;\n  }\n\n  let result: any = undefined;\n  if (path in input) {\n    result = (input as { [key: string]: unknown })[path];\n  } else {\n    // Only support property names that would be valid types\n    // Examples:\n    // value + valueString = ok, because \"string\" is valid\n    // value + valueDecimal = ok, because \"decimal\" is valid\n    // id + identifiier = not ok, because \"entifier\" is not a valid type\n    // resource + resourceType = not ok, because \"type\" is not a valid type\n    for (const propertyType in PropertyType) {\n      const propertyName = path + capitalize(propertyType);\n      if (propertyName in input) {\n        result = (input as { [key: string]: unknown })[propertyName];\n        break;\n      }\n    }\n  }\n\n  if (isEmpty(result)) {\n    return undefined;\n  }\n\n  if (Array.isArray(result)) {\n    return result.map(toTypedValue);\n  } else {\n    return toTypedValue(result);\n  }\n}\n\n/**\n * Removes duplicates in array using FHIRPath equality rules.\n * @param arr The input array.\n * @returns The result array with duplicates removed.\n */\nexport function removeDuplicates(arr: TypedValue[]): TypedValue[] {\n  const result: TypedValue[] = [];\n  for (const i of arr) {\n    let found = false;\n    for (const j of result) {\n      if (toJsBoolean(fhirPathEquals(i, j))) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * Returns a negated FHIRPath boolean expression.\n * @param input The input array.\n * @returns The negated type value array.\n */\nexport function fhirPathNot(input: TypedValue[]): TypedValue[] {\n  return booleanToTypedValue(!toJsBoolean(input));\n}\n\n/**\n * Determines if two arrays are equal according to FHIRPath equality rules.\n * @param x The first array.\n * @param y The second array.\n * @returns FHIRPath true if the arrays are equal.\n */\nexport function fhirPathArrayEquals(x: TypedValue[], y: TypedValue[]): TypedValue[] {\n  if (x.length === 0 || y.length === 0) {\n    return [];\n  }\n  if (x.length !== y.length) {\n    return booleanToTypedValue(false);\n  }\n  return booleanToTypedValue(x.every((val, index) => toJsBoolean(fhirPathEquals(val, y[index]))));\n}\n\n/**\n * Determines if two values are equal according to FHIRPath equality rules.\n * @param x The first value.\n * @param y The second value.\n * @returns True if equal.\n */\nexport function fhirPathEquals(x: TypedValue, y: TypedValue): TypedValue[] {\n  const xValue = x.value;\n  const yValue = y.value;\n  if (typeof xValue === 'number' && typeof yValue === 'number') {\n    return booleanToTypedValue(Math.abs(xValue - yValue) < 1e-8);\n  }\n  if (isQuantity(xValue) && isQuantity(yValue)) {\n    return booleanToTypedValue(isQuantityEquivalent(xValue, yValue));\n  }\n  if (typeof xValue === 'object' && typeof yValue === 'object') {\n    return booleanToTypedValue(deepEquals(x, y));\n  }\n  return booleanToTypedValue(xValue === yValue);\n}\n\n/**\n * Determines if two arrays are equivalent according to FHIRPath equality rules.\n * @param x The first array.\n * @param y The second array.\n * @returns FHIRPath true if the arrays are equivalent.\n */\nexport function fhirPathArrayEquivalent(x: TypedValue[], y: TypedValue[]): TypedValue[] {\n  if (x.length === 0 && y.length === 0) {\n    return booleanToTypedValue(true);\n  }\n  if (x.length !== y.length) {\n    return booleanToTypedValue(false);\n  }\n  x.sort(fhirPathEquivalentCompare);\n  y.sort(fhirPathEquivalentCompare);\n  return booleanToTypedValue(x.every((val, index) => toJsBoolean(fhirPathEquivalent(val, y[index]))));\n}\n\n/**\n * Determines if two values are equivalent according to FHIRPath equality rules.\n * @param x The first value.\n * @param y The second value.\n * @returns True if equivalent.\n */\nexport function fhirPathEquivalent(x: TypedValue, y: TypedValue): TypedValue[] {\n  const xValue = x.value;\n  const yValue = y.value;\n  if (typeof xValue === 'number' && typeof yValue === 'number') {\n    // Use more generous threshold than equality\n    // Decimal: values must be equal, comparison is done on values rounded to the precision of the least precise operand.\n    // Trailing zeroes after the decimal are ignored in determining precision.\n    return booleanToTypedValue(Math.abs(xValue - yValue) < 0.01);\n  }\n  if (isQuantity(xValue) && isQuantity(yValue)) {\n    return booleanToTypedValue(isQuantityEquivalent(xValue, yValue));\n  }\n  if (typeof xValue === 'object' && typeof yValue === 'object') {\n    return booleanToTypedValue(deepEquals(xValue, yValue));\n  }\n  if (typeof xValue === 'string' && typeof yValue === 'string') {\n    // String: the strings must be the same, ignoring case and locale, and normalizing whitespace\n    // (see String Equivalence for more details).\n    return booleanToTypedValue(xValue.toLowerCase() === yValue.toLowerCase());\n  }\n  return booleanToTypedValue(xValue === yValue);\n}\n\n/**\n * Returns the sort order of two values for FHIRPath array equivalence.\n * @param x The first value.\n * @param y The second value.\n * @returns The sort order of the values.\n */\nfunction fhirPathEquivalentCompare(x: TypedValue, y: TypedValue): number {\n  const xValue = x.value;\n  const yValue = y.value;\n  if (typeof xValue === 'number' && typeof yValue === 'number') {\n    return xValue - yValue;\n  }\n  if (typeof xValue === 'string' && typeof yValue === 'string') {\n    return xValue.localeCompare(yValue);\n  }\n  return 0;\n}\n\n/**\n * Determines if the typed value is the desired type.\n * @param typedValue The typed value to check.\n * @param desiredType The desired type name.\n * @returns True if the typed value is of the desired type.\n */\nexport function fhirPathIs(typedValue: TypedValue, desiredType: string): boolean {\n  const { value } = typedValue;\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  switch (desiredType) {\n    case 'Boolean':\n      return typeof value === 'boolean';\n    case 'Decimal':\n    case 'Integer':\n      return typeof value === 'number';\n    case 'Date':\n      return typeof value === 'string' && !!value.match(/^\\d{4}(-\\d{2}(-\\d{2})?)?/);\n    case 'DateTime':\n      return typeof value === 'string' && !!value.match(/^\\d{4}(-\\d{2}(-\\d{2})?)?T/);\n    case 'Time':\n      return typeof value === 'string' && !!value.match(/^T\\d/);\n    case 'Period':\n      return isPeriod(value);\n    case 'Quantity':\n      return isQuantity(value);\n    default:\n      return typeof value === 'object' && value?.resourceType === desiredType;\n  }\n}\n\n/**\n * Determines if the input is a Period object.\n * This is heuristic based, as we do not have strong typing at runtime.\n * @param input The input value.\n * @returns True if the input is a period.\n */\nexport function isPeriod(input: unknown): input is Period {\n  return !!(input && typeof input === 'object' && 'start' in input);\n}\n\n/**\n * Determines if the input is a Quantity object.\n * This is heuristic based, as we do not have strong typing at runtime.\n * @param input The input value.\n * @returns True if the input is a quantity.\n */\nexport function isQuantity(input: unknown): input is Quantity {\n  return !!(input && typeof input === 'object' && 'value' in input && typeof (input as Quantity).value === 'number');\n}\n\nexport function isQuantityEquivalent(x: Quantity, y: Quantity): boolean {\n  return (\n    Math.abs((x.value as number) - (y.value as number)) < 0.01 &&\n    (x.unit === y.unit || x.code === y.code || x.unit === y.code || x.code === y.unit)\n  );\n}\n\n/**\n * Resource equality.\n * See: https://dmitripavlutin.com/how-to-compare-objects-in-javascript/#4-deep-equality\n * @param object1 The first object.\n * @param object2 The second object.\n * @returns True if the objects are equal.\n */\nfunction deepEquals<T1 extends object, T2 extends object>(object1: T1, object2: T2): boolean {\n  const keys1 = Object.keys(object1) as (keyof T1)[];\n  const keys2 = Object.keys(object2) as (keyof T2)[];\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (const key of keys1) {\n    const val1 = object1[key] as unknown;\n    const val2 = object2[key as unknown as keyof T2] as unknown;\n    if (isObject(val1) && isObject(val2)) {\n      if (!deepEquals(val1, val2)) {\n        return false;\n      }\n    } else {\n      if (val1 !== val2) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction isObject(obj: unknown): obj is object {\n  return obj !== null && typeof obj === 'object';\n}\n","import { Reference, Resource } from '@medplum/fhirtypes';\nimport { Atom } from '../fhirlexer';\nimport { PropertyType, TypedValue } from '../types';\nimport { calculateAge } from '../utils';\nimport { DotAtom, SymbolAtom } from './atoms';\nimport { parseDateString } from './date';\nimport { booleanToTypedValue, fhirPathIs, isQuantity, removeDuplicates, toJsBoolean, toTypedValue } from './utils';\n\n/*\n * Collection of FHIRPath\n * See: https://hl7.org/fhirpath/#functions\n */\n\nexport interface FhirPathFunction {\n  (input: TypedValue[], ...args: Atom[]): TypedValue[];\n}\n\n/**\n * Temporary placholder for unimplemented methods.\n */\nconst stub: FhirPathFunction = (): [] => [];\n\nexport const functions: Record<string, FhirPathFunction> = {\n  /*\n   * 5.1 Existence\n   * See: https://hl7.org/fhirpath/#existence\n   */\n\n  /**\n   * Returns true if the input collection is empty ({ }) and false otherwise.\n   *\n   * See: https://hl7.org/fhirpath/#empty-boolean\n   *\n   * @param input The input collection.\n   * @returns True if the input collection is empty ({ }) and false otherwise.\n   */\n  empty: (input: TypedValue[]): TypedValue[] => {\n    return booleanToTypedValue(input.length === 0);\n  },\n\n  /**\n   * Returns true if the collection has unknown elements, and false otherwise.\n   * This is the opposite of empty(), and as such is a shorthand for empty().not().\n   * If the input collection is empty ({ }), the result is false.\n   *\n   * The function can also take an optional criteria to be applied to the collection\n   * prior to the determination of the exists. In this case, the function is shorthand\n   * for where(criteria).exists().\n   *\n   * See: https://hl7.org/fhirpath/#existscriteria-expression-boolean\n   *\n   * @param input\n   * @param criteria\n   * @returns True if the collection has unknown elements, and false otherwise.\n   */\n  exists: (input: TypedValue[], criteria?: Atom): TypedValue[] => {\n    if (criteria) {\n      return booleanToTypedValue(input.filter((e) => toJsBoolean(criteria.eval([e]))).length > 0);\n    } else {\n      return booleanToTypedValue(input.length > 0);\n    }\n  },\n\n  /**\n   * Returns true if for every element in the input collection, criteria evaluates to true.\n   * Otherwise, the result is false.\n   *\n   * If the input collection is empty ({ }), the result is true.\n   *\n   * See: https://hl7.org/fhirpath/#allcriteria-expression-boolean\n   *\n   * @param input The input collection.\n   * @param criteria The evaluation criteria.\n   * @returns True if for every element in the input collection, criteria evaluates to true.\n   */\n  all: (input: TypedValue[], criteria: Atom): TypedValue[] => {\n    return booleanToTypedValue(input.every((e) => toJsBoolean(criteria.eval([e]))));\n  },\n\n  /**\n   * Takes a collection of Boolean values and returns true if all the items are true.\n   * If unknown items are false, the result is false.\n   * If the input is empty ({ }), the result is true.\n   *\n   * See: https://hl7.org/fhirpath/#alltrue-boolean\n   *\n   * @param input The input collection.\n   * @param criteria The evaluation criteria.\n   * @returns True if all the items are true.\n   */\n  allTrue: (input: TypedValue[]): TypedValue[] => {\n    for (const value of input) {\n      if (!value.value) {\n        return booleanToTypedValue(false);\n      }\n    }\n    return booleanToTypedValue(true);\n  },\n\n  /**\n   * Takes a collection of Boolean values and returns true if unknown of the items are true.\n   * If all the items are false, or if the input is empty ({ }), the result is false.\n   *\n   * See: https://hl7.org/fhirpath/#anytrue-boolean\n   *\n   * @param input The input collection.\n   * @param criteria The evaluation criteria.\n   * @returns True if unknown of the items are true.\n   */\n  anyTrue: (input: TypedValue[]): TypedValue[] => {\n    for (const value of input) {\n      if (value.value) {\n        return booleanToTypedValue(true);\n      }\n    }\n    return booleanToTypedValue(false);\n  },\n\n  /**\n   * Takes a collection of Boolean values and returns true if all the items are false.\n   * If unknown items are true, the result is false.\n   * If the input is empty ({ }), the result is true.\n   *\n   * See: https://hl7.org/fhirpath/#allfalse-boolean\n   *\n   * @param input The input collection.\n   * @param criteria The evaluation criteria.\n   * @returns True if all the items are false.\n   */\n  allFalse: (input: TypedValue[]): TypedValue[] => {\n    for (const value of input) {\n      if (value.value) {\n        return booleanToTypedValue(false);\n      }\n    }\n    return booleanToTypedValue(true);\n  },\n\n  /**\n   * Takes a collection of Boolean values and returns true if unknown of the items are false.\n   * If all the items are true, or if the input is empty ({ }), the result is false.\n   *\n   * See: https://hl7.org/fhirpath/#anyfalse-boolean\n   *\n   * @param input The input collection.\n   * @param criteria The evaluation criteria.\n   * @returns True if for every element in the input collection, criteria evaluates to true.\n   */\n  anyFalse: (input: TypedValue[]): TypedValue[] => {\n    for (const value of input) {\n      if (!value.value) {\n        return booleanToTypedValue(true);\n      }\n    }\n    return booleanToTypedValue(false);\n  },\n\n  /**\n   * Returns true if all items in the input collection are members of the collection passed\n   * as the other argument. Membership is determined using the = (Equals) (=) operation.\n   *\n   * Conceptually, this function is evaluated by testing each element in the input collection\n   * for membership in the other collection, with a default of true. This means that if the\n   * input collection is empty ({ }), the result is true, otherwise if the other collection\n   * is empty ({ }), the result is false.\n   *\n   * See: http://hl7.org/fhirpath/#subsetofother-collection-boolean\n   */\n  subsetOf: stub,\n\n  /**\n   * Returns true if all items in the collection passed as the other argument are members of\n   * the input collection. Membership is determined using the = (Equals) (=) operation.\n   *\n   * Conceptually, this function is evaluated by testing each element in the other collection\n   * for membership in the input collection, with a default of true. This means that if the\n   * other collection is empty ({ }), the result is true, otherwise if the input collection\n   * is empty ({ }), the result is false.\n   *\n   * See: http://hl7.org/fhirpath/#supersetofother-collection-boolean\n   */\n  supersetOf: stub,\n\n  /**\n   * Returns the integer count of the number of items in the input collection.\n   * Returns 0 when the input collection is empty.\n   *\n   * See: https://hl7.org/fhirpath/#count-integer\n   *\n   * @param input The input collection.\n   * @returns The integer count of the number of items in the input collection.\n   */\n  count: (input: TypedValue[]): TypedValue[] => {\n    return [{ type: PropertyType.integer, value: input.length }];\n  },\n\n  /**\n   * Returns a collection containing only the unique items in the input collection.\n   * To determine whether two items are the same, the = (Equals) (=) operator is used,\n   * as defined below.\n   *\n   * If the input collection is empty ({ }), the result is empty.\n   *\n   * Note that the order of elements in the input collection is not guaranteed to be\n   * preserved in the result.\n   *\n   * See: https://hl7.org/fhirpath/#distinct-collection\n   *\n   * @param input The input collection.\n   * @returns The integer count of the number of items in the input collection.\n   */\n  distinct: (input: TypedValue[]): TypedValue[] => {\n    const result: TypedValue[] = [];\n    for (const value of input) {\n      if (!result.some((e) => e.value === value.value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Returns true if all the items in the input collection are distinct.\n   * To determine whether two items are distinct, the = (Equals) (=) operator is used,\n   * as defined below.\n   *\n   * See: https://hl7.org/fhirpath/#isdistinct-boolean\n   *\n   * @param input The input collection.\n   * @returns The integer count of the number of items in the input collection.\n   */\n  isDistinct: (input: TypedValue[]): TypedValue[] => {\n    return booleanToTypedValue(input.length === functions.distinct(input).length);\n  },\n\n  /*\n   * 5.2 Filtering and projection\n   */\n\n  /**\n   * Returns a collection containing only those elements in the input collection\n   * for which the stated criteria expression evaluates to true.\n   * Elements for which the expression evaluates to false or empty ({ }) are not\n   * included in the result.\n   *\n   * If the input collection is empty ({ }), the result is empty.\n   *\n   * If the result of evaluating the condition is other than a single boolean value,\n   * the evaluation will end and signal an error to the calling environment,\n   * consistent with singleton evaluation of collections behavior.\n   *\n   * See: https://hl7.org/fhirpath/#wherecriteria-expression-collection\n   *\n   * @param input The input collection.\n   * @param condition The condition atom.\n   * @returns A collection containing only those elements in the input collection for which the stated criteria expression evaluates to true.\n   */\n  where: (input: TypedValue[], criteria: Atom): TypedValue[] => {\n    return input.filter((e) => toJsBoolean(criteria.eval([e])));\n  },\n\n  /**\n   * Evaluates the projection expression for each item in the input collection.\n   * The result of each evaluation is added to the output collection. If the\n   * evaluation results in a collection with multiple items, all items are added\n   * to the output collection (collections resulting from evaluation of projection\n   * are flattened). This means that if the evaluation for an element results in\n   * the empty collection ({ }), no element is added to the result, and that if\n   * the input collection is empty ({ }), the result is empty as well.\n   *\n   * See: http://hl7.org/fhirpath/#selectprojection-expression-collection\n   */\n  select: (input: TypedValue[], criteria: Atom): TypedValue[] => {\n    return input.map((e) => criteria.eval([e])).flat();\n  },\n\n  /**\n   * A version of select that will repeat the projection and add it to the output\n   * collection, as long as the projection yields new items (as determined by\n   * the = (Equals) (=) operator).\n   *\n   * See: http://hl7.org/fhirpath/#repeatprojection-expression-collection\n   */\n  repeat: stub,\n\n  /**\n   * Returns a collection that contains all items in the input collection that\n   * are of the given type or a subclass thereof. If the input collection is\n   * empty ({ }), the result is empty. The type argument is an identifier that\n   * must resolve to the name of a type in a model\n   *\n   * See: http://hl7.org/fhirpath/#oftypetype-type-specifier-collection\n   */\n  ofType: (input: TypedValue[], criteria: Atom): TypedValue[] => {\n    return input.filter((e) => e.type === (criteria as SymbolAtom).name);\n  },\n\n  /*\n   * 5.3 Subsetting\n   */\n\n  /**\n   * Will return the single item in the input if there is just one item.\n   * If the input collection is empty ({ }), the result is empty.\n   * If there are multiple items, an error is signaled to the evaluation environment.\n   * This function is useful for ensuring that an error is returned if an assumption\n   * about cardinality is violated at run-time.\n   *\n   * See: https://hl7.org/fhirpath/#single-collection\n   *\n   * @param input The input collection.\n   * @returns The single item in the input if there is just one item.\n   */\n  single: (input: TypedValue[]): TypedValue[] => {\n    if (input.length > 1) {\n      throw new Error('Expected input length one for single()');\n    }\n    return input.length === 0 ? [] : input.slice(0, 1);\n  },\n\n  /**\n   * Returns a collection containing only the first item in the input collection.\n   * This function is equivalent to item[0], so it will return an empty collection if the input collection has no items.\n   *\n   * See: https://hl7.org/fhirpath/#first-collection\n   *\n   * @param input The input collection.\n   * @returns A collection containing only the first item in the input collection.\n   */\n  first: (input: TypedValue[]): TypedValue[] => {\n    return input.length === 0 ? [] : input.slice(0, 1);\n  },\n\n  /**\n   * Returns a collection containing only the last item in the input collection.\n   * Will return an empty collection if the input collection has no items.\n   *\n   * See: https://hl7.org/fhirpath/#last-collection\n   *\n   * @param input The input collection.\n   * @returns A collection containing only the last item in the input collection.\n   */\n  last: (input: TypedValue[]): TypedValue[] => {\n    return input.length === 0 ? [] : input.slice(input.length - 1, input.length);\n  },\n\n  /**\n   * Returns a collection containing all but the first item in the input collection.\n   * Will return an empty collection if the input collection has no items, or only one item.\n   *\n   * See: https://hl7.org/fhirpath/#tail-collection\n   *\n   * @param input The input collection.\n   * @returns A collection containing all but the first item in the input collection.\n   */\n  tail: (input: TypedValue[]): TypedValue[] => {\n    return input.length === 0 ? [] : input.slice(1, input.length);\n  },\n\n  /**\n   * Returns a collection containing all but the first num items in the input collection.\n   * Will return an empty collection if there are no items remaining after the\n   * indicated number of items have been skipped, or if the input collection is empty.\n   * If num is less than or equal to zero, the input collection is simply returned.\n   *\n   * See: https://hl7.org/fhirpath/#skipnum-integer-collection\n   *\n   * @param input The input collection.\n   * @returns A collection containing all but the first item in the input collection.\n   */\n  skip: (input: TypedValue[], num: Atom): TypedValue[] => {\n    const numValue = num.eval(input)[0]?.value;\n    if (typeof numValue !== 'number') {\n      throw new Error('Expected a number for skip(num)');\n    }\n    if (numValue >= input.length) {\n      return [];\n    }\n    if (numValue <= 0) {\n      return input;\n    }\n    return input.slice(numValue, input.length);\n  },\n\n  /**\n   * Returns a collection containing the first num items in the input collection,\n   * or less if there are less than num items.\n   * If num is less than or equal to 0, or if the input collection is empty ({ }),\n   * take returns an empty collection.\n   *\n   * See: https://hl7.org/fhirpath/#takenum-integer-collection\n   *\n   * @param input The input collection.\n   * @returns A collection containing the first num items in the input collection.\n   */\n  take: (input: TypedValue[], num: Atom): TypedValue[] => {\n    const numValue = num.eval(input)[0]?.value;\n    if (typeof numValue !== 'number') {\n      throw new Error('Expected a number for take(num)');\n    }\n    if (numValue >= input.length) {\n      return input;\n    }\n    if (numValue <= 0) {\n      return [];\n    }\n    return input.slice(0, numValue);\n  },\n\n  /**\n   * Returns the set of elements that are in both collections.\n   * Duplicate items will be eliminated by this function.\n   * Order of items is not guaranteed to be preserved in the result of this function.\n   *\n   * See: http://hl7.org/fhirpath/#intersectother-collection-collection\n   */\n  intersect: (input: TypedValue[], other: Atom): TypedValue[] => {\n    if (!other) {\n      return input;\n    }\n    const otherArray = other.eval(input);\n    const result: TypedValue[] = [];\n    for (const value of input) {\n      if (!result.some((e) => e.value === value.value) && otherArray.some((e) => e.value === value.value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Returns the set of elements that are not in the other collection.\n   * Duplicate items will not be eliminated by this function, and order will be preserved.\n   *\n   * e.g. (1 | 2 | 3).exclude(2) returns (1 | 3).\n   *\n   * See: http://hl7.org/fhirpath/#excludeother-collection-collection\n   */\n  exclude: (input: TypedValue[], other: Atom): TypedValue[] => {\n    if (!other) {\n      return input;\n    }\n    const otherArray = other.eval(input);\n    const result: TypedValue[] = [];\n    for (const value of input) {\n      if (!otherArray.some((e) => e.value === value.value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  },\n\n  /*\n   * 5.4. Combining\n   *\n   * See: https://hl7.org/fhirpath/#combining\n   */\n\n  /**\n   * Merge the two collections into a single collection,\n   * eliminating unknown duplicate values (using = (Equals) (=) to determine equality).\n   * There is no expectation of order in the resulting collection.\n   *\n   * In other words, this function returns the distinct list of elements from both inputs.\n   *\n   * See: http://hl7.org/fhirpath/#unionother-collection\n   */\n  union: (input: TypedValue[], other: Atom): TypedValue[] => {\n    if (!other) {\n      return input;\n    }\n    const otherArray = other.eval(input);\n    return removeDuplicates([...input, ...otherArray]);\n  },\n\n  /**\n   * Merge the input and other collections into a single collection\n   * without eliminating duplicate values. Combining an empty collection\n   * with a non-empty collection will return the non-empty collection.\n   *\n   * There is no expectation of order in the resulting collection.\n   *\n   * See: http://hl7.org/fhirpath/#combineother-collection-collection\n   */\n  combine: (input: TypedValue[], other: Atom): TypedValue[] => {\n    if (!other) {\n      return input;\n    }\n    const otherArray = other.eval(input);\n    return [...input, ...otherArray];\n  },\n\n  /*\n   * 5.5. Conversion\n   *\n   * See: https://hl7.org/fhirpath/#conversion\n   */\n\n  /**\n   * The iif function in FHIRPath is an immediate if,\n   * also known as a conditional operator (such as C’s ? : operator).\n   *\n   * The criterion expression is expected to evaluate to a Boolean.\n   *\n   * If criterion is true, the function returns the value of the true-result argument.\n   *\n   * If criterion is false or an empty collection, the function returns otherwise-result,\n   * unless the optional otherwise-result is not given, in which case the function returns an empty collection.\n   *\n   * Note that short-circuit behavior is expected in this function. In other words,\n   * true-result should only be evaluated if the criterion evaluates to true,\n   * and otherwise-result should only be evaluated otherwise. For implementations,\n   * this means delaying evaluation of the arguments.\n   *\n   * @param input\n   * @param criterion\n   * @param trueResult\n   * @param otherwiseResult\n   * @returns\n   */\n  iif: (input: TypedValue[], criterion: Atom, trueResult: Atom, otherwiseResult?: Atom): TypedValue[] => {\n    const evalResult = criterion.eval(input);\n    if (evalResult.length > 1 || (evalResult.length === 1 && typeof evalResult[0].value !== 'boolean')) {\n      throw new Error('Expected criterion to evaluate to a Boolean');\n    }\n\n    if (toJsBoolean(evalResult)) {\n      return trueResult.eval(input);\n    }\n\n    if (otherwiseResult) {\n      return otherwiseResult.eval(input);\n    }\n\n    return [];\n  },\n\n  /**\n   * Converts an input collection to a boolean.\n   *\n   * If the input collection contains a single item, this function will return a single boolean if:\n   *   1) the item is a Boolean\n   *   2) the item is an Integer and is equal to one of the possible integer representations of Boolean values\n   *   3) the item is a Decimal that is equal to one of the possible decimal representations of Boolean values\n   *   4) the item is a String that is equal to one of the possible string representations of Boolean values\n   *\n   * If the item is not one the above types, or the item is a String, Integer, or Decimal, but is not equal to one of the possible values convertible to a Boolean, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#toboolean-boolean\n   *\n   * @param input\n   * @returns\n   */\n  toBoolean: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'boolean') {\n      return [{ type: PropertyType.boolean, value }];\n    }\n    if (typeof value === 'number') {\n      if (value === 0 || value === 1) {\n        return booleanToTypedValue(!!value);\n      }\n    }\n    if (typeof value === 'string') {\n      const lowerStr = value.toLowerCase();\n      if (['true', 't', 'yes', 'y', '1', '1.0'].includes(lowerStr)) {\n        return booleanToTypedValue(true);\n      }\n      if (['false', 'f', 'no', 'n', '0', '0.0'].includes(lowerStr)) {\n        return booleanToTypedValue(false);\n      }\n    }\n    return [];\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is a Boolean\n   *   2) the item is an Integer that is equal to one of the possible integer representations of Boolean values\n   *   3) the item is a Decimal that is equal to one of the possible decimal representations of Boolean values\n   *   4) the item is a String that is equal to one of the possible string representations of Boolean values\n   *\n   * If the item is not one of the above types, or the item is a String, Integer, or Decimal, but is not equal to one of the possible values convertible to a Boolean, the result is false.\n   *\n   * Possible values for Integer, Decimal, and String are described in the toBoolean() function.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: http://hl7.org/fhirpath/#convertstoboolean-boolean\n   *\n   * @param input\n   * @returns\n   */\n  convertsToBoolean: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toBoolean(input).length === 1);\n  },\n\n  /**\n   * Returns the integer representation of the input.\n   *\n   * If the input collection contains a single item, this function will return a single integer if:\n   *   1) the item is an Integer\n   *   2) the item is a String and is convertible to an integer\n   *   3) the item is a Boolean, where true results in a 1 and false results in a 0.\n   *\n   * If the item is not one the above types, the result is empty.\n   *\n   * If the item is a String, but the string is not convertible to an integer (using the regex format (\\\\+|-)?\\d+), the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#tointeger-integer\n   *\n   * @param input The input collection.\n   * @returns The string representation of the input.\n   */\n  toInteger: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'number') {\n      return [{ type: PropertyType.integer, value }];\n    }\n    if (typeof value === 'string' && value.match(/^[+-]?\\d+$/)) {\n      return [{ type: PropertyType.integer, value: parseInt(value, 10) }];\n    }\n    if (typeof value === 'boolean') {\n      return [{ type: PropertyType.integer, value: value ? 1 : 0 }];\n    }\n    return [];\n  },\n\n  /**\n   * Returns true if the input can be converted to string.\n   *\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is an Integer\n   *   2) the item is a String and is convertible to an Integer\n   *   3) the item is a Boolean\n   *   4) If the item is not one of the above types, or the item is a String, but is not convertible to an Integer (using the regex format (\\\\+|-)?\\d+), the result is false.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#convertstointeger-boolean\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  convertsToInteger: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toInteger(input).length === 1);\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return a single date if:\n   *   1) the item is a Date\n   *   2) the item is a DateTime\n   *   3) the item is a String and is convertible to a Date\n   *\n   * If the item is not one of the above types, the result is empty.\n   *\n   * If the item is a String, but the string is not convertible to a Date (using the format YYYY-MM-DD), the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#todate-date\n   */\n  toDate: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'string' && value.match(/^\\d{4}(-\\d{2}(-\\d{2})?)?/)) {\n      return [{ type: PropertyType.date, value: parseDateString(value) }];\n    }\n    return [];\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is a Date\n   *   2) the item is a DateTime\n   *   3) the item is a String and is convertible to a Date\n   *\n   * If the item is not one of the above types, or is not convertible to a Date (using the format YYYY-MM-DD), the result is false.\n   *\n   * If the item contains a partial date (e.g. '2012-01'), the result is a partial date.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#convertstodate-boolean\n   */\n  convertsToDate: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toDate(input).length === 1);\n  },\n\n  /**\n * If the input collection contains a single item, this function will return a single datetime if:\n *   1) the item is a DateTime\n *   2) the item is a Date, in which case the result is a DateTime with the year, month, and day of the Date, and the time components empty (not set to zero)\n *   3) the item is a String and is convertible to a DateTime\n *\n * If the item is not one of the above types, the result is empty.\n *\n * If the item is a String, but the string is not convertible to a DateTime (using the format YYYY-MM-DDThh:mm:ss.fff(+|-)hh:mm), the result is empty.\n *\n * If the item contains a partial datetime (e.g. '2012-01-01T10:00'), the result is a partial datetime.\n *\n * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n *\n * If the input collection is empty, the result is empty.\n\n * See: https://hl7.org/fhirpath/#todatetime-datetime\n *\n * @param input\n * @returns\n */\n  toDateTime: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'string' && value.match(/^\\d{4}(-\\d{2}(-\\d{2})?)?/)) {\n      return [{ type: PropertyType.dateTime, value: parseDateString(value) }];\n    }\n    return [];\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is a DateTime\n   *   2) the item is a Date\n   *   3) the item is a String and is convertible to a DateTime\n   *\n   * If the item is not one of the above types, or is not convertible to a DateTime (using the format YYYY-MM-DDThh:mm:ss.fff(+|-)hh:mm), the result is false.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#convertstodatetime-boolean\n   *\n   * @param input\n   * @returns\n   */\n  convertsToDateTime: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toDateTime(input).length === 1);\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return a single decimal if:\n   *   1) the item is an Integer or Decimal\n   *   2) the item is a String and is convertible to a Decimal\n   *   3) the item is a Boolean, where true results in a 1.0 and false results in a 0.0.\n   *   4) If the item is not one of the above types, the result is empty.\n   *\n   * If the item is a String, but the string is not convertible to a Decimal (using the regex format (\\\\+|-)?\\d+(\\.\\d+)?), the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#decimal-conversion-functions\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  toDecimal: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'number') {\n      return [{ type: PropertyType.decimal, value }];\n    }\n    if (typeof value === 'string' && value.match(/^-?\\d{1,9}(\\.\\d{1,9})?$/)) {\n      return [{ type: PropertyType.decimal, value: parseFloat(value) }];\n    }\n    if (typeof value === 'boolean') {\n      return [{ type: PropertyType.decimal, value: value ? 1 : 0 }];\n    }\n    return [];\n  },\n\n  /**\n * If the input collection contains a single item, this function will true if:\n *   1) the item is an Integer or Decimal\n *   2) the item is a String and is convertible to a Decimal\n *   3) the item is a Boolean\n *\n * If the item is not one of the above types, or is not convertible to a Decimal (using the regex format (\\\\+|-)?\\d+(\\.\\d+)?), the result is false.\n *\n * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n *\n * If the input collection is empty, the result is empty.\n\n * See: https://hl7.org/fhirpath/#convertstodecimal-boolean\n *\n * @param input The input collection.\n * @returns\n */\n  convertsToDecimal: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toDecimal(input).length === 1);\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return a single quantity if:\n   *   1) the item is an Integer, or Decimal, where the resulting quantity will have the default unit ('1')\n   *   2) the item is a Quantity\n   *   3) the item is a String and is convertible to a Quantity\n   *   4) the item is a Boolean, where true results in the quantity 1.0 '1', and false results in the quantity 0.0 '1'\n   *\n   * If the item is not one of the above types, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#quantity-conversion-functions\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  toQuantity: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (isQuantity(value)) {\n      return [{ type: PropertyType.Quantity, value }];\n    }\n    if (typeof value === 'number') {\n      return [{ type: PropertyType.Quantity, value: { value, unit: '1' } }];\n    }\n    if (typeof value === 'string' && value.match(/^-?\\d{1,9}(\\.\\d{1,9})?/)) {\n      return [{ type: PropertyType.Quantity, value: { value: parseFloat(value), unit: '1' } }];\n    }\n    if (typeof value === 'boolean') {\n      return [{ type: PropertyType.Quantity, value: { value: value ? 1 : 0, unit: '1' } }];\n    }\n    return [];\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is an Integer, Decimal, or Quantity\n   *   2) the item is a String that is convertible to a Quantity\n   *   3) the item is a Boolean\n   *\n   * If the item is not one of the above types, or is not convertible to a Quantity using the following regex format:\n   *\n   *     (?'value'(\\+|-)?\\d+(\\.\\d+)?)\\s*('(?'unit'[^']+)'|(?'time'[a-zA-Z]+))?\n   *\n   * then the result is false.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the unit argument is provided, it must be the string representation of a UCUM code (or a FHIRPath calendar duration keyword), and is used to determine whether the input quantity can be converted to the given unit, according to the unit conversion rules specified by UCUM. If the input quantity can be converted, the result is true, otherwise, the result is false.\n   *\n   * See: https://hl7.org/fhirpath/#convertstoquantityunit-string-boolean\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  convertsToQuantity: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toQuantity(input).length === 1);\n  },\n\n  /**\n   * Returns the string representation of the input.\n   *\n   * If the input collection contains a single item, this function will return a single String if:\n   *\n   *  1) the item in the input collection is a String\n   *  2) the item in the input collection is an Integer, Decimal, Date, Time, DateTime, or Quantity the output will contain its String representation\n   *  3) the item is a Boolean, where true results in 'true' and false in 'false'.\n   *\n   * If the item is not one of the above types, the result is false.\n   *\n   * See: https://hl7.org/fhirpath/#tostring-string\n   *\n   * @param input The input collection.\n   * @returns The string representation of the input.\n   */\n  toString: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (value === null || value === undefined) {\n      return [];\n    }\n    if (isQuantity(value)) {\n      return [{ type: PropertyType.string, value: `${value.value} '${value.unit}'` }];\n    }\n    return [{ type: PropertyType.string, value: (value as boolean | number | string).toString() }];\n  },\n\n  /**\n   * Returns true if the input can be converted to string.\n   *\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is a String\n   *   2) the item is an Integer, Decimal, Date, Time, or DateTime\n   *   3) the item is a Boolean\n   *   4) the item is a Quantity\n   *\n   * If the item is not one of the above types, the result is false.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#tostring-string\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  convertsToString: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue((functions.toString as unknown as FhirPathFunction)(input).length === 1);\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return a single time if:\n   *   1) the item is a Time\n   *   2) the item is a String and is convertible to a Time\n   *\n   * If the item is not one of the above types, the result is empty.\n   *\n   * If the item is a String, but the string is not convertible to a Time (using the format hh:mm:ss.fff(+|-)hh:mm), the result is empty.\n   *\n   * If the item contains a partial time (e.g. '10:00'), the result is a partial time.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#totime-time\n   *\n   * @param input\n   * @returns\n   */\n  toTime: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    const [{ value }] = validateInput(input, 1);\n    if (typeof value === 'string') {\n      const match = value.match(/^T?(\\d{2}(:\\d{2}(:\\d{2})?)?)/);\n      if (match) {\n        return [{ type: PropertyType.time, value: parseDateString('T' + match[1]) }];\n      }\n    }\n    return [];\n  },\n\n  /**\n   * If the input collection contains a single item, this function will return true if:\n   *   1) the item is a Time\n   *   2) the item is a String and is convertible to a Time\n   *\n   * If the item is not one of the above types, or is not convertible to a Time (using the format hh:mm:ss.fff(+|-)hh:mm), the result is false.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#convertstotime-boolean\n   *\n   * @param input\n   * @returns\n   */\n  convertsToTime: (input: TypedValue[]): TypedValue[] => {\n    if (input.length === 0) {\n      return [];\n    }\n    return booleanToTypedValue(functions.toTime(input).length === 1);\n  },\n\n  /*\n   * 5.6. String Manipulation.\n   *\n   * See: https://hl7.org/fhirpath/#string-manipulation\n   */\n\n  /**\n   * Returns the 0-based index of the first position substring is found in the input string, or -1 if it is not found.\n   *\n   * If substring is an empty string (''), the function returns 0.\n   *\n   * If the input or substring is empty ({ }), the result is empty ({ }).\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#indexofsubstring-string-integer\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  indexOf: (input: TypedValue[], substringAtom: Atom): TypedValue[] => {\n    return applyStringFunc((str, substring) => str.indexOf(substring as string), input, substringAtom);\n  },\n\n  /**\n   * Returns the part of the string starting at position start (zero-based). If length is given, will return at most length number of characters from the input string.\n   *\n   * If start lies outside the length of the string, the function returns empty ({ }). If there are less remaining characters in the string than indicated by length, the function returns just the remaining characters.\n   *\n   * If the input or start is empty, the result is empty.\n   *\n   * If an empty length is provided, the behavior is the same as if length had not been provided.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  substring: (input: TypedValue[], startAtom: Atom, lengthAtom?: Atom): TypedValue[] => {\n    return applyStringFunc(\n      (str, start, length) => {\n        const startIndex = start as number;\n        const endIndex = length ? startIndex + (length as number) : str.length;\n        return startIndex < 0 || startIndex >= str.length ? undefined : str.substring(startIndex, endIndex);\n      },\n      input,\n      startAtom,\n      lengthAtom\n    );\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  startsWith: (input: TypedValue[], prefixAtom: Atom): TypedValue[] => {\n    return applyStringFunc((str, prefix) => str.startsWith(prefix as string), input, prefixAtom);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  endsWith: (input: TypedValue[], suffixAtom: Atom): TypedValue[] => {\n    return applyStringFunc((str, suffix) => str.endsWith(suffix as string), input, suffixAtom);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  contains: (input: TypedValue[], substringAtom: Atom): TypedValue[] => {\n    return applyStringFunc((str, substring) => str.includes(substring as string), input, substringAtom);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  upper: (input: TypedValue[]): TypedValue[] => {\n    return applyStringFunc((str) => str.toUpperCase(), input);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  lower: (input: TypedValue[]): TypedValue[] => {\n    return applyStringFunc((str) => str.toLowerCase(), input);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  replace: (input: TypedValue[], patternAtom: Atom, substitionAtom: Atom): TypedValue[] => {\n    return applyStringFunc(\n      (str, pattern, substition) => str.replaceAll(pattern as string, substition as string),\n      input,\n      patternAtom,\n      substitionAtom\n    );\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  matches: (input: TypedValue[], regexAtom: Atom): TypedValue[] => {\n    return applyStringFunc((str, regex) => !!str.match(regex as string), input, regexAtom);\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  replaceMatches: (input: TypedValue[], regexAtom: Atom, substitionAtom: Atom): TypedValue[] => {\n    return applyStringFunc(\n      (str, pattern, substition) => str.replaceAll(pattern as string, substition as string),\n      input,\n      regexAtom,\n      substitionAtom\n    );\n  },\n\n  /**\n   *\n   * @param input The input collection.\n   * @returns The index of the substring.\n   */\n  length: (input: TypedValue[]): TypedValue[] => {\n    return applyStringFunc((str) => str.length, input);\n  },\n\n  /**\n   * Returns the list of characters in the input string. If the input collection is empty ({ }), the result is empty.\n   *\n   * See: https://hl7.org/fhirpath/#tochars-collection\n   *\n   * @param input The input collection.\n   */\n  toChars: (input: TypedValue[]): TypedValue[] => {\n    return applyStringFunc((str) => (str ? str.split('') : undefined), input);\n  },\n\n  /*\n   * 5.7. Math\n   */\n\n  /**\n   * Returns the absolute value of the input. When taking the absolute value of a quantity, the unit is unchanged.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#abs-integer-decimal-quantity\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  abs: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.abs, input);\n  },\n\n  /**\n   * Returns the first integer greater than or equal to the input.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#ceiling-integer\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  ceiling: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.ceil, input);\n  },\n\n  /**\n   * Returns e raised to the power of the input.\n   *\n   * If the input collection contains an Integer, it will be implicitly converted to a Decimal and the result will be a Decimal.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#exp-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  exp: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.exp, input);\n  },\n\n  /**\n   * Returns the first integer less than or equal to the input.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#floor-integer\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  floor: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.floor, input);\n  },\n\n  /**\n   * Returns the natural logarithm of the input (i.e. the logarithm base e).\n   *\n   * When used with an Integer, it will be implicitly converted to a Decimal.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#ln-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  ln: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.log, input);\n  },\n\n  /**\n   * Returns the logarithm base base of the input number.\n   *\n   * When used with Integers, the arguments will be implicitly converted to Decimal.\n   *\n   * If base is empty, the result is empty.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#logbase-decimal-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  log: (input: TypedValue[], baseAtom: Atom): TypedValue[] => {\n    return applyMathFunc((value, base) => Math.log(value) / Math.log(base as number), input, baseAtom);\n  },\n\n  /**\n   * Raises a number to the exponent power. If this function is used with Integers, the result is an Integer. If the function is used with Decimals, the result is a Decimal. If the function is used with a mixture of Integer and Decimal, the Integer is implicitly converted to a Decimal and the result is a Decimal.\n   *\n   * If the power cannot be represented (such as the -1 raised to the 0.5), the result is empty.\n   *\n   * If the input is empty, or exponent is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#powerexponent-integer-decimal-integer-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  power: (input: TypedValue[], expAtom: Atom): TypedValue[] => {\n    return applyMathFunc(Math.pow as (x: number, ...args: unknown[]) => number, input, expAtom);\n  },\n\n  /**\n   * Rounds the decimal to the nearest whole number using a traditional round (i.e. 0.5 or higher will round to 1). If specified, the precision argument determines the decimal place at which the rounding will occur. If not specified, the rounding will default to 0 decimal places.\n   *\n   * If specified, the number of digits of precision must be >= 0 or the evaluation will end and signal an error to the calling environment.\n   *\n   * If the input collection contains a single item of type Integer, it will be implicitly converted to a Decimal.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#roundprecision-integer-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  round: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.round, input);\n  },\n\n  /**\n   * Returns the square root of the input number as a Decimal.\n   *\n   * If the square root cannot be represented (such as the square root of -1), the result is empty.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * Note that this function is equivalent to raising a number of the power of 0.5 using the power() function.\n   *\n   * See: https://hl7.org/fhirpath/#sqrt-decimal\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  sqrt: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc(Math.sqrt, input);\n  },\n\n  /**\n   * Returns the integer portion of the input.\n   *\n   * If the input collection is empty, the result is empty.\n   *\n   * If the input collection contains multiple items, the evaluation of the expression will end and signal an error to the calling environment.\n   *\n   * See: https://hl7.org/fhirpath/#truncate-integer\n   *\n   * @param input The input collection.\n   * @returns A collection containing the result.\n   */\n  truncate: (input: TypedValue[]): TypedValue[] => {\n    return applyMathFunc((x) => x | 0, input);\n  },\n\n  /*\n   * 5.8. Tree navigation\n   */\n\n  children: stub,\n\n  descendants: stub,\n\n  /*\n   * 5.9. Utility functions\n   */\n\n  /**\n   * Adds a String representation of the input collection to the diagnostic log,\n   * using the name argument as the name in the log. This log should be made available\n   * to the user in some appropriate fashion. Does not change the input, so returns\n   * the input collection as output.\n   *\n   * If the projection argument is used, the trace would log the result of evaluating\n   * the project expression on the input, but still return the input to the trace\n   * function unchanged.\n   *\n   * See: https://hl7.org/fhirpath/#tracename-string-projection-expression-collection\n   *\n   * @param input The input collection.\n   * @param nameAtom The log name.\n   */\n  trace: (input: TypedValue[], nameAtom: Atom): TypedValue[] => {\n    console.log('trace', input, nameAtom);\n    return input;\n  },\n\n  /**\n   * Returns the current date and time, including timezone offset.\n   *\n   * See: https://hl7.org/fhirpath/#now-datetime\n   */\n  now: (): TypedValue[] => {\n    return [{ type: PropertyType.dateTime, value: new Date().toISOString() }];\n  },\n\n  /**\n   * Returns the current time.\n   *\n   * See: https://hl7.org/fhirpath/#timeofday-time\n   */\n  timeOfDay: (): TypedValue[] => {\n    return [{ type: PropertyType.time, value: new Date().toISOString().substring(11) }];\n  },\n\n  /**\n   * Returns the current date.\n   *\n   * See: https://hl7.org/fhirpath/#today-date\n   */\n  today: (): TypedValue[] => {\n    return [{ type: PropertyType.date, value: new Date().toISOString().substring(0, 10) }];\n  },\n\n  /**\n   * Calculates the difference between two dates or date/times.\n   *\n   * This is not part of the official FHIRPath spec.\n   *\n   * IBM FHIR issue: https://github.com/IBM/FHIR/issues/1014\n   * IBM FHIR PR: https://github.com/IBM/FHIR/pull/1023\n   */\n  between: (input: TypedValue[], startAtom: Atom, endAtom: Atom, unitsAtom: Atom): TypedValue[] => {\n    const startDate = functions.toDateTime(startAtom.eval(input));\n    if (startDate.length === 0) {\n      throw new Error('Invalid start date');\n    }\n    const endDate = functions.toDateTime(endAtom.eval(input));\n    if (endDate.length === 0) {\n      throw new Error('Invalid end date');\n    }\n    const unit = unitsAtom.eval(input)[0]?.value as string;\n    if (unit !== 'years' && unit !== 'months' && unit !== 'days') {\n      throw new Error('Invalid units');\n    }\n    const age = calculateAge(startDate[0].value, endDate[0].value);\n    return [{ type: PropertyType.Quantity, value: { value: age[unit], unit } }];\n  },\n\n  /*\n   * 6.3 Types\n   */\n\n  /**\n   * The is() function is supported for backwards compatibility with previous\n   * implementations of FHIRPath. Just as with the is keyword, the type argument\n   * is an identifier that must resolve to the name of a type in a model.\n   *\n   * For implementations with compile-time typing, this requires special-case\n   * handling when processing the argument to treat it as a type specifier rather\n   * than an identifier expression:\n   *\n   * @param input\n   * @param typeAtom\n   * @returns\n   */\n  is: (input: TypedValue[], typeAtom: Atom): TypedValue[] => {\n    let typeName = '';\n    if (typeAtom instanceof SymbolAtom) {\n      typeName = typeAtom.name;\n    } else if (typeAtom instanceof DotAtom) {\n      typeName = (typeAtom.left as SymbolAtom).name + '.' + (typeAtom.right as SymbolAtom).name;\n    }\n    if (!typeName) {\n      return [];\n    }\n    return input.map((value) => ({ type: PropertyType.boolean, value: fhirPathIs(value, typeName) }));\n  },\n\n  /*\n   * 6.5 Boolean logic\n   */\n\n  /**\n   * 6.5.3. not() : Boolean\n   *\n   * Returns true if the input collection evaluates to false, and false if it evaluates to true. Otherwise, the result is empty ({ }):\n   *\n   * @param input\n   * @returns\n   */\n  not: (input: TypedValue[]): TypedValue[] => {\n    return functions.toBoolean(input).map((value) => ({ type: PropertyType.boolean, value: !value.value }));\n  },\n\n  /*\n   * Additional functions\n   * See: https://hl7.org/fhir/fhirpath.html#functions\n   */\n\n  /**\n   * For each item in the collection, if it is a string that is a uri (or canonical or url), locate the target of the reference, and add it to the resulting collection. If the item does not resolve to a resource, the item is ignored and nothing is added to the output collection.\n   * The items in the collection may also represent a Reference, in which case the Reference.reference is resolved.\n   * @param input The input collection.\n   * @returns\n   */\n  resolve: (input: TypedValue[]): TypedValue[] => {\n    return input\n      .map((e) => {\n        const value = e.value;\n        let refStr: string | undefined;\n        if (typeof value === 'string') {\n          refStr = value;\n        } else if (typeof value === 'object') {\n          const ref = value as Reference;\n          if (ref.resource) {\n            return toTypedValue(ref.resource);\n          }\n          refStr = ref.reference;\n        }\n        if (!refStr) {\n          return { type: PropertyType.BackboneElement, value: null };\n        }\n        const [resourceType, id] = refStr.split('/');\n        return { type: PropertyType.BackboneElement, value: { resourceType, id } };\n      })\n      .filter((e) => !!e.value);\n  },\n\n  /**\n   * The as operator can be used to treat a value as a specific type.\n   * @param input The input value.\n   * @returns The value as the specific type.\n   */\n  as: (input: TypedValue[]): TypedValue[] => {\n    return input;\n  },\n\n  /*\n   * 12. Formal Specifications\n   */\n\n  /**\n   * Returns the type of the input.\n   *\n   * 12.2. Model Information\n   *\n   * The model information returned by the reflection function type() is specified as an\n   * XML Schema document (xsd) and included in this specification at the following link:\n   * https://hl7.org/fhirpath/modelinfo.xsd\n   *\n   * See: https://hl7.org/fhirpath/#model-information\n   *\n   * @param input The input collection.\n   * @returns\n   */\n  type: (input: TypedValue[]): TypedValue[] => {\n    return input.map(({ value }) => {\n      if (typeof value === 'boolean') {\n        return { type: PropertyType.BackboneElement, value: { namespace: 'System', name: 'Boolean' } };\n      }\n      if (typeof value === 'number') {\n        return { type: PropertyType.BackboneElement, value: { namespace: 'System', name: 'Integer' } };\n      }\n      if (value && typeof value === 'object' && 'resourceType' in value) {\n        return {\n          type: PropertyType.BackboneElement,\n          value: { namespace: 'FHIR', name: (value as Resource).resourceType },\n        };\n      }\n      return { type: PropertyType.BackboneElement, value: null };\n    });\n  },\n\n  conformsTo: (input: TypedValue[], systemAtom: Atom): TypedValue[] => {\n    const system = systemAtom.eval(input)[0].value as string;\n    if (!system.startsWith('http://hl7.org/fhir/StructureDefinition/')) {\n      throw new Error('Expected a StructureDefinition URL');\n    }\n    const expectedResourceType = system.replace('http://hl7.org/fhir/StructureDefinition/', '');\n    return input.map((value) => ({\n      type: PropertyType.boolean,\n      value: value.value?.resourceType === expectedResourceType,\n    }));\n  },\n};\n\n/*\n * Helper utilities\n */\n\nfunction applyStringFunc<T>(\n  func: (str: string, ...args: unknown[]) => T | undefined,\n  input: TypedValue[],\n  ...argsAtoms: (Atom | undefined)[]\n): TypedValue[] {\n  if (input.length === 0) {\n    return [];\n  }\n  const [{ value }] = validateInput(input, 1);\n  if (typeof value !== 'string') {\n    throw new Error('String function cannot be called with non-string');\n  }\n  const result = func(value, ...argsAtoms.map((atom) => atom && atom.eval(input)?.[0]?.value));\n  if (result === undefined) {\n    return [];\n  }\n  if (Array.isArray(result)) {\n    return result.map(toTypedValue);\n  }\n  return [toTypedValue(result)];\n}\n\nfunction applyMathFunc(\n  func: (x: number, ...args: unknown[]) => number,\n  input: TypedValue[],\n  ...argsAtoms: Atom[]\n): TypedValue[] {\n  if (input.length === 0) {\n    return [];\n  }\n  const [{ value }] = validateInput(input, 1);\n  const quantity = isQuantity(value);\n  const numberInput = quantity ? value.value : value;\n  if (typeof numberInput !== 'number') {\n    throw new Error('Math function cannot be called with non-number');\n  }\n  const result = func(numberInput, ...argsAtoms.map((atom) => atom.eval(input)?.[0]?.value));\n  const type = quantity ? PropertyType.Quantity : input[0].type;\n  const returnValue = quantity ? { ...value, value: result } : result;\n  return [{ type, value: returnValue }];\n}\n\nfunction validateInput(input: TypedValue[], count: number): TypedValue[] {\n  if (input.length !== count) {\n    throw new Error(`Expected ${count} arguments`);\n  }\n  for (const element of input) {\n    if (element === null || element === undefined) {\n      throw new Error('Expected non-null argument');\n    }\n  }\n  return input;\n}\n","import { Resource } from '@medplum/fhirtypes';\nimport { Atom, InfixOperatorAtom, PrefixOperatorAtom } from '../fhirlexer';\nimport { PropertyType, TypedValue } from '../types';\nimport { functions } from './functions';\nimport {\n  booleanToTypedValue,\n  fhirPathArrayEquals,\n  fhirPathArrayEquivalent,\n  fhirPathIs,\n  fhirPathNot,\n  getTypedPropertyValue,\n  isQuantity,\n  removeDuplicates,\n  toJsBoolean,\n  toTypedValue,\n} from './utils';\n\nexport class FhirPathAtom implements Atom {\n  constructor(public readonly original: string, public readonly child: Atom) {}\n\n  eval(context: TypedValue[]): TypedValue[] {\n    try {\n      if (context.length > 0) {\n        return context.map((e) => this.child.eval([e])).flat();\n      } else {\n        return this.child.eval([]);\n      }\n    } catch (error) {\n      throw new Error(`FhirPathError on \"${this.original}\": ${error}`);\n    }\n  }\n\n  toString(): string {\n    return this.child.toString();\n  }\n}\n\nexport class LiteralAtom implements Atom {\n  constructor(public readonly value: TypedValue) {}\n  eval(): TypedValue[] {\n    return [this.value];\n  }\n\n  toString(): string {\n    const value = this.value.value;\n    if (typeof value === 'string') {\n      return `'${value}'`;\n    }\n    return value.toString();\n  }\n}\n\nexport class SymbolAtom implements Atom {\n  constructor(public readonly name: string) {}\n  eval(context: TypedValue[]): TypedValue[] {\n    if (this.name === '$this') {\n      return context;\n    }\n    return context\n      .map((e) => this.#evalValue(e))\n      .flat()\n      .filter((e) => e?.value !== undefined) as TypedValue[];\n  }\n\n  #evalValue(typedValue: TypedValue): TypedValue[] | TypedValue | undefined {\n    const input = typedValue.value;\n    if (!input || typeof input !== 'object') {\n      return undefined;\n    }\n\n    if ('resourceType' in input && (input as Resource).resourceType === this.name) {\n      return typedValue;\n    }\n\n    return getTypedPropertyValue(typedValue, this.name);\n  }\n\n  toString(): string {\n    return this.name;\n  }\n}\n\nexport class EmptySetAtom implements Atom {\n  eval(): [] {\n    return [];\n  }\n\n  toString(): string {\n    return '{}';\n  }\n}\n\nexport class UnaryOperatorAtom extends PrefixOperatorAtom {\n  constructor(operator: string, child: Atom, public readonly impl: (x: TypedValue[]) => TypedValue[]) {\n    super(operator, child);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    return this.impl(this.child.eval(context));\n  }\n\n  toString(): string {\n    return this.child.toString();\n  }\n}\n\nexport class AsAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('as', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    return functions.ofType(this.left.eval(context), this.right);\n  }\n}\n\nexport class ArithemticOperatorAtom extends InfixOperatorAtom {\n  constructor(\n    operator: string,\n    left: Atom,\n    right: Atom,\n    public readonly impl: (x: number, y: number) => number | boolean\n  ) {\n    super(operator, left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftEvalResult = this.left.eval(context);\n    if (leftEvalResult.length !== 1) {\n      return [];\n    }\n    const rightEvalResult = this.right.eval(context);\n    if (rightEvalResult.length !== 1) {\n      return [];\n    }\n    const leftValue = leftEvalResult[0].value;\n    const rightValue = rightEvalResult[0].value;\n    const leftNumber = isQuantity(leftValue) ? leftValue.value : leftValue;\n    const rightNumber = isQuantity(rightValue) ? rightValue.value : rightValue;\n    const result = this.impl(leftNumber, rightNumber);\n    if (typeof result === 'boolean') {\n      return booleanToTypedValue(result);\n    } else if (isQuantity(leftValue)) {\n      return [{ type: PropertyType.Quantity, value: { ...leftValue, value: result } }];\n    } else {\n      return [toTypedValue(result)];\n    }\n  }\n}\n\nexport class ConcatAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('&', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    const result = [...leftValue, ...rightValue];\n    if (result.length > 0 && result.every((e) => typeof e.value === 'string')) {\n      return [{ type: PropertyType.string, value: result.map((e) => e.value as string).join('') }];\n    }\n    return result;\n  }\n}\n\nexport class ContainsAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('contains', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return booleanToTypedValue(leftValue.some((e) => e.value === rightValue[0].value));\n  }\n}\n\nexport class InAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('in', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return booleanToTypedValue(rightValue.some((e) => e.value === leftValue[0].value));\n  }\n}\n\nexport class DotAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('.', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    return this.right.eval(this.left.eval(context));\n  }\n\n  toString(): string {\n    return `${this.left.toString()}.${this.right.toString()}`;\n  }\n}\n\nexport class UnionAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('|', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftResult = this.left.eval(context);\n    const rightResult = this.right.eval(context);\n    return removeDuplicates([...leftResult, ...rightResult]);\n  }\n}\n\nexport class EqualsAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('=', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return fhirPathArrayEquals(leftValue, rightValue);\n  }\n}\n\nexport class NotEqualsAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('!=', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return fhirPathNot(fhirPathArrayEquals(leftValue, rightValue));\n  }\n}\n\nexport class EquivalentAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('~', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return fhirPathArrayEquivalent(leftValue, rightValue);\n  }\n}\n\nexport class NotEquivalentAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('!~', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    return fhirPathNot(fhirPathArrayEquivalent(leftValue, rightValue));\n  }\n}\n\nexport class IsAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('is', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    if (leftValue.length !== 1) {\n      return [];\n    }\n    const typeName = (this.right as SymbolAtom).name;\n    return booleanToTypedValue(fhirPathIs(leftValue[0], typeName));\n  }\n}\n\n/**\n * 6.5.1. and\n * Returns true if both operands evaluate to true,\n * false if either operand evaluates to false,\n * and the empty collection otherwise.\n */\nexport class AndAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('and', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    const rightValue = this.right.eval(context);\n    if (leftValue[0]?.value === true && rightValue[0]?.value === true) {\n      return booleanToTypedValue(true);\n    }\n    if (leftValue[0]?.value === false || rightValue[0]?.value === false) {\n      return booleanToTypedValue(false);\n    }\n    return [];\n  }\n}\n\nexport class OrAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('or', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftValue = this.left.eval(context);\n    if (toJsBoolean(leftValue)) {\n      return leftValue;\n    }\n\n    const rightValue = this.right.eval(context);\n    if (toJsBoolean(rightValue)) {\n      return rightValue;\n    }\n\n    return [];\n  }\n}\n\n/**\n * 6.5.4. xor\n * Returns true if exactly one of the operands evaluates to true,\n * false if either both operands evaluate to true or both operands evaluate to false,\n * and the empty collection otherwise.\n */\nexport class XorAtom extends InfixOperatorAtom {\n  constructor(left: Atom, right: Atom) {\n    super('xor', left, right);\n  }\n\n  eval(context: TypedValue[]): TypedValue[] {\n    const leftResult = this.left.eval(context);\n    const rightResult = this.right.eval(context);\n    if (leftResult.length === 0 && rightResult.length === 0) {\n      return [];\n    }\n    const leftValue = leftResult.length === 0 ? null : leftResult[0].value;\n    const rightValue = rightResult.length === 0 ? null : rightResult[0].value;\n    if ((leftValue === true && rightValue !== true) || (leftValue !== true && rightValue === true)) {\n      return booleanToTypedValue(true);\n    }\n    if ((leftValue === true && rightValue === true) || (leftValue === false && rightValue === false)) {\n      return booleanToTypedValue(false);\n    }\n    return [];\n  }\n}\n\nexport class FunctionAtom implements Atom {\n  constructor(public readonly name: string, public readonly args: Atom[]) {}\n  eval(context: TypedValue[]): TypedValue[] {\n    const impl = functions[this.name];\n    if (!impl) {\n      throw new Error('Unrecognized function: ' + this.name);\n    }\n    return impl(context, ...this.args);\n  }\n\n  toString(): string {\n    return `${this.name}(${this.args.map((arg) => arg.toString()).join(', ')})`;\n  }\n}\n\nexport class IndexerAtom implements Atom {\n  constructor(public readonly left: Atom, public readonly expr: Atom) {}\n  eval(context: TypedValue[]): TypedValue[] {\n    const evalResult = this.expr.eval(context);\n    if (evalResult.length !== 1) {\n      return [];\n    }\n    const index = evalResult[0].value;\n    if (typeof index !== 'number') {\n      throw new Error(`Invalid indexer expression: should return integer}`);\n    }\n    const leftResult = this.left.eval(context);\n    if (!(index in leftResult)) {\n      return [];\n    }\n    return [leftResult[index]];\n  }\n\n  toString(): string {\n    return `${this.left.toString()}[${this.expr.toString()}]`;\n  }\n}\n","import { Token, Tokenizer } from '../fhirlexer';\n\nexport const FHIRPATH_KEYWORDS = ['true', 'false'];\nexport const FHIRPATH_OPERATORS = ['!=', '!~', '<=', '>=', '{}', '->'];\n\nexport function tokenize(str: string): Token[] {\n  return new Tokenizer(str, FHIRPATH_KEYWORDS, FHIRPATH_OPERATORS).tokenize();\n}\n","import { Quantity } from '@medplum/fhirtypes';\nimport { Atom, InfixParselet, Parser, ParserBuilder, PrefixParselet } from '../fhirlexer';\nimport { PropertyType, TypedValue } from '../types';\nimport {\n  AndAtom,\n  ArithemticOperatorAtom,\n  AsAtom,\n  ConcatAtom,\n  ContainsAtom,\n  DotAtom,\n  EmptySetAtom,\n  EqualsAtom,\n  EquivalentAtom,\n  FhirPathAtom,\n  FunctionAtom,\n  InAtom,\n  IndexerAtom,\n  IsAtom,\n  LiteralAtom,\n  NotEqualsAtom,\n  NotEquivalentAtom,\n  OrAtom,\n  SymbolAtom,\n  UnaryOperatorAtom,\n  UnionAtom,\n  XorAtom,\n} from './atoms';\nimport { parseDateString } from './date';\nimport { tokenize } from './tokenize';\nimport { toTypedValue } from './utils';\n\n/**\n * Operator precedence\n * See: https://hl7.org/fhirpath/#operator-precedence\n */\nexport const enum OperatorPrecedence {\n  FunctionCall = 0,\n  Dot = 1,\n  Indexer = 2,\n  UnaryAdd = 3,\n  UnarySubtract = 3,\n  Multiply = 4,\n  Divide = 4,\n  IntegerDivide = 4,\n  Modulo = 4,\n  Add = 5,\n  Subtract = 5,\n  Ampersand = 5,\n  Is = 6,\n  As = 6,\n  Union = 7,\n  GreaterThan = 8,\n  GreaterThanOrEquals = 8,\n  LessThan = 8,\n  LessThanOrEquals = 8,\n  Equals = 9,\n  Equivalent = 9,\n  NotEquals = 9,\n  NotEquivalent = 9,\n  In = 10,\n  Contains = 10,\n  And = 11,\n  Xor = 12,\n  Or = 12,\n  Implies = 13,\n  Arrow = 100,\n  Semicolon = 200,\n}\n\nconst PARENTHESES_PARSELET: PrefixParselet = {\n  parse(parser: Parser) {\n    const expr = parser.consumeAndParse();\n    if (!parser.match(')')) {\n      throw new Error('Parse error: expected `)` got `' + parser.peek()?.value + '`');\n    }\n    return expr;\n  },\n};\n\nconst INDEXER_PARSELET: InfixParselet = {\n  parse(parser: Parser, left: Atom) {\n    const expr = parser.consumeAndParse();\n    if (!parser.match(']')) {\n      throw new Error('Parse error: expected `]`');\n    }\n    return new IndexerAtom(left, expr);\n  },\n\n  precedence: OperatorPrecedence.Indexer,\n};\n\nconst FUNCTION_CALL_PARSELET: InfixParselet = {\n  parse(parser: Parser, left: Atom) {\n    if (!(left instanceof SymbolAtom)) {\n      throw new Error('Unexpected parentheses');\n    }\n\n    const args = [];\n    while (!parser.match(')')) {\n      args.push(parser.consumeAndParse());\n      parser.match(',');\n    }\n\n    return new FunctionAtom(left.name, args); //, functions[left.name]);\n  },\n  precedence: OperatorPrecedence.FunctionCall,\n};\n\nfunction parseQuantity(str: string): Quantity {\n  const parts = str.split(' ');\n  const value = parseFloat(parts[0]);\n  let unit = parts[1];\n  if (unit && unit.startsWith(\"'\") && unit.endsWith(\"'\")) {\n    unit = unit.substring(1, unit.length - 1);\n  } else {\n    unit = '{' + unit + '}';\n  }\n  return { value, unit };\n}\n\nexport function initFhirPathParserBuilder(): ParserBuilder {\n  return new ParserBuilder()\n    .registerPrefix('String', {\n      parse: (_, token) => new LiteralAtom({ type: PropertyType.string, value: token.value }),\n    })\n    .registerPrefix('DateTime', {\n      parse: (_, token) => new LiteralAtom({ type: PropertyType.dateTime, value: parseDateString(token.value) }),\n    })\n    .registerPrefix('Quantity', {\n      parse: (_, token) => new LiteralAtom({ type: PropertyType.Quantity, value: parseQuantity(token.value) }),\n    })\n    .registerPrefix('Number', {\n      parse: (_, token) => new LiteralAtom({ type: PropertyType.decimal, value: parseFloat(token.value) }),\n    })\n    .registerPrefix('true', { parse: () => new LiteralAtom({ type: PropertyType.boolean, value: true }) })\n    .registerPrefix('false', { parse: () => new LiteralAtom({ type: PropertyType.boolean, value: false }) })\n    .registerPrefix('Symbol', { parse: (_, token) => new SymbolAtom(token.value) })\n    .registerPrefix('{}', { parse: () => new EmptySetAtom() })\n    .registerPrefix('(', PARENTHESES_PARSELET)\n    .registerInfix('[', INDEXER_PARSELET)\n    .registerInfix('(', FUNCTION_CALL_PARSELET)\n    .prefix('+', OperatorPrecedence.UnaryAdd, (_, right) => new UnaryOperatorAtom('+', right, (x) => x))\n    .prefix(\n      '-',\n      OperatorPrecedence.UnarySubtract,\n      (_, right) => new ArithemticOperatorAtom('-', right, right, (_, y) => -y)\n    )\n    .infixLeft('.', OperatorPrecedence.Dot, (left, _, right) => new DotAtom(left, right))\n    .infixLeft(\n      '/',\n      OperatorPrecedence.Divide,\n      (left, _, right) => new ArithemticOperatorAtom('/', left, right, (x, y) => x / y)\n    )\n    .infixLeft(\n      '*',\n      OperatorPrecedence.Multiply,\n      (left, _, right) => new ArithemticOperatorAtom('*', left, right, (x, y) => x * y)\n    )\n    .infixLeft(\n      '+',\n      OperatorPrecedence.Add,\n      (left, _, right) => new ArithemticOperatorAtom('+', left, right, (x, y) => x + y)\n    )\n    .infixLeft(\n      '-',\n      OperatorPrecedence.Subtract,\n      (left, _, right) => new ArithemticOperatorAtom('-', left, right, (x, y) => x - y)\n    )\n    .infixLeft('|', OperatorPrecedence.Union, (left, _, right) => new UnionAtom(left, right))\n    .infixLeft('=', OperatorPrecedence.Equals, (left, _, right) => new EqualsAtom(left, right))\n    .infixLeft('!=', OperatorPrecedence.Equals, (left, _, right) => new NotEqualsAtom(left, right))\n    .infixLeft('~', OperatorPrecedence.Equivalent, (left, _, right) => new EquivalentAtom(left, right))\n    .infixLeft('!~', OperatorPrecedence.NotEquivalent, (left, _, right) => new NotEquivalentAtom(left, right))\n    .infixLeft(\n      '<',\n      OperatorPrecedence.LessThan,\n      (left, _, right) => new ArithemticOperatorAtom('<', left, right, (x, y) => x < y)\n    )\n    .infixLeft(\n      '<=',\n      OperatorPrecedence.LessThanOrEquals,\n      (left, _, right) => new ArithemticOperatorAtom('<=', left, right, (x, y) => x <= y)\n    )\n    .infixLeft(\n      '>',\n      OperatorPrecedence.GreaterThan,\n      (left, _, right) => new ArithemticOperatorAtom('>', left, right, (x, y) => x > y)\n    )\n    .infixLeft(\n      '>=',\n      OperatorPrecedence.GreaterThanOrEquals,\n      (left, _, right) => new ArithemticOperatorAtom('>=', left, right, (x, y) => x >= y)\n    )\n    .infixLeft('&', OperatorPrecedence.Ampersand, (left, _, right) => new ConcatAtom(left, right))\n    .infixLeft('and', OperatorPrecedence.Is, (left, _, right) => new AndAtom(left, right))\n    .infixLeft('as', OperatorPrecedence.Is, (left, _, right) => new AsAtom(left, right))\n    .infixLeft('contains', OperatorPrecedence.Is, (left, _, right) => new ContainsAtom(left, right))\n    .infixLeft(\n      'div',\n      OperatorPrecedence.Is,\n      (left, _, right) => new ArithemticOperatorAtom('div', left, right, (x, y) => (x / y) | 0)\n    )\n    .infixLeft('in', OperatorPrecedence.Is, (left, _, right) => new InAtom(left, right))\n    .infixLeft('is', OperatorPrecedence.Is, (left, _, right) => new IsAtom(left, right))\n    .infixLeft(\n      'mod',\n      OperatorPrecedence.Is,\n      (left, _, right) => new ArithemticOperatorAtom('mod', left, right, (x, y) => x % y)\n    )\n    .infixLeft('or', OperatorPrecedence.Is, (left, _, right) => new OrAtom(left, right))\n    .infixLeft('xor', OperatorPrecedence.Is, (left, _, right) => new XorAtom(left, right));\n}\n\nconst fhirPathParserBuilder = initFhirPathParserBuilder();\n\n/**\n * Parses a FHIRPath expression into an AST.\n * The result can be used to evaluate the expression against a resource or other object.\n * This method is useful if you know that you will evaluate the same expression many times\n * against different resources.\n * @param input The FHIRPath expression to parse.\n * @returns The AST representing the expression.\n */\nexport function parseFhirPath(input: string): FhirPathAtom {\n  return new FhirPathAtom(input, fhirPathParserBuilder.construct(tokenize(input)).consumeAndParse());\n}\n\n/**\n * Evaluates a FHIRPath expression against a resource or other object.\n * @param expression The FHIRPath expression to parse.\n * @param input The resource or object to evaluate the expression against.\n * @returns The result of the FHIRPath expression against the resource or object.\n */\nexport function evalFhirPath(expression: string, input: unknown): unknown[] {\n  // eval requires a TypedValue array\n  // As a convenience, we can accept array or non-array, and TypedValue or unknown value\n  const array = Array.isArray(input) ? input : [input];\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n    if (!(typeof el === 'object' && 'type' in el && 'value' in el)) {\n      array[i] = toTypedValue(array[i]);\n    }\n  }\n  return evalFhirPathTyped(expression, array).map((e) => e.value);\n}\n\n/**\n * Evaluates a FHIRPath expression against a resource or other object.\n * @param expression The FHIRPath expression to parse.\n * @param input The resource or object to evaluate the expression against.\n * @returns The result of the FHIRPath expression against the resource or object.\n */\nexport function evalFhirPathTyped(expression: string, input: TypedValue[]): TypedValue[] {\n  return parseFhirPath(expression).eval(input);\n}\n","import { isStringArray } from './utils';\n\n/**\n * The Hl7Context class represents the parsing context for an HL7 message.\n *\n * MSH-1:\n * https://hl7-definition.caristix.com/v2/HL7v2.6/Fields/MSH.1\n *\n * MSH-2:\n * https://hl7-definition.caristix.com/v2/HL7v2.6/Fields/MSH.2\n *\n * See this tutorial on MSH, and why it's a bad idea to use anything other than the default values:\n * https://www.hl7soup.com/HL7TutorialMSH.html\n */\nexport class Hl7Context {\n  constructor(\n    public readonly segmentSeparator = '\\r',\n    public readonly fieldSeparator = '|',\n    public readonly componentSeparator = '^',\n    public readonly repetitionSeparator = '~',\n    public readonly escapeCharacter = '\\\\',\n    public readonly subcomponentSeparator = '&'\n  ) {}\n\n  /**\n   * Returns the MSH-2 field value based on the configured separators.\n   * @returns The HL7 MSH-2 field value.\n   */\n  getMsh2(): string {\n    return (\n      this.fieldSeparator +\n      this.componentSeparator +\n      this.repetitionSeparator +\n      this.escapeCharacter +\n      this.subcomponentSeparator\n    );\n  }\n}\n\n/**\n * The Hl7Message class represents one HL7 message.\n * A message is a collection of segments.\n */\nexport class Hl7Message {\n  readonly context: Hl7Context;\n  readonly segments: Hl7Segment[];\n\n  /**\n   * Creates a new HL7 message.\n   * @param segments The HL7 segments.\n   * @param context Optional HL7 parsing context.\n   */\n  constructor(segments: Hl7Segment[], context = new Hl7Context()) {\n    this.context = context;\n    this.segments = segments;\n  }\n\n  /**\n   * Returns an HL7 segment by index or by name.\n   * @param index The HL7 segment index or name.\n   * @returns The HL7 segment if found; otherwise, undefined.\n   */\n  get(index: number | string): Hl7Segment | undefined {\n    if (typeof index === 'number') {\n      return this.segments[index];\n    }\n    return this.segments.find((s) => s.name === index);\n  }\n\n  /**\n   * Returns all HL7 segments of a given name.\n   * @param name The HL7 segment name.\n   * @returns An array of HL7 segments with the specified name.\n   */\n  getAll(name: string): Hl7Segment[] {\n    return this.segments.filter((s) => s.name === name);\n  }\n\n  /**\n   * Returns the HL7 message as a string.\n   * @returns The HL7 message as a string.\n   */\n  toString(): string {\n    return this.segments.map((s) => s.toString()).join(this.context.segmentSeparator);\n  }\n\n  /**\n   * Returns an HL7 \"ACK\" (acknowledgement) message for this message.\n   * @returns The HL7 \"ACK\" message.\n   */\n  buildAck(): Hl7Message {\n    const now = new Date();\n    const msh = this.get('MSH');\n    const sendingApp = msh?.get(2)?.toString() || '';\n    const sendingFacility = msh?.get(3)?.toString() || '';\n    const receivingApp = msh?.get(4)?.toString() || '';\n    const receivingFacility = msh?.get(5)?.toString() || '';\n    const controlId = msh?.get(9)?.toString() || '';\n    const versionId = msh?.get(12)?.toString() || '2.5.1';\n\n    return new Hl7Message([\n      new Hl7Segment(\n        [\n          'MSH',\n          this.context.getMsh2(),\n          receivingApp,\n          receivingFacility,\n          sendingApp,\n          sendingFacility,\n          now.toISOString(),\n          '',\n          'ACK',\n          now.getTime().toString(),\n          'P',\n          versionId,\n        ],\n        this.context\n      ),\n      new Hl7Segment(['MSA', 'AA', controlId, 'OK'], this.context),\n    ]);\n  }\n\n  /**\n   * Parses an HL7 message string into an Hl7Message object.\n   * @param text The HL7 message text.\n   * @returns The parsed HL7 message.\n   */\n  static parse(text: string): Hl7Message {\n    if (!text.startsWith('MSH')) {\n      const err = new Error('Invalid HL7 message');\n      (err as any).type = 'entity.parse.failed';\n      throw err;\n    }\n    const context = new Hl7Context(\n      '\\r',\n      text.charAt(3), // Field separator, recommended \"|\"\n      text.charAt(4), // Component separator, recommended \"^\"\n      text.charAt(5), // Repetition separator, recommended \"~\"\n      text.charAt(6), // Escape character, recommended \"\\\"\n      text.charAt(7) // Subcomponent separator, recommended \"&\"\n    );\n    return new Hl7Message(\n      text.split(/[\\r\\n]+/).map((line) => Hl7Segment.parse(line, context)),\n      context\n    );\n  }\n}\n\n/**\n * The Hl7Segment class represents one HL7 segment.\n * A segment is a collection of fields.\n * The name field is the first field.\n */\nexport class Hl7Segment {\n  readonly context: Hl7Context;\n  readonly name: string;\n  readonly fields: Hl7Field[];\n\n  /**\n   * Creates a new HL7 segment.\n   * @param fields The HL7 fields.\n   * @param context Optional HL7 parsing context.\n   */\n  constructor(fields: Hl7Field[] | string[], context = new Hl7Context()) {\n    this.context = context;\n    if (isStringArray(fields)) {\n      this.fields = fields.map((f) => Hl7Field.parse(f));\n    } else {\n      this.fields = fields;\n    }\n    this.name = this.fields[0].components[0][0];\n  }\n\n  /**\n   * Returns an HL7 field by index.\n   * @param index The HL7 field index.\n   * @returns The HL7 field.\n   */\n  get(index: number): Hl7Field {\n    return this.fields[index];\n  }\n\n  /**\n   * Returns the HL7 segment as a string.\n   * @returns The HL7 segment as a string.\n   */\n  toString(): string {\n    return this.fields.map((f) => f.toString()).join(this.context.fieldSeparator);\n  }\n\n  /**\n   * Parses an HL7 segment string into an Hl7Segment object.\n   * @param text The HL7 segment text.\n   * @param context Optional HL7 parsing context.\n   * @returns The parsed HL7 segment.\n   */\n  static parse(text: string, context = new Hl7Context()): Hl7Segment {\n    return new Hl7Segment(\n      text.split(context.fieldSeparator).map((f) => Hl7Field.parse(f, context)),\n      context\n    );\n  }\n}\n\n/**\n * The Hl7Field class represents one HL7 field.\n * A field is a collection of components.\n */\nexport class Hl7Field {\n  readonly context: Hl7Context;\n  readonly components: string[][];\n\n  /**\n   * Creates a new HL7 field.\n   * @param components The HL7 components.\n   * @param context Optional HL7 parsing context.\n   */\n  constructor(components: string[][], context = new Hl7Context()) {\n    this.context = context;\n    this.components = components;\n  }\n\n  /**\n   * Returns an HL7 component by index.\n   * @param component The component index.\n   * @param subcomponent Optional subcomponent index.\n   * @param repetition Optional repetition index.\n   * @returns The string value of the specified component.\n   */\n  get(component: number, subcomponent?: number, repetition = 0): string {\n    let value = this.components[repetition][component] || '';\n\n    if (subcomponent !== undefined) {\n      value = value.split(this.context.subcomponentSeparator)[subcomponent] || '';\n    }\n\n    return value;\n  }\n\n  /**\n   * Returns the HL7 field as a string.\n   * @returns The HL7 field as a string.\n   */\n  toString(): string {\n    return this.components.map((r) => r.join(this.context.componentSeparator)).join(this.context.repetitionSeparator);\n  }\n\n  /**\n   * Parses an HL7 field string into an Hl7Field object.\n   * @param text The HL7 field text.\n   * @param context Optional HL7 parsing context.\n   * @returns The parsed HL7 field.\n   */\n  static parse(text: string, context = new Hl7Context()): Hl7Field {\n    return new Hl7Field(\n      text.split(context.repetitionSeparator).map((r) => r.split(context.componentSeparator)),\n      context\n    );\n  }\n}\n","import { ResourceType } from '@medplum/fhirtypes';\n\nexport const DEFAULT_SEARCH_COUNT = 20;\n\nexport interface SearchRequest {\n  readonly resourceType: ResourceType;\n  filters?: Filter[];\n  sortRules?: SortRule[];\n  offset?: number;\n  count?: number;\n  fields?: string[];\n  name?: string;\n  total?: 'none' | 'estimate' | 'accurate';\n  revInclude?: string;\n}\n\nexport interface Filter {\n  code: string;\n  operator: Operator;\n  value: string;\n  unitSystem?: string;\n  unitCode?: string;\n}\n\nexport interface SortRule {\n  code: string;\n  descending?: boolean;\n}\n\n/**\n * Search operators.\n * These operators represent \"modifiers\" and \"prefixes\" in FHIR search.\n * See: https://www.hl7.org/fhir/search.html\n */\nexport enum Operator {\n  EQUALS = 'eq',\n  NOT_EQUALS = 'ne',\n\n  // Numbers\n  GREATER_THAN = 'gt',\n  LESS_THAN = 'lt',\n  GREATER_THAN_OR_EQUALS = 'ge',\n  LESS_THAN_OR_EQUALS = 'le',\n\n  // Dates\n  STARTS_AFTER = 'sa',\n  ENDS_BEFORE = 'eb',\n  APPROXIMATELY = 'ap',\n\n  // String\n  CONTAINS = 'contains',\n  EXACT = 'exact',\n\n  // Token\n  TEXT = 'text',\n  NOT = 'not',\n  ABOVE = 'above',\n  BELOW = 'below',\n  IN = 'in',\n  NOT_IN = 'not-in',\n  OF_TYPE = 'of-type',\n\n  // All\n  MISSING = 'missing',\n}\n\nconst MODIFIER_OPERATORS: Operator[] = [\n  Operator.CONTAINS,\n  Operator.EXACT,\n  Operator.TEXT,\n  Operator.NOT,\n  Operator.ABOVE,\n  Operator.BELOW,\n  Operator.IN,\n  Operator.NOT_IN,\n  Operator.OF_TYPE,\n  Operator.MISSING,\n];\n\nconst PREFIX_OPERATORS: Operator[] = [\n  Operator.NOT_EQUALS,\n  Operator.GREATER_THAN,\n  Operator.LESS_THAN,\n  Operator.GREATER_THAN_OR_EQUALS,\n  Operator.LESS_THAN_OR_EQUALS,\n  Operator.STARTS_AFTER,\n  Operator.ENDS_BEFORE,\n  Operator.APPROXIMATELY,\n];\n\n/**\n * Parses a URL into a SearchRequest.\n *\n * See the FHIR search spec: http://hl7.org/fhir/r4/search.html\n *\n * @param url The URL to parse.\n * @returns Parsed search definition.\n */\nexport function parseSearchDefinition(url: string): SearchRequest {\n  const location = new URL(url, 'https://example.com/');\n  const resourceType = location.pathname\n    .replace(/(^\\/)|(\\/$)/g, '') // Remove leading and trailing slashes\n    .split('/')\n    .pop() as ResourceType;\n  const params = new URLSearchParams(location.search);\n  let filters: Filter[] | undefined = undefined;\n  let sortRules: SortRule[] | undefined = undefined;\n  let fields: string[] | undefined = undefined;\n  let offset = undefined;\n  let count = undefined;\n  let total = undefined;\n\n  params.forEach((value, key) => {\n    if (key === '_fields') {\n      fields = value.split(',');\n    } else if (key === '_offset') {\n      offset = parseInt(value);\n    } else if (key === '_count') {\n      count = parseInt(value);\n    } else if (key === '_total') {\n      total = value;\n    } else if (key === '_sort') {\n      sortRules = sortRules || [];\n      sortRules.push(parseSortRule(value));\n    } else {\n      filters = filters || [];\n      filters.push(parseSearchFilter(key, value));\n    }\n  });\n\n  return {\n    resourceType,\n    filters,\n    fields,\n    offset,\n    count,\n    total,\n    sortRules,\n  };\n}\n\n/**\n * Parses a URL query parameter into a sort rule.\n *\n * By default, the sort rule is the field name.\n *\n * Sort rules can be reversed into descending order by prefixing the field name with a minus sign.\n *\n * See sorting: http://hl7.org/fhir/r4/search.html#_sort\n *\n * @param value The URL parameter value.\n * @returns The parsed sort rule.\n */\nfunction parseSortRule(value: string): SortRule {\n  if (value.startsWith('-')) {\n    return { code: value.substring(1), descending: true };\n  } else {\n    return { code: value };\n  }\n}\n\n/**\n * Parses a URL query parameter into a search filter.\n *\n * FHIR search filters can be specified as modifiers or prefixes.\n *\n * For string properties, modifiers are appended to the key, e.g. \"name:contains=eve\".\n *\n * For date and numeric properties, prefixes are prepended to the value, e.g. \"birthdate=gt2000\".\n *\n * See the FHIR search spec: http://hl7.org/fhir/r4/search.html\n *\n * @param key The URL parameter key.\n * @param value The URL parameter value.\n * @returns The parsed search filter.\n */\nfunction parseSearchFilter(key: string, value: string): Filter {\n  let code = key;\n  let operator = Operator.EQUALS;\n\n  for (const modifier of MODIFIER_OPERATORS) {\n    const modifierIndex = code.indexOf(':' + modifier);\n    if (modifierIndex !== -1) {\n      operator = modifier;\n      code = code.substring(0, modifierIndex);\n    }\n  }\n\n  for (const prefix of PREFIX_OPERATORS) {\n    if (value.match(new RegExp('^' + prefix + '\\\\d'))) {\n      operator = prefix;\n      value = value.substring(prefix.length);\n    }\n  }\n\n  return { code, operator, value };\n}\n\n/**\n * Formats a search definition object into a query string.\n * Note: The return value does not include the resource type.\n * @param {!SearchRequest} definition The search definition.\n * @returns Formatted URL.\n */\nexport function formatSearchQuery(definition: SearchRequest): string {\n  const params: string[] = [];\n\n  if (definition.fields) {\n    params.push('_fields=' + definition.fields.join(','));\n  }\n\n  if (definition.filters) {\n    definition.filters.forEach((filter) => params.push(formatFilter(filter)));\n  }\n\n  if (definition.sortRules && definition.sortRules.length > 0) {\n    params.push(formatSortRules(definition.sortRules));\n  }\n\n  if (definition.offset !== undefined) {\n    params.push('_offset=' + definition.offset);\n  }\n\n  if (definition.count !== undefined) {\n    params.push('_count=' + definition.count);\n  }\n\n  if (definition.total !== undefined) {\n    params.push('_total=' + definition.total);\n  }\n\n  if (params.length === 0) {\n    return '';\n  }\n\n  params.sort();\n  return '?' + params.join('&');\n}\n\nfunction formatFilter(filter: Filter): string {\n  const modifier = MODIFIER_OPERATORS.includes(filter.operator) ? ':' + filter.operator : '';\n  const prefix = PREFIX_OPERATORS.includes(filter.operator) ? filter.operator : '';\n  return `${filter.code}${modifier}=${prefix}${encodeURIComponent(filter.value)}`;\n}\n\nfunction formatSortRules(sortRules: SortRule[] | undefined): string {\n  if (!sortRules || sortRules.length === 0) {\n    return '';\n  }\n  return '_sort=' + sortRules.map((sr) => (sr.descending ? '-' + sr.code : sr.code)).join(',');\n}\n","import { ElementDefinition, SearchParameter } from '@medplum/fhirtypes';\nimport { globalSchema, PropertyType } from './types';\nimport { capitalize } from './utils';\n\nexport enum SearchParameterType {\n  BOOLEAN = 'BOOLEAN',\n  NUMBER = 'NUMBER',\n  QUANTITY = 'QUANTITY',\n  TEXT = 'TEXT',\n  REFERENCE = 'REFERENCE',\n  DATE = 'DATE',\n  DATETIME = 'DATETIME',\n  PERIOD = 'PERIOD',\n}\n\nexport interface SearchParameterDetails {\n  readonly columnName: string;\n  readonly type: SearchParameterType;\n  readonly elementDefinition?: ElementDefinition;\n  readonly array?: boolean;\n}\n\n/**\n * Returns the type details of a SearchParameter.\n *\n * The SearchParameter resource has a \"type\" parameter, but that is missing some critical information.\n *\n * For example:\n *   1) The \"date\" type includes \"date\", \"datetime\", and \"period\".\n *   2) The \"token\" type includes enums and booleans.\n *   3) Arrays/multiple values are not reflected at all.\n *\n * @param resourceType The root resource type.\n * @param searchParam The search parameter.\n * @returns The search parameter type details.\n */\nexport function getSearchParameterDetails(resourceType: string, searchParam: SearchParameter): SearchParameterDetails {\n  let result: SearchParameterDetails | undefined =\n    globalSchema.types[resourceType]?.searchParamsDetails?.[searchParam.code as string];\n  if (!result) {\n    result = buildSearchParamterDetails(resourceType, searchParam);\n  }\n  return result;\n}\n\nfunction setSearchParamterDetails(resourceType: string, code: string, details: SearchParameterDetails): void {\n  const typeSchema = globalSchema.types[resourceType];\n  if (!typeSchema.searchParamsDetails) {\n    typeSchema.searchParamsDetails = {};\n  }\n  typeSchema.searchParamsDetails[code] = details;\n}\n\nfunction buildSearchParamterDetails(resourceType: string, searchParam: SearchParameter): SearchParameterDetails {\n  if (searchParam.code === '_lastUpdated') {\n    return { columnName: 'lastUpdated', type: SearchParameterType.DATETIME };\n  }\n\n  const code = searchParam.code as string;\n  const columnName = convertCodeToColumnName(code);\n  const expression = getExpressionForResourceType(resourceType, searchParam.expression as string)?.split('.');\n  if (!expression) {\n    // This happens on compound types\n    // In the future, explore returning multiple column definitions\n    return { columnName, type: SearchParameterType.TEXT };\n  }\n\n  const defaultType = getSearchParameterType(searchParam);\n  let baseType = resourceType;\n  let elementDefinition = undefined;\n  let propertyType = undefined;\n  let array = false;\n\n  for (let i = 1; i < expression.length; i++) {\n    const propertyName = expression[i];\n    elementDefinition =\n      globalSchema.types[baseType]?.properties?.[propertyName] ??\n      globalSchema.types[baseType]?.properties?.[propertyName + '[x]'];\n    if (!elementDefinition) {\n      throw new Error(`Element definition not found for ${resourceType} ${searchParam.code}`);\n    }\n\n    if (elementDefinition.max === '*') {\n      array = true;\n    }\n\n    propertyType = elementDefinition.type?.[0].code;\n    if (!propertyType) {\n      // This happens when one of parent properties uses contentReference\n      // In the future, explore following the reference\n      return { columnName, type: defaultType, array };\n    }\n\n    if (i < expression.length - 1) {\n      if (propertyType === 'Element' || propertyType === 'BackboneElement') {\n        baseType = baseType + capitalize(propertyName);\n      } else {\n        baseType = propertyType;\n      }\n    }\n  }\n\n  const type = getSearchParameterType(searchParam, propertyType as PropertyType);\n  const result = { columnName, type, elementDefinition, array };\n  setSearchParamterDetails(resourceType, code, result);\n  return result;\n}\n\n/**\n * Converts a hyphen-delimited code to camelCase string.\n * @param code The search parameter code.\n * @returns The SQL column name.\n */\nfunction convertCodeToColumnName(code: string): string {\n  return code.split('-').reduce((result, word, index) => result + (index ? capitalize(word) : word), '');\n}\n\nfunction getSearchParameterType(searchParam: SearchParameter, propertyType?: PropertyType): SearchParameterType {\n  let type = SearchParameterType.TEXT;\n  switch (searchParam.type) {\n    case 'date':\n      if (propertyType === PropertyType.dateTime || propertyType === PropertyType.instant) {\n        type = SearchParameterType.DATETIME;\n      } else {\n        type = SearchParameterType.DATE;\n      }\n      break;\n    case 'number':\n      type = SearchParameterType.NUMBER;\n      break;\n    case 'quantity':\n      type = SearchParameterType.QUANTITY;\n      break;\n    case 'reference':\n      type = SearchParameterType.REFERENCE;\n      break;\n    case 'token':\n      if (propertyType === 'boolean') {\n        type = SearchParameterType.BOOLEAN;\n      }\n      break;\n  }\n  return type;\n}\n\nexport function getExpressionForResourceType(resourceType: string, expression: string): string | undefined {\n  const expressions = expression.split(' | ');\n  for (const e of expressions) {\n    if (isIgnoredExpression(e)) {\n      continue;\n    }\n    const simplified = simplifyExpression(e);\n    if (simplified.startsWith(resourceType + '.')) {\n      return simplified;\n    }\n  }\n  return undefined;\n}\n\nfunction isIgnoredExpression(input: string): boolean {\n  return input.includes(' as Period') || input.includes(' as SampledDate');\n}\n\nfunction simplifyExpression(input: string): string {\n  let result = input.trim();\n\n  if (result.startsWith('(') && result.endsWith(')')) {\n    result = result.substring(1, result.length - 1);\n  }\n\n  if (result.includes('[0]')) {\n    result = result.replaceAll('[0]', '');\n  }\n\n  const stopStrings = [' != ', ' as ', '.as(', '.exists(', '.where('];\n  for (const stopString of stopStrings) {\n    if (result.includes(stopString)) {\n      result = result.substring(0, result.indexOf(stopString));\n    }\n  }\n\n  return result;\n}\n","import { Reference, Resource, SearchParameter } from '@medplum/fhirtypes';\nimport { evalFhirPath } from './fhirpath';\nimport { Filter, Operator, SearchRequest } from './search';\nimport { getSearchParameterDetails, SearchParameterType } from './searchparams';\nimport { globalSchema } from './types';\n\n/**\n * Determines if the resource matches the search request.\n * @param resource The resource that was created or updated.\n * @param searchRequest The subscription criteria as a search request.\n * @returns True if the resource satisfies the search request.\n */\nexport function matchesSearchRequest(resource: Resource, searchRequest: SearchRequest): boolean {\n  if (searchRequest.resourceType !== resource.resourceType) {\n    return false;\n  }\n  if (searchRequest.filters) {\n    for (const filter of searchRequest.filters) {\n      if (!matchesSearchFilter(resource, searchRequest, filter)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * Determines if the resource matches the search filter.\n * @param resource The resource that was created or updated.\n * @param filter One of the filters of a subscription criteria.\n * @returns True if the resource satisfies the search filter.\n */\nfunction matchesSearchFilter(resource: Resource, searchRequest: SearchRequest, filter: Filter): boolean {\n  const searchParam = globalSchema.types[searchRequest.resourceType]?.searchParams?.[filter.code];\n  switch (searchParam?.type) {\n    case 'reference':\n      return matchesReferenceFilter(resource, filter, searchParam);\n    case 'string':\n      return matchesStringFilter(resource, filter, searchParam);\n    case 'token':\n      return matchesTokenFilter(resource, filter, searchParam);\n    case 'date':\n      return matchesDateFilter(resource, filter, searchParam);\n  }\n  // Unknown search parameter or search parameter type\n  // Default fail the check\n  return false;\n}\n\nfunction matchesReferenceFilter(resource: Resource, filter: Filter, searchParam: SearchParameter): boolean {\n  const values = evalFhirPath(searchParam.expression as string, resource) as (Reference | string)[];\n  const negated = isNegated(filter.operator);\n\n  if (filter.value === '' && values.length === 0) {\n    // If the filter operator is \"equals\", then the filter matches.\n    // If the filter operator is \"not equals\", then the filter does not match.\n    return filter.operator === Operator.EQUALS;\n  }\n\n  // Normalize the values array into reference strings\n  const references = values.map((value) => (typeof value === 'string' ? value : value.reference));\n\n  for (const filterValue of filter.value.split(',')) {\n    let match = references.includes(filterValue);\n    if (!match && filter.code === '_compartment') {\n      // Backwards compability for compartment search parameter\n      // In previous versions, the resource type was not required in compartment values\n      // So, \"123\" would match \"Patient/123\"\n      // We need to maintain this behavior for backwards compatibility\n      match = references.some((reference) => reference?.endsWith('/' + filterValue));\n    }\n    if (match) {\n      return !negated;\n    }\n  }\n  // If \"not equals\" and no matches, then return true\n  // If \"equals\" and no matches, then return false\n  return negated;\n}\n\nfunction matchesTokenFilter(resource: Resource, filter: Filter, searchParam: SearchParameter): boolean {\n  const details = getSearchParameterDetails(resource.resourceType, searchParam);\n  if (details.type === SearchParameterType.BOOLEAN) {\n    return matchesBooleanFilter(resource, filter, searchParam);\n  } else {\n    return matchesStringFilter(resource, filter, searchParam);\n  }\n}\n\nfunction matchesBooleanFilter(resource: Resource, filter: Filter, searchParam: SearchParameter): boolean {\n  const values = evalFhirPath(searchParam.expression as string, resource);\n  const expected = filter.value === 'true';\n  const result = values.includes(expected);\n  return isNegated(filter.operator) ? !result : result;\n}\n\nfunction matchesStringFilter(resource: Resource, filter: Filter, searchParam: SearchParameter): boolean {\n  const resourceValues = evalFhirPath(searchParam.expression as string, resource);\n  const filterValues = filter.value.split(',');\n  const negated = isNegated(filter.operator);\n  for (const resourceValue of resourceValues) {\n    for (const filterValue of filterValues) {\n      const match = matchesStringValue(resourceValue, filter.operator, filterValue);\n      if (match) {\n        return !negated;\n      }\n    }\n  }\n  // If \"not equals\" and no matches, then return true\n  // If \"equals\" and no matches, then return false\n  return negated;\n}\n\nfunction matchesStringValue(resourceValue: unknown, operator: Operator, filterValue: string): boolean {\n  let str = '';\n  if (resourceValue) {\n    if (typeof resourceValue === 'string') {\n      str = resourceValue;\n    } else if (typeof resourceValue === 'object') {\n      str = JSON.stringify(resourceValue);\n    }\n  }\n  return str.toLowerCase().includes(filterValue.toLowerCase());\n}\n\nfunction matchesDateFilter(resource: Resource, filter: Filter, searchParam: SearchParameter): boolean {\n  const resourceValues = evalFhirPath(searchParam.expression as string, resource);\n  const filterValues = filter.value.split(',');\n  const negated = isNegated(filter.operator);\n  for (const resourceValue of resourceValues) {\n    for (const filterValue of filterValues) {\n      const match = matchesDateValue(resourceValue as string, filter.operator, filterValue);\n      if (match) {\n        return !negated;\n      }\n    }\n  }\n  // If \"not equals\" and no matches, then return true\n  // If \"equals\" and no matches, then return false\n  return negated;\n}\n\nfunction matchesDateValue(resourceValue: string, operator: Operator, filterValue: string): boolean {\n  switch (operator) {\n    case Operator.STARTS_AFTER:\n    case Operator.GREATER_THAN:\n      return resourceValue > filterValue;\n    case Operator.GREATER_THAN_OR_EQUALS:\n      return resourceValue >= filterValue;\n    case Operator.ENDS_BEFORE:\n    case Operator.LESS_THAN:\n      return resourceValue < filterValue;\n    case Operator.LESS_THAN_OR_EQUALS:\n      return resourceValue <= filterValue;\n    case Operator.EQUALS:\n    case Operator.NOT_EQUALS:\n      return resourceValue === filterValue;\n  }\n  return false;\n}\n\nfunction isNegated(operator: Operator): boolean {\n  return operator === Operator.NOT_EQUALS || operator === Operator.NOT;\n}\n","import { OperationOutcome } from '@medplum/fhirtypes';\n\nconst OK_ID = 'ok';\nconst CREATED_ID = 'created';\nconst GONE_ID = 'gone';\nconst NOT_MODIFIED_ID = 'not-modified';\nconst NOT_FOUND_ID = 'not-found';\nconst UNAUTHORIZED_ID = 'unauthorized';\nconst FORBIDDEN_ID = 'forbidden';\nconst TOO_MANY_REQUESTS_ID = 'too-many-requests';\n\nexport const allOk: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: OK_ID,\n  issue: [\n    {\n      severity: 'information',\n      code: 'informational',\n      details: {\n        text: 'All OK',\n      },\n    },\n  ],\n};\n\nexport const created: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: CREATED_ID,\n  issue: [\n    {\n      severity: 'information',\n      code: 'informational',\n      details: {\n        text: 'Created',\n      },\n    },\n  ],\n};\n\nexport const notModified: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: NOT_MODIFIED_ID,\n  issue: [\n    {\n      severity: 'information',\n      code: 'informational',\n      details: {\n        text: 'Not Modified',\n      },\n    },\n  ],\n};\n\nexport const notFound: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: NOT_FOUND_ID,\n  issue: [\n    {\n      severity: 'error',\n      code: 'not-found',\n      details: {\n        text: 'Not found',\n      },\n    },\n  ],\n};\n\nexport const unauthorized: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: UNAUTHORIZED_ID,\n  issue: [\n    {\n      severity: 'error',\n      code: 'login',\n      details: {\n        text: 'Unauthorized',\n      },\n    },\n  ],\n};\n\nexport const forbidden: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: FORBIDDEN_ID,\n  issue: [\n    {\n      severity: 'error',\n      code: 'forbidden',\n      details: {\n        text: 'Forbidden',\n      },\n    },\n  ],\n};\n\nexport const gone: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: GONE_ID,\n  issue: [\n    {\n      severity: 'error',\n      code: 'deleted',\n      details: {\n        text: 'Gone',\n      },\n    },\n  ],\n};\n\nexport const tooManyRequests: OperationOutcome = {\n  resourceType: 'OperationOutcome',\n  id: TOO_MANY_REQUESTS_ID,\n  issue: [\n    {\n      severity: 'error',\n      code: 'throttled',\n      details: {\n        text: 'Too Many Requests',\n      },\n    },\n  ],\n};\n\nexport function badRequest(details: string, expression?: string): OperationOutcome {\n  return {\n    resourceType: 'OperationOutcome',\n    issue: [\n      {\n        severity: 'error',\n        code: 'invalid',\n        details: {\n          text: details,\n        },\n        expression: expression ? [expression] : undefined,\n      },\n    ],\n  };\n}\n\nexport function isOk(outcome: OperationOutcome): boolean {\n  return outcome.id === OK_ID || outcome.id === CREATED_ID || outcome.id === NOT_MODIFIED_ID;\n}\n\nexport function isNotFound(outcome: OperationOutcome): boolean {\n  return outcome.id === NOT_FOUND_ID;\n}\n\nexport function isGone(outcome: OperationOutcome): boolean {\n  return outcome.id === GONE_ID;\n}\n\nexport function getStatus(outcome: OperationOutcome): number {\n  if (outcome.id === OK_ID) {\n    return 200;\n  } else if (outcome.id === CREATED_ID) {\n    return 201;\n  } else if (outcome.id === NOT_MODIFIED_ID) {\n    return 304;\n  } else if (outcome.id === UNAUTHORIZED_ID) {\n    return 401;\n  } else if (outcome.id === FORBIDDEN_ID) {\n    return 403;\n  } else if (outcome.id === NOT_FOUND_ID) {\n    return 404;\n  } else if (outcome.id === GONE_ID) {\n    return 410;\n  } else if (outcome.id === TOO_MANY_REQUESTS_ID) {\n    return 429;\n  } else {\n    return 400;\n  }\n}\n\n/**\n * Asserts that the operation completed successfully and that the resource is defined.\n * @param outcome The operation outcome.\n * @param resource The resource that may or may not have been returned.\n */\nexport function assertOk<T>(outcome: OperationOutcome, resource: T | undefined): asserts resource is T {\n  if (!isOk(outcome) || resource === undefined) {\n    throw new OperationOutcomeError(outcome);\n  }\n}\n\nexport class OperationOutcomeError extends Error {\n  readonly outcome: OperationOutcome;\n\n  constructor(outcome: OperationOutcome) {\n    super(outcome?.issue?.[0].details?.text);\n    this.outcome = outcome;\n  }\n}\n\n/**\n * Normalizes an error object into a displayable error string.\n * @param error The error value which could be a string, Error, OperationOutcome, or other unknown type.\n * @returns A display string for the error.\n */\nexport function normalizeErrorString(error: unknown): string {\n  if (!error) {\n    return 'Unknown error';\n  }\n  if (typeof error === 'string') {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  if (typeof error === 'object' && 'resourceType' in error) {\n    const outcome = error as OperationOutcome;\n    return outcome.issue?.[0]?.details?.text ?? 'Unknown error';\n  }\n  return JSON.stringify(error);\n}\n"],"names":["toPreciseInteger","deepEquals","isObject","PropertyType","Operator","SearchParameterType"],"mappings":"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"}