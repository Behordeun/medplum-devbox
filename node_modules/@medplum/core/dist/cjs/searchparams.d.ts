import { ElementDefinition, SearchParameter } from '@medplum/fhirtypes';
export declare enum SearchParameterType {
    BOOLEAN = "BOOLEAN",
    NUMBER = "NUMBER",
    QUANTITY = "QUANTITY",
    TEXT = "TEXT",
    REFERENCE = "REFERENCE",
    DATE = "DATE",
    DATETIME = "DATETIME",
    PERIOD = "PERIOD"
}
export interface SearchParameterDetails {
    readonly columnName: string;
    readonly type: SearchParameterType;
    readonly elementDefinition?: ElementDefinition;
    readonly array?: boolean;
}
/**
 * Returns the type details of a SearchParameter.
 *
 * The SearchParameter resource has a "type" parameter, but that is missing some critical information.
 *
 * For example:
 *   1) The "date" type includes "date", "datetime", and "period".
 *   2) The "token" type includes enums and booleans.
 *   3) Arrays/multiple values are not reflected at all.
 *
 * @param resourceType The root resource type.
 * @param searchParam The search parameter.
 * @returns The search parameter type details.
 */
export declare function getSearchParameterDetails(resourceType: string, searchParam: SearchParameter): SearchParameterDetails;
export declare function getExpressionForResourceType(resourceType: string, expression: string): string | undefined;
